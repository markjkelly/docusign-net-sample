{
    "openapi": "3.0.0",
    "info": {
        "version": "v2.1",
        "title": "DocuSign REST API",
        "description": "The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.",
        "termsOfService": "https://www.docusign.com/company/terms-and-conditions/web",
        "contact": {
            "name": "DocuSign Developer Center",
            "url": "https://developers.docusign.com/",
            "email": "devcenter@docusign.com"
        }
    },
    "externalDocs": {
        "description": "See the DocuSign REST API Guide for more information.",
        "url": "https://docs.docusign.com/esign"
    },
    "paths": {
        "/v2.1/accounts/{accountId}/envelopes": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Search for specific sets of envelopes by using search filters.",
                "description": "This method lets you\n[search for envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/)\nin your accounts.\nA large set of filters let you narrow the scope of your search\nby date,\nby envelope ID,\nor by status codes.\nYour request must include one or more of the following parameters:\n\n* `from_date`\n* `envelope_ids`\n* `transaction_ids`\n\n<ds-inlinemessage kind=\"information\">\nThis method excludes envelopes older than six months.\n</ds-inlinemessage>\n\nTo avoid unnecessary database queries, the DocuSign\nsignature platform first checks requests to ensure that the\nfilter set supplied does not result in a zero-size response\nbefore querying the database.\n\nFor example, for a request with a `from_to_status` of\n`delivered` and a current `status` of `created,sent`,\nDocuSign will always return an empty list.\nThis is because the request translates to: find the\nenvelopes that were delivered between the `from_date` and\n`to_date` dates that have a current status of `created` or\n`sent`. Since an envelope that has been delivered can\nnever have a status of `created` or `sent`, a zero-size\nresponse would be generated.\nIn this case, DocuSign does not query the database\nand returns an empty list immediately.\n\nGetting envelope status using `transaction_ids` is useful\nfor offline signing situations where it can be used\ndetermine if an envelope was created or not. It can be used\nfor the cases where a network connection was lost, before\nthe envelope status could be returned.\n\nThe following table shows the valid current envelope\nstatuses (`status` parameter) for the different status\nqualifiers (`from_to_status` parameter) in the request. If\nthe status and status qualifiers in the API request do not\ncontain any of the values shown in the Valid Current\nStatuses column, then an empty list is returned.\n\nClient applications should check that the statuses (`status`\nparameter) they are requesting make sense for a given\n`from_to_status` parameter value.\n\n| Status Qualifier<br>(`from_to_status`) | Effective Status Qualifier | Valid Current Statuses                                                      |\n| :------------------------------------- | :------------------------- | :-------------------------------------------------------------------------- |\n| any (changed)                          | StatusChanged              | any, created, sent, delivered, signed, completed, declined, voided, deleted |\n| created                                | Created                    | any, created, sent, delivered, signed, completed, declined, voided, deleted |\n| sent                                   | Sent                       | any, sent, delivered, signed, completed, declined, voided, deleted          |\n| delivered                              | StatusChanged              | any, delivered, signed, completed, declined, voided, deleted                |\n| signed                                 | StatusChanged              | any, signed, completed, declined, voided, deleted                           |\n| completed                              | Completed                  | any, completed, declined, voided, deleted                                   |\n| declined                               | StatusChanged              | any, declined, voided, deleted                                              |\n| timedout<br>always return zero results | StatusChanged              | any, voided, deleted                                                        |\n| voided                                 | Voided                     | any, voided, deleted                                                        |\n| deleted                                | StatusChanged              | any, deleted                                                                |\n\n## Extraneous results\n\nIn some cases, a request for a specific envelope status will\ninclude envelopes with additional statuses. For example, in\na request with a `from_date` of 2017-01-01, a `to_date` of\n2017-01-07 and the status qualifier (`from_to_status`) set\nto `delivered`, the response set might contain envelopes\nthat were created during that time period, but not delivered\nduring the time period. As a workaround, check the envelope\nstatus values in the result set as needed.\n\n\n### Related topics\n\n- [Searching for envelopes](/docs/esign-rest-api/esign101/concepts/envelopes/search/)\n- [How to list envelope status changes](/docs/esign-rest-api/how-to/list-envelope-status-changes/)\n",
                "operationId": "Envelopes_GetEnvelopes",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID GUID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ac_status",
                        "in": "query",
                        "description": "Specifies the Authoritative Copy Status for the envelopes. Valid values: Unknown, Original, Transferred, AuthoritativeCopy, AuthoritativeCopyExportPending, AuthoritativeCopyExported, DepositPending, Deposited, DepositedEO, or DepositFailed.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "block",
                        "in": "query",
                        "required": false,
                        "description": "Reserved for DocuSign.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cdse_mode",
                        "in": "query",
                        "required": false,
                        "description": "Reserved for DocuSign.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "continuation_token",
                        "in": "query",
                        "required": false,
                        "description": "Reserved for DocuSign.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "required": false,
                        "description": "The maximum number of results to return.\n\nUse `start_position` to specify the number of results to skip.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "custom_field",
                        "in": "query",
                        "description": "Optional. Specifies an envelope custom field name and value searched for in the envelopes. Format: `custom_envelope_field_name=desired_value`\n\nExample: If you have an envelope custom field named \"Region\" and you want to search for all envelopes where the value is \"West\" you would use set this parameter to `Region=West`. \n \n",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "description": "Limit results to envelopes\nsent by the account user\nwith this email address.\n\n`user_name` must be given as well,\nand both `email` and `user_name`\nmust refer to an existing account user.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "envelope_ids",
                        "in": "query",
                        "required": false,
                        "description": "Comma separated list of `envelopeId` values.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude",
                        "in": "query",
                        "required": false,
                        "description": "Excludes information from the response. Enter  as a comma-separated list (e.g., `folders,powerforms`). Valid values are:\n\n- `recipients`\n- `powerforms`\n- `folders`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "folder_ids",
                        "in": "query",
                        "required": false,
                        "description": "Returns the envelopes from specific folders. Enter as a comma-separated list of either valid folder Guids or the following values: \n\n- `awaiting_my_signature`\n- `completed`\n- `draft`\n- `drafts`\n- `expiring_soon`\n- `inbox`\n- `out_for_signature`\n- `recyclebin`\n- `sentitems`\n- `waiting_for_others`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "folder_types",
                        "in": "query",
                        "required": false,
                        "description": "A comma-separated list of folder types you want to retrieve envelopes from. Valid values are: \n\n- `normal`\n- `inbox`\n- `sentitems`\n- `draft`\n- `templates`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Specifies the date and time\nto start looking for status changes.\nThis parameter is required\nunless `envelopeIds` or `transactionIds`\nare set.\n\n\nAlthough you can use any date format\nsupported by the .NET system library's\n[`DateTime.Parse()`][msoft] function,\nDocuSign recommends\nusing [ISO 8601][] format dates\nwith an explicit time zone offset\nIf you do not provide\na time zone offset,\nthe method uses the server's time zone.\n\nFor example, the following dates and times refer to the same instant:\n\n* `2017-05-02T01:44Z`\n* `2017-05-01T21:44-04:00`\n* `2017-05-01T18:44-07:00`\n\n\n[msoft]: https://docs.microsoft.com/en-us/dotnet/api/system.datetime.parse?redirectedfrom=MSDN&view=net-5.0#overloads\n[ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from_to_status",
                        "in": "query",
                        "description": "This is the status type checked for in the `from_date`/`to_date` period. If `changed` is specified, then envelopes that changed status during the period are found. If for example, `created` is specified, then envelopes created during the period are found. Default is `changed`. \n\nPossible values are: Voided, Changed, Created, Deleted, Sent, Delivered, Signed, Completed, Declined, TimedOut and Processing.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "description": "Specifies additional information to return  about the envelopes.\nUse a comma-separated list, such as `folders, recipients` to specify information.\nValid values are:\n\n- `custom_fields`: The custom fields associated with the envelope.\n- `documents`: The documents associated with the envelope.\n- `attachments`: The attachments associated with the envelope.\n- `extensions`: Information about the email settings associated with the envelope.\n- `folders`: The folders where the envelope exists.\n- `recipients`: The recipients associated with the envelope.\n- `payment_tabs`: The payment tabs associated with the envelope.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_purge_information",
                        "in": "query",
                        "required": false,
                        "description": "When **true,** information about envelopes that have been deleted is included in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "intersecting_folder_ids",
                        "in": "query",
                        "required": false,
                        "description": "A comma-separated list of folders that you want want to get envelopes from. Valid values are: \n\n- `normal`\n- `inbox`\n- `sentitems`\n- `draft`\n- `templates`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_queried_date",
                        "in": "query",
                        "required": false,
                        "description": "Returns envelopes that were modified prior to the specified date and time. \n\nExample: `2020-05-09T21:56:12.2500000Z`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "required": false,
                        "description": "Returns envelopes in either ascending (`asc`) or descending (`desc`) order.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "required": false,
                        "description": "Sorts results according to a specific property. Valid values are:\n\n- `last_modified`\n- `action_required`\n- `created`\n- `completed`\n- `envelope_name`\n- `expire`\n- `sent`\n- `signer_list`\n- `status`\n- `subject`\n- `user_name`\n- `status_changed`\n- `last_modified`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "powerformids",
                        "in": "query",
                        "required": false,
                        "description": "A comma-separated list of `PowerFormId` values.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query_budget",
                        "in": "query",
                        "required": false,
                        "description": "The time in seconds that the query should run before returning data.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requester_date_format",
                        "in": "query",
                        "required": false,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_mode",
                        "in": "query",
                        "required": false,
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_text",
                        "in": "query",
                        "required": false,
                        "description": "Free text search criteria that you can use to filter the list of envelopes that is returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_position",
                        "in": "query",
                        "required": false,
                        "description": "The zero-based index of the\nresult from which to start returning results.\n\nUse with `count` to limit the number\nof results.\n\nThe default value is `0`.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "A comma-separated list of current envelope statuses to included in the response. Possible values are:\n\n* `completed`\n* `created`\n* `declined`\n* `deleted`\n* `delivered`\n* `processing`\n* `sent`\n* `signed`\n* `timedout`\n* `voided`\n\nThe `any` value is equivalent to any status.\n",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Specifies the date and time\nto stop looking for status changes.\nThe default is the current date and time.\n\nAlthough you can use any date format\nsupported by the .NET system library's\n[`DateTime.Parse()`][msoft] function,\nDocuSign recommends\nusing [ISO 8601][] format dates\nwith an explicit time zone offset\nIf you do not provide\na time zone offset,\nthe method uses the server's time zone.\n\nFor example, the following dates and times refer to the same instant:\n\n* `2017-05-02T01:44Z`\n* `2017-05-01T21:44-04:00`\n* `2017-05-01T18:44-07:00`\n\n\n[msoft]: https://docs.microsoft.com/en-us/dotnet/api/system.datetime.parse?redirectedfrom=MSDN&view=net-5.0#overloads\n[ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601\n",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "transaction_ids",
                        "in": "query",
                        "description": "If included in the query string, this is a comma separated list of envelope `transactionId`s. \n\nIf included in the `request_body`, this is a list of envelope `transactionId`s. \n\n###### Note: `transactionId`s are only valid in the DocuSign system for seven days.\n",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_filter",
                        "in": "query",
                        "required": false,
                        "description": "Returns envelopes where the current user is the recipient, the sender, or the recipient only. (For example, `user_filter=sender`.) Valid values are:\n\n- `sender`\n- `recipient`\n- `recipient_only`",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "description": "The ID of the user who created the envelopes to be retrieved. Note that an account can have multiple users, and any user with account access can retrieve envelopes by user_id from the account.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_name",
                        "in": "query",
                        "required": false,
                        "description": "Limit results to envelopes\nsent by the account user\nwith this user name.\n\n`email` must be given as well,\nand both `email` and `user_name`\nmust refer to an existing account user.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/envelopesInformation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorDetails"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Creates an envelope.",
                "description": "Creates and sends an envelope or creates a draft envelope.\nEnvelopes are fundamental resources in the DocuSign platform.\n\n\nWith this method you can:\n\n* Create and send an envelope\n  with [documents][], [recipients][], and [tabs][].\n* [Create and send an envelope from a template](/docs/esign-rest-api/esign101/concepts/templates/).\n* [Create and send an envelope from\n  a combination of documents and templates](/docs/esign-rest-api/esign101/concepts/templates/composite/).\n* Create a draft envelope.\n\n\nWhen you use this method\nto create and send an envelope\nin a single request,\nthe following parameters in the request body (an [`envelopeDefinition`][envelopeDefinition] object) are required:\n\n| Parameter      | Description |\n| :--------      | :---------- |\n| `status`       | Set to `sent` to send the envelope to recipients.<br>Set to `created` (or don't set at all) to save the envelope as a draft. |\n| `emailSubject` | The subject of the email used to send the envelope. |\n| `documents`    | The [documents][] to be signed. |\n| `recipients`   | The email addresses of the envelope [recipients][]. |\n\n\nWhen you create an envelope by using a\n[composite template](/docs/esign-rest-api/esign101/concepts/templates/composite/),\nyou should specify the envelope custom fields in the inline template.\nAny custom fields that you specify at the root level are ignored.\n\nIf the envelope has a workflow definition\nand the `workflowStatus` is `paused`,\nthe envelope will not be sent immediately,\neven if the envelope's `status` is `sent`.\n\n\n### Related topics\n\n[Envelope][envelopes] and [template][templates]\nobjects along with [documents][documents],\n[recipients][recipients], and [tabs][tabs]\nare the five object models at the core of the eSignature API.\nThe [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/)\ndescribes how the five object models work together.\n\nThe following how-to articles contain\npractical examples that show you how to\nto\nconfigure this method's\n[`envelopeDefinition`][envelopeDefinition] request body\nto perform common tasks.\n\nRequesting a signature\n\n- [How to request a signature by email](/docs/esign-rest-api/how-to/request-signature-email-remote/)\n- [How to request a signature through your app](/docs/esign-rest-api/how-to/request-signature-in-app-embedded/)\n- [How to request a signature by email using a template](/docs/esign-rest-api/how-to/request-signature-template-remote/)\n- [How to request a signature using a composite template](/docs/esign-rest-api/how-to/request-signature-composite-template-embedded/)\n- [How to request a signature by SMS delivery](/docs/esign-rest-api/how-to/request-signature-sms/)\n- [How to send a request for payment](/docs/esign-rest-api/how-to/request-a-payment/)\n- [How to send an envelope to an In Person Signer](/docs/esign-rest-api/how-to/send-envelope-to-in-person-signer/)\n- [How to request a signature through your app (embedded signing) with a CFR Part 11 account](/docs/esign-rest-api/how-to/request-signature-in-app-embedded-cfrpart11/)\n\nWorking with envelopes and templates\n\n- [How to get envelope information](/docs/esign-rest-api/how-to/get-envelope-information/)\n- [How to list envelope recipients](/docs/esign-rest-api/how-to/get-envelope-recipients/)\n- [How to list envelope status changes](/docs/esign-rest-api/how-to/list-envelope-status-changes/)\n- [How to create a template](/docs/esign-rest-api/how-to/create-template/)\n- [How to send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)\n- [How to bulk send envelopes](/docs/esign-rest-api/how-to/bulk-send-envelopes/)\n\nWorking with advanced recipient routing\n\n- [How to pause a signature workflow](/docs/esign-rest-api/how-to/pause-workflow/)\n- [How to unpause a signature workflow](/docs/esign-rest-api/how-to/unpause-workflow/)\n- [How to use conditional recipients](/docs/esign-rest-api/how-to/use-conditional-recipients/)\n- [How to schedule an envelope](/docs/esign-rest-api/how-to/schedule-an-envelope/)\n- [How to send an envelope with delayed routing](/docs/esign-rest-api/how-to/send-envelope-with-delayed-routing/)\n\nWorking with documents\n\n- [How to list envelope documents](/docs/esign-rest-api/how-to/list-envelope-documents/)\n- [How to download envelope documents](/docs/esign-rest-api/how-to/download-envelope-documents/)\n- [How to attach documents via binary transfer](/docs/esign-rest-api/how-to/send-binary/)\n- [How to create a signable HTML document](/docs/esign-rest-api/how-to/creating-signable-html/)\n- [How to convert a PDF file into a signable HTML document](/docs/esign-rest-api/how-to/converting-pdf/)\n- [How to set document visibility for envelope recipients](/docs/esign-rest-api/how-to/set-document-visibility/)\n\nWorking with tabs\n\n- [How to get envelope tab values](/docs/esign-rest-api/how-to/get-envelope-tab-values/)\n- [How to get envelope custom tab values](/docs/esign-rest-api/how-to/get-envelope-custom-tab-values/)\n- [How to set envelope tab values](/docs/esign-rest-api/how-to/set-envelope-tab-values/)\n- [How to set tab values in a template](/docs/esign-rest-api/how-to/set-template-tab-values/)\n\nWorking with brands\n\n- [How to create a brand](/docs/esign-rest-api/how-to/create-brand/)\n- [How to apply a brand to an envelope](/docs/esign-rest-api/how-to/apply-brand-to-envelope/)\n- [How to apply a brand and template to an envelope](/docs/esign-rest-api/how-to/apply-brand-and-template-to-envelope/)\n\nWorking with permissions\n\n- [How to create a permission profile](/docs/esign-rest-api/how-to/permission-profile-creating/)\n- [How to update individual permission settings](/docs/esign-rest-api/how-to/permission-profile-updating/)\n- [How to set a permission profile](/docs/esign-rest-api/how-to/permission-profile-setting/)\n- [How to delete a permission profile](/docs/esign-rest-api/how-to/permission-profile-deleting/)\n\nImplementing multi-factor recipient (signer) authentication\n\n- [How to require ID verification (IDV) for a recipient](/docs/esign-rest-api/how-to/id-verification/)\n- [How to require knowledge-based authentication (KBA) for a recipient](/docs/esign-rest-api/how-to/knowledge-based-authentication/)\n- [How to require phone authentication for a recipient](/docs/esign-rest-api/how-to/phone-auth/)\n- [How to require access code authentication for a recipient](/docs/esign-rest-api/how-to/require-access-code-recipient/)\n\n<!-- this should mirror /docs/esign-rest-api/how-to/ -->\n\n\n\n[addingdocs]:           /docs/esign-rest-api/esign101/concepts/envelopes/\n[attachments]:          /docs/esign-rest-api/esign101/concepts/documents/attachments/\n[authcopies]:           /docs/esign-rest-api/esign101/concepts/documents/authoritative-copies/\n[conoverview]:          /docs/esign-rest-api/esign101/concepts/overview/\n[deleting]:             /docs/esign-rest-api/esign101/concepts/envelopes/\n[documents]:            /docs/esign-rest-api/esign101/concepts/documents/\n[envelopeDefinition]:   /docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition\n[envelopes]:            /docs/esign-rest-api/esign101/concepts/envelopes/\n[locking]:              /docs/esign-rest-api/esign101/concepts/envelopes/lock/\n[payments]:             /docs/esign-rest-api/esign101/concepts/tabs/payment/\n[purging]:              /docs/esign-rest-api/esign101/concepts/documents/purging/\n[recipients]:           /docs/esign-rest-api/esign101/concepts/recipients/\n[recipstatus]:          /docs/esign-rest-api/esign101/concepts/recipients/#recipient-status\n[reciptypes]:           /docs/esign-rest-api/esign101/concepts/recipients/#recipient-types\n[supdocs]:              /docs/esign-rest-api/esign101/concepts/documents/supplemental/\n[tabanchor]:            /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n[tabcustom]:            /docs/esign-rest-api/esign101/concepts/tabs/custom-tabs/\n[tabs]:                 /docs/esign-rest-api/esign101/concepts/tabs/\n[tabtypes]:             /docs/esign-rest-api/esign101/concepts/tabs/\n[templates]:            /docs/esign-rest-api/esign101/concepts/templates/\n[tracking]:             /docs/esign-rest-api/esign101/concepts/envelopes/\n\n",
                "operationId": "Envelopes_PostEnvelopes",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID GUID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cdse_mode",
                        "in": "query",
                        "required": false,
                        "description": "Reserved for DocuSign.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "change_routing_order",
                        "in": "query",
                        "required": false,
                        "description": "When true, users can define the routing order of recipients while sending documents for signature.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "completed_documents_only",
                        "in": "query",
                        "description": "Reserved for DocuSign.\n",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "merge_roles_on_draft",
                        "in": "query",
                        "description": "When **true,** template roles will be merged, and empty recipients will be removed. This parameter applies when you create a draft envelope with multiple templates. (To create a draft envelope, the `status` field is set to `created`.)\n\n**Note:** DocuSign recommends that this parameter should be set to **true** whenever you create a draft envelope with multiple templates.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/envelopeDefinition"
                },
                "responses": {
                    "201": {
                        "description": "Successful response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/envelopeSummary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorDetails"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": []
        },
        "/v2.1/accounts/{accountId}/envelopes/{envelopeId}": {
            "get": {
                "tags": [
                    "Envelopes"
                ],
                "summary": "Gets the status of a single envelope.",
                "description": "Retrieves the overall status for the specified envelope.\nTo get the status of a list of envelopes, use\n[Envelope: listStatusChanges ](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/).\n\n### Related topics\n\n- [How to get envelope information](/docs/esign-rest-api/how-to/get-envelope-information/)\n",
                "operationId": "Envelopes_GetEnvelope",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "description": "The external account number (int) or account ID GUID.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "envelopeId",
                        "in": "path",
                        "description": "The envelope's GUID. \n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "advanced_update",
                        "in": "query",
                        "description": "When **true,** envelope information can be added or modified.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "required": false,
                        "description": "Specifies additional information about the envelope to return. Enter a comma-separated list, such as `tabs,recipients`. Valid values are:\n\n- `custom_fields`: The custom fields associated with the envelope.\n- `documents`: The documents associated with the envelope.\n- `attachments`: The attachments associated with the envelope.\n- `extensions`: The email settings associated with the envelope.\n- `folders`: The folder where the envelope exists.\n- `recipients`: The recipients associated with the envelope.\n- `powerform`: The PowerForms associated with the envelope.\n- `tabs`: The tabs associated with the envelope.\n- `payment_tabs`: The payment tabs associated with the envelope.\n- `workflow`: The workflow definition associated with the envelope.\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/envelope"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error encountered.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/errorDetails"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": []
        }
    },
    "servers": [
        {
            "url": "https://www.docusign.net/restapi"
        }
    ],
    "components": {
        "requestBodies": {
            "contactModRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/contactModRequest"
                        }
                    }
                }
            },
            "recipientViewRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/recipientViewRequest"
                        }
                    }
                }
            },
            "EnvelopeDocumentFields": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EnvelopeDocumentFields"
                        }
                    }
                }
            },
            "workspace": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/workspace"
                        }
                    }
                }
            },
            "connectOAuthConfig": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectOAuthConfig"
                        }
                    }
                }
            },
            "brandsRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/brandsRequest"
                        }
                    }
                }
            },
            "emailSettings": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/emailSettings"
                        }
                    }
                },
                "description": "A complex type that contains email settings."
            },
            "templateCustomFields": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/templateCustomFields"
                        }
                    }
                }
            },
            "tabMetadata": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/tabMetadata"
                        }
                    }
                }
            },
            "lockRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/lockRequest"
                        }
                    }
                }
            },
            "groupInformation": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/groupInformation"
                        }
                    }
                }
            },
            "favoriteTemplatesInfo": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/favoriteTemplatesInfo"
                        }
                    }
                }
            },
            "chunkedUploadRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/chunkedUploadRequest"
                        }
                    }
                }
            },
            "templateDocumentVisibilityList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/templateDocumentVisibilityList"
                        }
                    }
                }
            },
            "userSignaturesInformation": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/userSignaturesInformation"
                        }
                    }
                }
            },
            "tabs": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/tabs"
                        }
                    }
                },
                "description": "A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients."
            },
            "delayedRouting": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/delayedRouting"
                        }
                    }
                },
                "description": "A complex element that specifies the delayed routing settings for the workflow step."
            },
            "workflowStep": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/workflowStep"
                        }
                    }
                }
            },
            "documentFieldsInformation": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/documentFieldsInformation"
                        }
                    }
                }
            },
            "brand": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/brand"
                        }
                    }
                }
            },
            "workflow": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/workflow"
                        }
                    }
                }
            },
            "userInfoList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/userInfoList"
                        }
                    }
                }
            },
            "signingGroupUsers": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/signingGroupUsers"
                        }
                    }
                },
                "description": "A complex type that contains information about users in the signing group."
            },
            "bulkSendRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/bulkSendRequest"
                        }
                    }
                }
            },
            "templateTabs": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/templateTabs"
                        }
                    }
                }
            },
            "bulkSendingList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/bulkSendingList"
                        }
                    }
                }
            },
            "connectCustomConfiguration": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/connectCustomConfiguration"
                        }
                    }
                }
            },
            "customField": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/customField"
                        }
                    }
                }
            },
            "envelopeDefinition": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/envelopeDefinition"
                        }
                    }
                }
            },
            "envelopeAttachmentsRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/envelopeAttachmentsRequest"
                        }
                    }
                }
            },
            "EnvelopeCustomFields": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EnvelopeCustomFields"
                        }
                    }
                }
            },
            "pageRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/pageRequest"
                        }
                    }
                }
            },
            "documentHtmlDefinition": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/documentHtmlDefinition"
                        }
                    }
                }
            },
            "documentTemplateList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/documentTemplateList"
                        }
                    }
                }
            },
            "EnvelopeRecipients": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EnvelopeRecipients"
                        }
                    }
                }
            },
            "documentVisibilityList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/documentVisibilityList"
                        }
                    }
                }
            },
            "EnvelopeRecipientTabs": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                        }
                    }
                }
            },
            "correctViewRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/correctViewRequest"
                        }
                    }
                }
            },
            "returnUrlRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/returnUrlRequest"
                        }
                    }
                }
            },
            "recipientPreviewRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/recipientPreviewRequest"
                        }
                    }
                }
            },
            "scheduledSending": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/scheduledSending"
                        }
                    }
                },
                "description": "An object that describes the settings for scheduled sending."
            },
            "permissionProfile": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/permissionProfile"
                        }
                    }
                }
            },
            "powerForm": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/powerForm"
                        }
                    }
                },
                "description": "Information about any PowerForms that are included in the envelope."
            },
            "accountSignaturesInformation": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/accountSignaturesInformation"
                        }
                    }
                }
            },
            "signingGroupInformation": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/signingGroupInformation"
                        }
                    }
                }
            },
            "envelopeTemplate": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/envelopeTemplate"
                        }
                    }
                }
            },
            "templateRecipients": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/templateRecipients"
                        }
                    }
                }
            },
            "cloudStorageProviders": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/cloudStorageProviders"
                        }
                    }
                }
            },
            "customSettingsInformation": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/customSettingsInformation"
                        }
                    }
                }
            },
            "watermark": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/watermark"
                        }
                    }
                },
                "description": "When **true,** the account has the watermark feature enabled, and the envelope is not complete, then the watermark for the account is added to the PDF documents. This option can remove the watermark. "
            },
            "notary": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/notary"
                        }
                    }
                }
            },
            "notaryJurisdiction": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/notaryJurisdiction"
                        }
                    }
                }
            }
        },
        "schemas": {
            "accessCodeFormat": {
                "type": "object",
                "properties": {
                    "formatRequired": {
                        "description": "Boolean specifying whether this format configuration is required.",
                        "type": "string"
                    },
                    "formatRequiredMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "letterRequired": {
                        "description": "Boolean specifying whether alphabetical characters are required in the access code string.",
                        "type": "string"
                    },
                    "letterRequiredMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "minimumLength": {
                        "description": "Minimum length of the access code string.",
                        "type": "string"
                    },
                    "minimumLengthMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "numberRequired": {
                        "description": "Boolean specifying whether numerical characters (0-9) are required in the access code string.",
                        "type": "string"
                    },
                    "numberRequiredMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "specialCharacterRequired": {
                        "description": "Boolean specifying whether special characters are required in the access code string. The string cannot contain the special characters '<', '>', '&', or '#'.",
                        "type": "string"
                    },
                    "specialCharacterRequiredMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    }
                },
                "description": "Object specifying the format of the string provided to a recipient in order to access an envelope.",
                "x-ds-definition-name": "accessCodeFormat",
                "x-ms-summary": "Object specifying the format of the string provided to a recipient in order to access an envelope."
            },
            "accountAddress": {
                "description": "Contains information about the address associated with the account.",
                "type": "object",
                "properties": {
                    "address1": {
                        "description": "The first line of the address. Maximum length: 100 characters.",
                        "type": "string"
                    },
                    "address2": {
                        "description": "The second line of the address. Maximum length: 100 characters.",
                        "type": "string"
                    },
                    "city": {
                        "description": "The city associated with the address. Maximum length: 40 characters.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The country associated with the address. Maximum length: 50 characters.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address associated with the account.",
                        "type": "string"
                    },
                    "fax": {
                        "description": "The fax number associated with the account.",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "The first name of the user associated with the account. Maximum Length: 50 characters.",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The last name of the user associated with the account.",
                        "type": "string"
                    },
                    "phone": {
                        "description": "The phone number associated with the account.",
                        "type": "string"
                    },
                    "postalCode": {
                        "description": "The postal code associated with the address. Maximum length: 20 characters.",
                        "type": "string"
                    },
                    "state": {
                        "description": "The state or province associated with the address. Maximum length: 40 characters.",
                        "type": "string"
                    },
                    "supportedCountries": {
                        "description": "An array of supported countries associated with the account.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/country"
                        }
                    }
                },
                "x-ds-definition-name": "accountAddress",
                "x-ms-summary": "Contains information about the address associated with the account."
            },
            "accountBillingPlan": {
                "description": "Contains information about an account billing plan.",
                "type": "object",
                "properties": {
                    "addOns": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/addOn"
                        }
                    },
                    "appStoreReceiptExpirationDate": {
                        "description": "",
                        "type": "string"
                    },
                    "appStoreReceiptPurchaseDate": {
                        "description": "",
                        "type": "string"
                    },
                    "canCancelRenewal": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "canUpgrade": {
                        "description": "When **true,** specifies that you can upgrade the account through the API. For GET methods, you must set the `include_metadata` query parameter to **true** for this property to appear in the response.",
                        "type": "string"
                    },
                    "currencyCode": {
                        "description": "Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code to use for the account.",
                        "type": "string"
                    },
                    "downgradePlanInformation": {
                        "$ref": "#/components/schemas/downgradePlanUpdateResponse"
                    },
                    "enableSupport": {
                        "description": "When **true,** customer support is provided as part of the account plan.",
                        "type": "string"
                    },
                    "includedSeats": {
                        "description": "The number of seats (users) included in the plan.",
                        "type": "string"
                    },
                    "incrementalSeats": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "isDowngrade": {
                        "description": "When **true,** the account has been downgraded from a premium account type. Otherwise **false.**",
                        "type": "string"
                    },
                    "notificationType": {
                        "description": "",
                        "type": "string"
                    },
                    "otherDiscountPercent": {
                        "description": " Any other percentage discount for the plan. ",
                        "type": "string"
                    },
                    "paymentCycle": {
                        "description": "The payment cycle associated with the plan. Valid values: \n\n- `Monthly`\n- `Annually` ",
                        "type": "string"
                    },
                    "paymentMethod": {
                        "description": " The payment method used with the plan. Valid values: CreditCard, PurchaseOrder, Premium, or Freemium. ",
                        "type": "string"
                    },
                    "perSeatPrice": {
                        "description": "The per-seat price associated with the plan.\n\nExample: `\"456.0000\"`",
                        "type": "string"
                    },
                    "planClassification": {
                        "description": "Identifies the type of plan. Examples include:\n\n- `business`\n- `corporate`\n- `enterprise` \n- `free`",
                        "type": "string"
                    },
                    "planFeatureSets": {
                        "description": "A complex type that sets the feature sets for the account. It contains the following information (all string content):\n\n* currencyFeatureSetPrices - Contains the currencyCode and currencySymbol for the alternate currency values for envelopeFee, fixedFee, seatFee that are configured for this plan feature set.\n* envelopeFee - An incremental envelope cost for plans with envelope overages (when isEnabled=true).\n* featureSetId - A unique ID for the feature set.\n* fixedFee - A one-time fee associated with the plan (when isEnabled=true).\n* isActive - Specifies whether the feature set is actively set as part of the plan.\n* isEnabled - Specifies whether the feature set is actively enabled as part of the plan.\n* name - The name of the feature set.\n* seatFee - An incremental seat cost for seat-based plans (when isEnabled=true).\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureSet"
                        }
                    },
                    "planId": {
                        "description": "DocuSign's ID for the account plan.",
                        "type": "string"
                    },
                    "planName": {
                        "description": "The name of the Billing Plan.",
                        "type": "string"
                    },
                    "planStartDate": {
                        "description": "The date that the Account started using the current plan.",
                        "type": "string"
                    },
                    "productId": {
                        "description": "The Product ID from the AppStore.",
                        "type": "string"
                    },
                    "renewalDate": {
                        "description": "",
                        "type": "string"
                    },
                    "renewalStatus": {
                        "description": "The renewal status for the account. Valid values are:\n\n* `auto`: The account automatically renews.\n* `queued_for_close`: The account will be closed at the `billingPeriodEndDate`.\n* `queued_for_downgrade`: The account will be downgraded at the `billingPeriodEndDate`.\n\n**Note:** For GET methods, you must set the `include_metadata` query parameter to **true** for this property to appear in the response.",
                        "type": "string"
                    },
                    "seatDiscounts": {
                        "description": " A complex type that contains any seat discount information. Valid values:\n \n - `BeginSeatCount` \n - `EndSeatCount`\n - `SeatDiscountPercent`\n \n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/seatDiscount"
                        }
                    },
                    "subscriptionStartDate": {
                        "description": "",
                        "type": "string"
                    },
                    "supportIncidentFee": {
                        "description": "The support incident fee charged for each support incident.\n\nExample: `\"$0.00\"`",
                        "type": "string"
                    },
                    "supportPlanFee": {
                        "description": "The support plan fee charged for this plan.\n\nExample: `\"$0.00\"`",
                        "type": "string"
                    },
                    "taxExemptId": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountBillingPlan",
                "x-ms-summary": "Contains information about an account billing plan."
            },
            "accountBillingPlanResponse": {
                "description": "Defines an account billing plan response object.",
                "type": "object",
                "properties": {
                    "billingAddress": {
                        "$ref": "#/components/schemas/accountAddress"
                    },
                    "billingAddressIsCreditCardAddress": {
                        "description": "When **true,** the credit card address information is the same as that returned as the billing address. If false, then the billing address is considered a billing contact address, and the credit card address can be different.",
                        "type": "string"
                    },
                    "billingPlan": {
                        "$ref": "#/components/schemas/accountBillingPlan"
                    },
                    "creditCardInformation": {
                        "$ref": "#/components/schemas/creditCardInformation"
                    },
                    "directDebitProcessorInformation": {
                        "$ref": "#/components/schemas/directDebitProcessorInformation"
                    },
                    "downgradePlanInformation": {
                        "$ref": "#/components/schemas/downgradePlanUpdateResponse"
                    },
                    "downgradeRequestInformation": {
                        "$ref": "#/components/schemas/downgradeRequestInformation"
                    },
                    "entityInformation": {
                        "$ref": "#/components/schemas/billingEntityInformationResponse"
                    },
                    "paymentMethod": {
                        "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
                        "type": "string"
                    },
                    "paymentProcessorInformation": {
                        "$ref": "#/components/schemas/paymentProcessorInformation"
                    },
                    "referralInformation": {
                        "$ref": "#/components/schemas/referralInformation"
                    },
                    "successorPlans": {
                        "description": "A list of billing plans that the current billing plan can be rolled into.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingPlan"
                        }
                    },
                    "taxExemptId": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountBillingPlanResponse",
                "x-ms-summary": "Defines an account billing plan response object."
            },
            "accountIdentityInputOption": {
                "type": "object",
                "properties": {
                    "isRequired": {
                        "description": "",
                        "type": "boolean"
                    },
                    "optionName": {
                        "description": "",
                        "type": "string"
                    },
                    "valueType": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountIdentityInputOption",
                "description": "",
                "x-ms-summary": ""
            },
            "accountIdentityVerificationResponse": {
                "type": "object",
                "properties": {
                    "identityVerification": {
                        "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountIdentityVerificationWorkflow"
                        }
                    }
                },
                "x-ds-definition-name": "accountIdentityVerificationResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "accountIdentityVerificationStep": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the Identity Verification workflow step.",
                        "type": "string"
                    },
                    "type": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "description": "Information about a specific step in an Identity Verification workflow.",
                "x-ds-definition-name": "accountIdentityVerificationStep",
                "x-ms-summary": "Information about a specific step in an Identity Verification workflow."
            },
            "accountIdentityVerificationWorkflow": {
                "type": "object",
                "properties": {
                    "defaultDescription": {
                        "description": "Text describing the purpose of the Identity Verification workflow.",
                        "type": "string"
                    },
                    "defaultName": {
                        "description": "The name of the Identity Verification workflow.",
                        "type": "string"
                    },
                    "inputOptions": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountIdentityInputOption"
                        }
                    },
                    "isDisabled": {
                        "description": "When **true,** the workflow is disabled.",
                        "type": "string"
                    },
                    "ownerType": {
                        "description": "",
                        "type": "string"
                    },
                    "signatureProvider": {
                        "$ref": "#/components/schemas/accountSignatureProvider"
                    },
                    "workflowId": {
                        "description": "Workflow unique ID</br>This is the ID you must specify when setting ID Verification in an envelope using the `identityVerification`\n[core recipient parameter](/docs/esign-rest-api/reference/envelopes/enveloperecipients/#core-recipient-parameters)",
                        "type": "string"
                    },
                    "workflowLabel": {
                        "description": "",
                        "type": "string"
                    },
                    "workflowResourceKey": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "description": "Specifies an Identity Verification workflow.",
                "x-ds-definition-name": "accountIdentityVerificationWorkflow",
                "x-ms-summary": "Specifies an Identity Verification workflow."
            },
            "accountInformation": {
                "description": "Contains account Information.",
                "type": "object",
                "properties": {
                    "accountIdGuid": {
                        "description": "The GUID associated with the account ID.",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "The name of the current account.",
                        "type": "string"
                    },
                    "accountSettings": {
                        "$ref": "#/components/schemas/accountSettingsInformation"
                    },
                    "allowTransactionRooms": {
                        "description": "When **true,** the transaction rooms feature exposed through the Workspaces API is enabled.",
                        "type": "string"
                    },
                    "billingPeriodDaysRemaining": {
                        "description": "Number of days remaining in the current billing period.",
                        "type": "string"
                    },
                    "billingPeriodEndDate": {
                        "description": "The billing period end date in UTC timedate format.",
                        "type": "string"
                    },
                    "billingPeriodEnvelopesAllowed": {
                        "description": "The number of envelopes that can be sent in the current billing period (can be unlimited).",
                        "type": "string"
                    },
                    "billingPeriodEnvelopesSent": {
                        "description": "The number of envelopes that have been sent in the current billing period.",
                        "type": "string"
                    },
                    "billingPeriodStartDate": {
                        "description": "The billing period start date in UTC timedate format.",
                        "type": "string"
                    },
                    "billingProfile": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "brands": {
                        "$ref": "#/components/schemas/AccountBrands"
                    },
                    "canUpgrade": {
                        "description": "When **true,** specifies that you can upgrade the account through the API. For GET methods, you must set the `include_metadata` query parameter to **true** for this property to appear in the response.",
                        "type": "string"
                    },
                    "connectPermission": {
                        "description": "",
                        "type": "string"
                    },
                    "createdDate": {
                        "description": "The creation date of the account in UTC timedate format.",
                        "type": "string"
                    },
                    "currencyCode": {
                        "description": "Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the account.",
                        "type": "string"
                    },
                    "currentPlanId": {
                        "description": "ID of the plan used to create this account.",
                        "type": "string"
                    },
                    "displayApplianceStartUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "displayApplianceUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "distributorCode": {
                        "description": "The code that identifies the billing plan groups and plans for the new account.",
                        "type": "string"
                    },
                    "docuSignLandingUrl": {
                        "description": "URL of the landing page used to create the account.",
                        "type": "string"
                    },
                    "dssValues": {
                        "description": "",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "envelopeSendingBlocked": {
                        "description": "When **true,** the ability to send envelopes is blocked. When **false,** envelopes can be sent.",
                        "type": "string"
                    },
                    "envelopeUnitPrice": {
                        "description": "The price of sending an envelope, represented in the account's local currency.",
                        "type": "string"
                    },
                    "externalAccountId": {
                        "description": "The Account ID displayed on the user's Account page.",
                        "type": "string"
                    },
                    "forgottenPasswordQuestionsCount": {
                        "description": " A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.",
                        "type": "string"
                    },
                    "isDowngrade": {
                        "description": "When **true,** the account has been downgraded from a premium account type. Otherwise **false.**",
                        "type": "string"
                    },
                    "paymentMethod": {
                        "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
                        "type": "string"
                    },
                    "planClassification": {
                        "description": "Identifies the type of plan. Examples include:\n\n- `business`\n- `corporate`\n- `enterprise` \n- `free`",
                        "type": "string"
                    },
                    "planEndDate": {
                        "description": "The date that the current plan will end.",
                        "type": "string"
                    },
                    "planName": {
                        "description": "The name of the Billing Plan.",
                        "type": "string"
                    },
                    "planStartDate": {
                        "description": "The date that the Account started using the current plan.",
                        "type": "string"
                    },
                    "recipientDomains": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientDomain"
                        }
                    },
                    "seatsAllowed": {
                        "description": "The number of active users the account can have at one time.",
                        "type": "string"
                    },
                    "seatsInUse": {
                        "description": "The number of users currently active on the account.",
                        "type": "string"
                    },
                    "status21CFRPart11": {
                        "description": "The status of the account content per (Title 21 CFR Part 11)[https://www.fda.gov/regulatory-information/search-fda-guidance-documents/part-11-electronic-records-electronic-signatures-scope-and-application]. This regulation defines the criteria under which electronic records and electronic signatures are considered trustworthy.",
                        "type": "string"
                    },
                    "suspensionDate": {
                        "description": "The date on which the account was suspended.",
                        "type": "string"
                    },
                    "suspensionStatus": {
                        "description": "Indicates whether the account is currently suspended.",
                        "type": "string"
                    },
                    "useDisplayAppliance": {
                        "description": "",
                        "type": "boolean"
                    }
                },
                "x-ds-definition-name": "accountInformation",
                "x-ms-summary": "Contains account Information."
            },
            "accountMinimumPasswordLength": {
                "type": "object",
                "properties": {
                    "maximumLength": {
                        "description": "The maximum number of entry characters supported by the custom tab.",
                        "type": "string"
                    },
                    "minimumLength": {
                        "description": "Minimum length of the access code string.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountMinimumPasswordLength",
                "description": "",
                "x-ms-summary": ""
            },
            "accountNotification": {
                "type": "object",
                "properties": {
                    "expirations": {
                        "$ref": "#/components/schemas/expirations"
                    },
                    "reminders": {
                        "$ref": "#/components/schemas/reminders"
                    },
                    "userOverrideEnabled": {
                        "description": "When **true,** the user can override envelope expirations.",
                        "type": "string"
                    }
                },
                "description": "A complex element that specifies notifications (expirations and reminders) for the envelope.",
                "x-ds-definition-name": "accountNotification",
                "x-ms-summary": "A complex element that specifies notifications (expirations and reminders) for the envelope."
            },
            "accountPasswordExpirePasswordDays": {
                "type": "object",
                "properties": {
                    "maximumDays": {
                        "description": "",
                        "type": "string"
                    },
                    "minimumDays": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountPasswordExpirePasswordDays",
                "description": "",
                "x-ms-summary": ""
            },
            "accountPasswordLockoutDurationMinutes": {
                "type": "object",
                "properties": {
                    "maximumMinutes": {
                        "description": "",
                        "type": "string"
                    },
                    "minimumMinutes": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountPasswordLockoutDurationMinutes",
                "description": "",
                "x-ms-summary": ""
            },
            "accountPasswordLockoutDurationType": {
                "type": "object",
                "properties": {
                    "options": {
                        "description": "An array of option strings supported by this setting.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-ds-definition-name": "accountPasswordLockoutDurationType",
                "description": "",
                "x-ms-summary": ""
            },
            "accountPasswordMinimumPasswordAgeDays": {
                "type": "object",
                "properties": {
                    "maximumAge": {
                        "description": "",
                        "type": "string"
                    },
                    "minimumAge": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountPasswordMinimumPasswordAgeDays",
                "description": "",
                "x-ms-summary": ""
            },
            "accountPasswordQuestionsRequired": {
                "type": "object",
                "properties": {
                    "maximumQuestions": {
                        "description": "The maximum number of password reset questions allowed for the account. This number must be between `0` and `4`, and equal to or greater than `minimumQuestions`.",
                        "type": "string"
                    },
                    "minimumQuestions": {
                        "description": "The minimum number of password reset questions allowed for the account. This number must be between `0` and `4`, and equal to or less than `maximumQuestions`.",
                        "type": "string"
                    }
                },
                "description": "Information about the number of password questions required (0 to 4) to confirm a user's identity when a user needs to reset their password.",
                "x-ds-definition-name": "accountPasswordQuestionsRequired",
                "x-ms-summary": "Information about the number of password questions required (0 to 4) to confirm a user's identity when a user needs to reset their password."
            },
            "accountPasswordRules": {
                "type": "object",
                "properties": {
                    "expirePassword": {
                        "description": "When **true,** passwords expire. The default value is `false`.",
                        "type": "string"
                    },
                    "expirePasswordDays": {
                        "description": "The number of days before passwords expire. To use this property, the `expirePassword` property must be set to **true.**",
                        "type": "string"
                    },
                    "expirePasswordDaysMetadata": {
                        "$ref": "#/components/schemas/accountPasswordExpirePasswordDays"
                    },
                    "lockoutDurationMinutes": {
                        "description": "The number of minutes a user is locked out of the system after three failed login attempts. The default value is `2`.",
                        "type": "string"
                    },
                    "lockoutDurationMinutesMetadata": {
                        "$ref": "#/components/schemas/accountPasswordLockoutDurationMinutes"
                    },
                    "lockoutDurationType": {
                        "description": "The interval associated with the user lockout after a failed login attempt.\n\nPossible values are:\n\n- `minutes` (default)\n- `hours`\n- `days`",
                        "type": "string"
                    },
                    "lockoutDurationTypeMetadata": {
                        "$ref": "#/components/schemas/accountPasswordLockoutDurationType"
                    },
                    "minimumPasswordAgeDays": {
                        "description": "The minimum number of days after a password is set before it can be changed. This value can be `0` or more days. The default value is `0`.",
                        "type": "string"
                    },
                    "minimumPasswordAgeDaysMetadata": {
                        "$ref": "#/components/schemas/accountPasswordMinimumPasswordAgeDays"
                    },
                    "minimumPasswordLength": {
                        "description": "The minimum number of characters in the password. This value must be a number between `6` and `15`. The default value is `6`.",
                        "type": "string"
                    },
                    "minimumPasswordLengthMetadata": {
                        "$ref": "#/components/schemas/accountMinimumPasswordLength"
                    },
                    "passwordIncludeDigit": {
                        "description": "When **true,** passwords must include a digit. The default value is `false`.",
                        "type": "string"
                    },
                    "passwordIncludeDigitOrSpecialCharacter": {
                        "description": "When **true,** passwords must include either a digit or a special character. The default value is `false`.\n\n**Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.",
                        "type": "string"
                    },
                    "passwordIncludeLowerCase": {
                        "description": "When **true,** passwords must include a lowercase letter. The default value is `false`.",
                        "type": "string"
                    },
                    "passwordIncludeSpecialCharacter": {
                        "description": "When **true,** passwords must include a special character. The default value is `false`.\n\n**Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.",
                        "type": "string"
                    },
                    "passwordIncludeUpperCase": {
                        "description": "When **true,** passwords must include an uppercase letter. The default value is `false`.",
                        "type": "string"
                    },
                    "passwordStrengthType": {
                        "description": "The type of password strength. Possible values are:\n\n- `basic`: The minimum password length is 6 characters with no other password requirements.\n- `medium`: The minimum password length is 7 characters. Passwords must also have one uppercase letter, one lowercase letter, and one number or special character.\n- `strong`: The minimum password length is 9 characters. Passwords must also have one uppercase letter, one lowercase letter, one number, and one special character.\n- `custom`: This option enables you to customize password requirements, including the following properties:\n\n   - `minimumPasswordLength`\n   - `minimumPasswordAgeDays`\n   - `passwordIncludeDigit`\n   - `passwordIncludeDigitOrSpecialCharacter`\n   - `passwordIncludeLowerCase`\n   - `passwordIncludeSpecialCharacter`\n   - `passwordIncludeUpperCase`\n   - `questionsRequired`",
                        "type": "string"
                    },
                    "passwordStrengthTypeMetadata": {
                        "$ref": "#/components/schemas/accountPasswordStrengthType"
                    },
                    "questionsRequired": {
                        "description": "The number of security questions required to confirm the user’s identity before the user can reset their password. The default value is `0`.",
                        "type": "string"
                    },
                    "questionsRequiredMetadata": {
                        "$ref": "#/components/schemas/accountPasswordQuestionsRequired"
                    }
                },
                "x-ds-definition-name": "accountPasswordRules",
                "description": "",
                "x-ms-summary": ""
            },
            "accountPasswordStrengthType": {
                "type": "object",
                "properties": {
                    "options": {
                        "description": "An array of option strings supported by this setting.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountPasswordStrengthTypeOption"
                        }
                    }
                },
                "x-ds-definition-name": "accountPasswordStrengthType",
                "description": "",
                "x-ms-summary": ""
            },
            "accountPasswordStrengthTypeOption": {
                "type": "object",
                "properties": {
                    "minimumLength": {
                        "description": "Minimum length of the access code string.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "passwordIncludeDigit": {
                        "description": "When **true,** passwords must include a digit. The default value is `false`.",
                        "type": "string"
                    },
                    "passwordIncludeDigitOrSpecialCharacter": {
                        "description": "When **true,** passwords must include either a digit or a special character. The default value is `false`.\n\n**Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.",
                        "type": "string"
                    },
                    "passwordIncludeLowerCase": {
                        "description": "When **true,** passwords must include a lowercase letter. The default value is `false`.",
                        "type": "string"
                    },
                    "passwordIncludeSpecialCharacter": {
                        "description": "When **true,** passwords must include a special character. The default value is `false`.\n\n**Note:** Passwords cannot include angle brackets (`<` `>`) or spaces.",
                        "type": "string"
                    },
                    "passwordIncludeUpperCase": {
                        "description": "When **true,** passwords must include an uppercase letter. The default value is `false`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountPasswordStrengthTypeOption",
                "description": "",
                "x-ms-summary": ""
            },
            "accountRoleSettings": {
                "type": "object",
                "properties": {
                    "allowAccountManagement": {
                        "description": "When **true,** users have full administrative access to the account.",
                        "type": "string"
                    },
                    "allowAccountManagementMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowApiAccess": {
                        "description": "When **true,** users can manage documents by using the API.",
                        "type": "string"
                    },
                    "allowApiAccessMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowApiAccessToAccount": {
                        "description": "When **true,** users can access the account by using the eSignature API.",
                        "type": "string"
                    },
                    "allowApiAccessToAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowApiSendingOnBehalfOfOthers": {
                        "description": "When **true,** users can send envelopes on behalf of others.",
                        "type": "string"
                    },
                    "allowApiSendingOnBehalfOfOthersMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowApiSequentialSigning": {
                        "description": "When **true,** users may specify sequential signing recipients when they send documents by using the API.",
                        "type": "string"
                    },
                    "allowApiSequentialSigningMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAutoTagging": {
                        "description": " When **true,** auto-tagging is enabled for the account.",
                        "type": "string"
                    },
                    "allowAutoTaggingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowBulkSending": {
                        "description": "When **true,** bulk sending is enabled for users.",
                        "type": "string"
                    },
                    "allowBulkSendingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowDocuSignDesktopClient": {
                        "description": "When **true,** the DocuSign Desktop Client is enabled for users.\n",
                        "type": "string"
                    },
                    "allowDocuSignDesktopClientMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowedAddressBookAccess": {
                        "description": "Specifies the level of access that users have to the account's address book. Valid values are:\n\n- `personal`\n- `useShared`\n- `usePersonalAndShared`\n- `personalAndShared`\n",
                        "type": "string"
                    },
                    "allowedAddressBookAccessMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowedClickwrapsAccess": {
                        "description": "",
                        "type": "string"
                    },
                    "allowedClickwrapsAccessMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowedOrchestrationAccess": {
                        "description": "",
                        "type": "string"
                    },
                    "allowedOrchestrationAccessMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowedTemplateAccess": {
                        "description": "Specifies the level of access that users have to account templates. Valid values are: \n\n- `none` \n- `use`\n- `create`\n- `share`",
                        "type": "string"
                    },
                    "allowedTemplateAccessMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowedToBeEnvelopeTransferRecipient": {
                        "description": "When **true,** users can be recipients of envelopes transferred to them by administrators of other accounts. ",
                        "type": "string"
                    },
                    "allowedToBeEnvelopeTransferRecipientMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEnvelopeSending": {
                        "description": "When **true,** users can send envelopes.",
                        "type": "string"
                    },
                    "allowEnvelopeSendingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowESealRecipients": {
                        "description": "When **true,** users can add electronic seal ([eSeal](https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html)) recipients.",
                        "type": "string"
                    },
                    "allowESealRecipientsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowPowerFormsAdminToAccessAllPowerFormEnvelopes": {
                        "description": "When **true,** PowerForm Administrators can access all of the PowerForm envelopes associated with the account.",
                        "type": "string"
                    },
                    "allowPowerFormsAdminToAccessAllPowerFormEnvelopesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSendersToSetRecipientEmailLanguage": {
                        "description": "When **true,** senders can set the language of the email that is sent to recipients.",
                        "type": "string"
                    },
                    "allowSendersToSetRecipientEmailLanguageMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSignerAttachments": {
                        "description": "When **true,** users can add requests for attachments from signers.",
                        "type": "string"
                    },
                    "allowSignerAttachmentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSupplementalDocuments": {
                        "description": "When **true,** senders can include supplemental documents.",
                        "type": "string"
                    },
                    "allowSupplementalDocumentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowTaggingInSendAndCorrect": {
                        "description": "When **true,** the tagger palette is visible during the sending and correct flows and users can add tabs to documents.",
                        "type": "string"
                    },
                    "allowTaggingInSendAndCorrectMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowTransactions": {
                        "description": "",
                        "type": "string"
                    },
                    "allowTransactionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowVaulting": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "allowVaultingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowWetSigningOverride": {
                        "description": "When **true,** users can override the default account setting that controls whether recipients can sign documents on paper. The option to overrride this setting occurs during the sending process on a per-envelope basis.",
                        "type": "string"
                    },
                    "allowWetSigningOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canCreateTransaction": {
                        "description": "",
                        "type": "string"
                    },
                    "canCreateTransactionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canCreateWorkspaces": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "canCreateWorkspacesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canDeleteDocumentsInTransaction": {
                        "description": "",
                        "type": "string"
                    },
                    "canDeleteDocumentsInTransactionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canDeleteTransaction": {
                        "description": "",
                        "type": "string"
                    },
                    "canDeleteTransactionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canSendEnvelopesViaSMS": {
                        "description": "",
                        "type": "string"
                    },
                    "canSendEnvelopesViaSMSMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableDocumentUpload": {
                        "description": "When **true,** users cannot upload documents.",
                        "type": "string"
                    },
                    "disableDocumentUploadMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableOtherActions": {
                        "description": "When **true,** users can access the **Other Actions** menu.",
                        "type": "string"
                    },
                    "disableOtherActionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableApiRequestLogging": {
                        "description": "When **true,** API request logging is enabled.\n\n**Note:** Logging limits apply.",
                        "type": "string"
                    },
                    "enableApiRequestLoggingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableKeyTermsSuggestionsByDocumentType": {
                        "description": "",
                        "type": "string"
                    },
                    "enableKeyTermsSuggestionsByDocumentTypeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableRecipientViewingNotifications": {
                        "description": "When **true,** senders are notified when recipients view the documents that they send.",
                        "type": "string"
                    },
                    "enableRecipientViewingNotificationsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSequentialSigningInterface": {
                        "description": "When **true,** the sequential signing user interface is enabled.",
                        "type": "string"
                    },
                    "enableSequentialSigningInterfaceMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableTransactionPointIntegration": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "enableTransactionPointIntegrationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "powerFormRole": {
                        "description": "The PowerForms rights associated with the account permission profile. Valid values are:\n\n- `none` \n- `user` \n- `admin`\n",
                        "type": "string"
                    },
                    "powerFormRoleMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "receiveCompletedSelfSignedDocumentsAsEmailLinks": {
                        "description": "When **true,** senders receive emails about completed, self-signed documents that contain links to the completed documents instead of PDF attachments.",
                        "type": "string"
                    },
                    "receiveCompletedSelfSignedDocumentsAsEmailLinksMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signingUiVersionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "supplementalDocumentsMustAccept": {
                        "description": "When **true,** senders can require recipients to accept supplemental documents.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustAcceptMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "supplementalDocumentsMustRead": {
                        "description": "When **true,** senders can require recipients to read supplemental documents.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustReadMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "supplementalDocumentsMustView": {
                        "description": "When **true,** users can require recipients to view supplemental documents.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustViewMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useNewDocuSignExperienceInterface": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "useNewDocuSignExperienceInterfaceMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useNewSendingInterface": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "useNewSendingInterfaceMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "vaultingMode": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "vaultingModeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "webForms": {
                        "description": "",
                        "type": "string"
                    },
                    "webFormsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    }
                },
                "description": "This object defines account permissions for users who are associated with the account permission profile. ",
                "x-ds-definition-name": "accountRoleSettings",
                "x-ms-summary": "This object defines account permissions for users who are associated with the account permission profile. "
            },
            "accountSeals": {
                "type": "object",
                "properties": {
                    "seals": {
                        "description": "A list of electronic seals to apply to documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/sealIdentifier"
                        }
                    }
                },
                "x-ds-definition-name": "accountSeals",
                "description": "",
                "x-ms-summary": ""
            },
            "accountSettingsInformation": {
                "description": "Contains account settings information. Used in requests to set property values. Used in responses to report property values.",
                "type": "object",
                "properties": {
                    "accessCodeFormat": {
                        "$ref": "#/components/schemas/accessCodeFormat"
                    },
                    "accountDateTimeFormat": {
                        "description": "UTC date/time format for the account.",
                        "type": "string"
                    },
                    "accountDateTimeFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "accountDefaultLanguage": {
                        "description": "",
                        "type": "string"
                    },
                    "accountDefaultLanguageMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "accountName": {
                        "description": "The name on the account.",
                        "type": "string"
                    },
                    "accountNameMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "accountNotification": {
                        "$ref": "#/components/schemas/accountNotification"
                    },
                    "accountUISettings": {
                        "$ref": "#/components/schemas/accountUISettings"
                    },
                    "adoptSigConfig": {
                        "description": "When **true,** [Signature Adoption Configuration](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=dsz1583277358168.html) is enabled. \n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "adoptSigConfigMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "advancedCorrect": {
                        "description": "When **true,** the Advanced Correction feature is enabled for this account.",
                        "type": "string"
                    },
                    "advancedCorrectMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "advancedSearchEnableTabField": {
                        "description": "",
                        "type": "string"
                    },
                    "advancedSearchEnableTabFieldMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "advancedSearchEnableTemplateIdField": {
                        "description": "",
                        "type": "string"
                    },
                    "advancedSearchEnableTemplateIdFieldMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "advancedSearchEnableTemplateNameField": {
                        "description": "",
                        "type": "string"
                    },
                    "advancedSearchEnableTemplateNameFieldMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAccessCodeFormat": {
                        "description": "When **true,** the configured [Access Code Format](/docs/esign-rest-api/reference/accounts/accounts/get/#accessCodeFormat) page is enabled for account administrators.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowAccessCodeFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAccountManagementGranular": {
                        "description": "When **true,** the account can be managed on a per-user basis.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowAccountManagementGranularMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAccountMemberNameChange": {
                        "description": "Boolean that specifies whether member names can be changed in the account.",
                        "type": "string"
                    },
                    "allowAccountMemberNameChangeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowACE": {
                        "description": "",
                        "type": "string"
                    },
                    "allowACEMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAdvancedRecipientRoutingConditional": {
                        "description": "When **true,** [Conditional Routing](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=aqm1578456487908.html) is enabled for the account as part of DocuSign's Advanced Recipient Routing feature.",
                        "type": "string"
                    },
                    "allowAdvancedRecipientRoutingConditionalMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAgentNameEmailEdit": {
                        "description": "  When **true,** an agent recipient can change the email addresses of recipients later in the signing order.\n",
                        "type": "string"
                    },
                    "allowAgentNameEmailEditMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAgreementActions": {
                        "description": "",
                        "type": "string"
                    },
                    "allowAgreementActionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAgreementOrchestrations": {
                        "description": "",
                        "type": "string"
                    },
                    "allowAgreementOrchestrationsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAutoNavSettings": {
                        "description": "  When **true,** auto-navigation can be enabled for this account.\n",
                        "type": "string"
                    },
                    "allowAutoNavSettingsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAutoTagging": {
                        "description": " When **true,** auto-tagging is enabled for the account.",
                        "type": "string"
                    },
                    "allowAutoTaggingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowBulkSend": {
                        "description": "When **true,** bulk send functionality is enabled for the account.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowBulkSendMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowCDWithdraw": {
                        "description": "When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.**\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowCDWithdrawMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowConnectHttpListenerConfigs": {
                        "description": "Boolean that specifies whether a Connect configuration can use HTTP listeners.",
                        "type": "string"
                    },
                    "AllowConnectIdentityVerificationUI": {
                        "description": "",
                        "type": "string"
                    },
                    "allowConnectOAuthUI": {
                        "description": "",
                        "type": "string"
                    },
                    "allowConnectSendFinishLater": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "allowConnectSendFinishLaterMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowConnectUnifiedPayloadUI": {
                        "description": "",
                        "type": "string"
                    },
                    "allowConsumerDisclosureOverride": {
                        "description": "When **true,**\nthe account has the ability to change the\n[Consumer Disclosure](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=aqg1583277336549.html)\nsetting.\n",
                        "type": "string"
                    },
                    "allowConsumerDisclosureOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowDataDownload": {
                        "description": "When **true,** senders can download form data from the envelopes that they send.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowDataDownloadMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowDelayedRouting": {
                        "description": "\"true\" if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, \"false\" otherwise.",
                        "type": "string"
                    },
                    "allowDelayedRoutingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowDelegatedSigning": {
                        "description": "",
                        "type": "string"
                    },
                    "allowDelegatedSigningMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowDocGenDocuments": {
                        "description": "",
                        "type": "string"
                    },
                    "allowDocGenDocumentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowDocumentDisclosures": {
                        "description": "Boolean that specifies whether disclosure documents can be included in envelopes.",
                        "type": "string"
                    },
                    "allowDocumentDisclosuresMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowDocumentsOnSignedEnvelopes": {
                        "description": "Boolean that specifies whether notifications can include the envelope's signed document.",
                        "type": "string"
                    },
                    "allowDocumentsOnSignedEnvelopesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowDocumentVisibility": {
                        "description": "When **true,** the [Document Visibility](https://support.docusign.com/guides/ndse-user-guide-document-visibility) feature is enabled for the account.\n",
                        "type": "string"
                    },
                    "allowDocumentVisibilityMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEditingEnvelopesOnBehalfOfOthers": {
                        "description": "",
                        "type": "string"
                    },
                    "allowEditingEnvelopesOnBehalfOfOthersMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEHankoStamps": {
                        "description": "When **true,**\n[eHanko stamps](https://support.docusign.com/s/document-item?bundleId=jux1643235969954&topicId=dys1578456666697.html)\nare enabled.\n",
                        "type": "string"
                    },
                    "allowEHankoStampsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowENoteEOriginal": {
                        "description": "Specifies whether eNote eOriginal integration is enabled.\n",
                        "type": "string"
                    },
                    "allowENoteEOriginalMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEnvelopeCorrect": {
                        "description": "When **true,** the envelope correction feature is enabled.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowEnvelopeCorrectMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEnvelopeCustodyTransfer": {
                        "description": "Specifies whether the account is able to\nmanage rules that [transfer ownership](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=xqx1583277378404.html)\nof envelopes within the same account.\n\n\n\n",
                        "type": "string"
                    },
                    "allowEnvelopeCustodyTransferMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEnvelopeCustomFields": {
                        "description": "Specifies whether\n[envelope custom fields](https://support.docusign.com/s/document-item?bundleId=jux1643235969954&topicId=mns1578456285568.html)\nare enabled.\n",
                        "type": "string"
                    },
                    "allowEnvelopeCustomFieldsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEnvelopePublishReporting": {
                        "description": "When **true,** envelope publishing reporting is enabled.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowEnvelopePublishReportingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEnvelopeReporting": {
                        "description": "Specifies whether the account has access to reports.\n",
                        "type": "string"
                    },
                    "allowEnvelopeReportingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowExpression": {
                        "description": "If the account plan does not include calculated fields, this setting allows an account to use them.\n\n",
                        "type": "string"
                    },
                    "allowExpressionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowExpressSignerCertificate": {
                        "description": "When **true,** signers are required to use Express Digital Signatures.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowExpressSignerCertificateMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowExtendedSendingResourceFile": {
                        "description": "Boolean that specifies whether resource files can be used for extended sending.",
                        "type": "string"
                    },
                    "allowExtendedSendingResourceFileMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowExternalLinkedAccounts": {
                        "description": "",
                        "type": "string"
                    },
                    "allowExternalLinkedAccountsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowExternalSignaturePad": {
                        "description": "When **true,** the account can\nconfigure and use signature pads for their recipients.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowExternalSignaturePadMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowIDVForEUQualifiedSignatures": {
                        "description": "",
                        "type": "string"
                    },
                    "allowIDVForEUQualifiedSignaturesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowIDVLevel1": {
                        "description": "When **true,** IDV Level 1 is allowed. The default value is **false.**",
                        "type": "string"
                    },
                    "allowIDVLevel1Metadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowIDVLevel1Trial": {
                        "description": "",
                        "type": "string"
                    },
                    "allowIDVLevel1TrialMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowIDVLevel2": {
                        "description": "",
                        "type": "string"
                    },
                    "allowIDVLevel2Metadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowIDVLevel3": {
                        "description": "",
                        "type": "string"
                    },
                    "allowIDVLevel3Metadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowIDVPlatform": {
                        "description": "",
                        "type": "string"
                    },
                    "allowIDVPlatformMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowInPerson": {
                        "description": "When **true,** the account administrator can enable in-person signing.\n\n**Note:** Only SysAdmin users can change this setting.\n\n",
                        "type": "string"
                    },
                    "allowInPersonElectronicNotary": {
                        "description": "Account-level flag that determines the ability to perform In-Person Electronic Notary (IPEN) actions.\n",
                        "type": "string"
                    },
                    "allowInPersonElectronicNotaryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowInPersonMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowManagedStamps": {
                        "description": "When **true,** [Managed Stamps](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=cex1583277417267.html) are enabled.",
                        "type": "string"
                    },
                    "allowManagedStampsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowManagingEnvelopesOnBehalfOfOthers": {
                        "description": "",
                        "type": "string"
                    },
                    "allowManagingEnvelopesOnBehalfOfOthersMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowMarkup": {
                        "description": "When **true,** the Document Markup feature is enabled.\n\n**Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.\n",
                        "type": "string"
                    },
                    "allowMarkupMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowMemberTimeZone": {
                        "description": "When **true,** account users can set their own\n[time zone settings](https://support.docusign.com/s/articles/How-do-I-modify-time-zone-settings-for-my-account).\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowMemberTimeZoneMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowMergeFields": {
                        "description": "When **true,** the account can use\n[merge fields](https://support.docusign.com/s/document-item?bundleId=evk1581360654067&topicId=ipy1581360621906.html)\nwith DocuSign for Salesforce.\n",
                        "type": "string"
                    },
                    "allowMergeFieldsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowMultipleBrandProfiles": {
                        "description": "Specifies whether the account supports multiple brands.\n",
                        "type": "string"
                    },
                    "allowMultipleBrandProfilesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowMultipleSignerAttachments": {
                        "description": "When **true,** recipients can\nupload multiple signer attachments with a single attachment.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowMultipleSignerAttachmentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowNonUSPhoneAuth": {
                        "description": "Specifies whether users can use\ninternational numbers\nfor phone authentication.\n",
                        "type": "string"
                    },
                    "allowNonUSPhoneAuthMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOcrOfEnvelopeDocuments": {
                        "description": "",
                        "type": "string"
                    },
                    "allowOcrOfEnvelopeDocumentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOfflineSigning": {
                        "description": "When **true,**\n[offline signing](https://support.docusign.com/articles/Offline-access-with-the-DocuSign-Mobile-App-for-iOS-iPad-iPhone-iPod-Touch)\nis enabled for the account.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowOfflineSigningMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOpenTrustSignerCertificate": {
                        "description": "When **true,** senders can use OpenTrust signer certificates.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowOpenTrustSignerCertificateMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOrganizationDocusignMonitor": {
                        "description": "",
                        "type": "string"
                    },
                    "allowOrganizationDocusignMonitorFree": {
                        "description": "",
                        "type": "string"
                    },
                    "allowOrganizationDocusignMonitorFreeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOrganizationDocusignMonitorMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOrganizationDomainUserManagement": {
                        "description": "",
                        "type": "string"
                    },
                    "allowOrganizationDomainUserManagementMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOrganizations": {
                        "description": "Boolean that specifies whether [DocuSign Admin](/docs/admin-api/) is enabled for the account.",
                        "type": "string"
                    },
                    "allowOrganizationsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOrganizationSsoManagement": {
                        "description": "",
                        "type": "string"
                    },
                    "allowOrganizationSsoManagementMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOrganizationToUseInPersonElectronicNotary": {
                        "description": "Organization-level flag that determines the ability to perform In-Person Electronic Notary (IPEN) actions.\n",
                        "type": "string"
                    },
                    "allowOrganizationToUseInPersonElectronicNotaryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOrganizationToUseRemoteNotary": {
                        "description": "",
                        "type": "string"
                    },
                    "allowOrganizationToUseRemoteNotaryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowOrganizationToUseThirdPartyElectronicNotary": {
                        "description": "Org level flag that determines the availability to perform Third Party Notary (3PN) actions.",
                        "type": "string"
                    },
                    "allowOrganizationToUseThirdPartyElectronicNotaryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowParticipantRecipientType": {
                        "description": "",
                        "type": "string"
                    },
                    "allowParticipantRecipientTypeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowPaymentProcessing": {
                        "description": "When **true,** payment processing is enabled for the account.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowPaymentProcessingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowPerformanceAnalytics": {
                        "description": "",
                        "type": "string"
                    },
                    "allowPerformanceAnalyticsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowPhoneAuthentication": {
                        "description": "Boolean that specifies whether phone authentication is enabled for the account.",
                        "type": "string"
                    },
                    "allowPhoneAuthenticationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowPhoneAuthOverride": {
                        "description": "Boolean that specifies whether users can override phone authentication.",
                        "type": "string"
                    },
                    "allowPhoneAuthOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowPrivateSigningGroups": {
                        "description": "Reserved for DocuSign. This property returns the value **false** when listing account settings. This property is read-only.",
                        "type": "string"
                    },
                    "allowPrivateSigningGroupsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowRecipientConnect": {
                        "description": "",
                        "type": "string"
                    },
                    "allowRecipientConnectMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowReminders": {
                        "description": "When **true,**\nan account administrator can to turn on reminders\nand expiration defaults for the account.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowRemindersMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowRemoteNotary": {
                        "description": "",
                        "type": "string"
                    },
                    "allowRemoteNotaryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowResourceFileBranding": {
                        "description": "When **true,**\nresource files can be uploaded in branding.\n",
                        "type": "string"
                    },
                    "allowResourceFileBrandingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSafeBioPharmaSignerCertificate": {
                        "description": "When **true,**\naccount administrators can\nspecify that signers are\nrequired to use SAFE-BioPharma digital signatures.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowSafeBioPharmaSignerCertificateMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowScheduledSending": {
                        "description": "\"true\" if the account has permission to use the scheduled sending feature to send envelopes at a specified datetime in the future, \"false\" otherwise.",
                        "type": "string"
                    },
                    "allowScheduledSendingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSecurityAppliance": {
                        "description": "Boolean that specifies whether a DocuSign Signature Appliance can be used with the account.",
                        "type": "string"
                    },
                    "allowSecurityApplianceMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSendingEnvelopesOnBehalfOfOthers": {
                        "description": "",
                        "type": "string"
                    },
                    "allowSendingEnvelopesOnBehalfOfOthersMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSendToCertifiedDelivery": {
                        "description": "When **true,**\nthe account admin can enable the\nSend to Certified Delivery\nfeature on the account.\n",
                        "type": "string"
                    },
                    "allowSendToCertifiedDeliveryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSendToIntermediary": {
                        "description": "When **true,**\nthe account admin can enable the Send to Intermediary\nfeature on the account.\n",
                        "type": "string"
                    },
                    "allowSendToIntermediaryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowServerTemplates": {
                        "description": "When **true,**\nthe account can use templates.\n",
                        "type": "string"
                    },
                    "allowServerTemplatesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSetEmbeddedRecipientStartURL": {
                        "description": "",
                        "type": "string"
                    },
                    "allowSetEmbeddedRecipientStartURLMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSharedTabs": {
                        "description": "When **true,**\nshared tabs are enabled for the account.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowSharedTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSignatureStamps": {
                        "description": "When **true,** Signature Stamps are enabled.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowSignatureStampsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSignDocumentFromHomePage": {
                        "description": "When **true,** recipients can sign documents from the home page.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowSignDocumentFromHomePageMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSignerReassign": {
                        "description": "When **true,** the recipient of an envelope sent from this account can reassign it to another person.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "allowSignerReassignMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSignerReassignOverride": {
                        "description": "When **true,** an account administrator can override the ability of an envelope recipient to reassign it to another person.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowSignerReassignOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSigningExtensions": {
                        "description": "Boolean that specifies whether Signing and App Extensions are allowed.",
                        "type": "string"
                    },
                    "allowSigningExtensionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSigningGroups": {
                        "description": "When **true,** the account allows signing groups. This setting is only shown in responses that list account settings. This property is read-only.",
                        "type": "string"
                    },
                    "allowSigningGroupsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSigningInsights": {
                        "description": "",
                        "type": "string"
                    },
                    "allowSigningInsightsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSigningRadioDeselect": {
                        "description": "Boolean that specifies whether the account supports radio buttons on tabs [Radio CustomTabType](/docs/esign-soap-api/reference/sending-group/tab/).",
                        "type": "string"
                    },
                    "allowSigningRadioDeselectMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSignNow": {
                        "description": "When **true,**\nthe account administrator can enable\nthe Sign Now feature.\n",
                        "type": "string"
                    },
                    "allowSignNowMetadata": {
                        "description": "Metadata that indicates whether the `allowSignNow` property is editable.\n",
                        "type": "string"
                    },
                    "allowSMSDelivery": {
                        "description": "",
                        "type": "string"
                    },
                    "allowSMSDeliveryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSocialIdLogin": {
                        "description": "Deprecated.",
                        "type": "string"
                    },
                    "allowSocialIdLoginMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSupplementalDocuments": {
                        "description": "When **true,** this user can include supplemental documents.",
                        "type": "string"
                    },
                    "allowSupplementalDocumentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowThirdPartyElectronicNotary": {
                        "description": "Account level flag that determines the availability to perform Third Party Notary (3PN) actions.",
                        "type": "string"
                    },
                    "allowThirdPartyElectronicNotaryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowTransactionsWorkspace": {
                        "description": "",
                        "type": "string"
                    },
                    "allowTransactionsWorkspaceMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowTransactionsWorkspaceOriginal": {
                        "description": "",
                        "type": "string"
                    },
                    "allowTransactionsWorkspaceOriginalMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowUsersToAccessDirectory": {
                        "description": "",
                        "type": "string"
                    },
                    "allowUsersToAccessDirectoryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowValueInsights": {
                        "description": "",
                        "type": "string"
                    },
                    "allowValueInsightsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowWebForms": {
                        "description": "",
                        "type": "string"
                    },
                    "allowWebFormsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowWhatsAppDelivery": {
                        "description": "",
                        "type": "string"
                    },
                    "allowWhatsAppDeliveryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "anchorPopulationScope": {
                        "description": "This property determines how template anchor tabs are applied.\n\nValid values are:\n\n- `document`: Anchor tabs are applied only to the document that you specify. \n- `envelope`: Anchor tabs are applied to all of the documents in the envelope associated with the template.\n\n**Note:** When you are using the `anchorPopulationScope` property with a Composite Template, the value `document` is supported only with a single server template and a single inline template.\n\n",
                        "type": "string"
                    },
                    "anchorPopulationScopeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "anchorTagVersionedPlacementEnabled": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "anchorTagVersionedPlacementMetadataEnabled": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "attachCompletedEnvelope": {
                        "description": "When **true,** envelope documents are included as a PDF file attachment to \"signing completed\" emails.\n\n**Note:** Only SysAdmin users can change this setting.",
                        "type": "string"
                    },
                    "attachCompletedEnvelopeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "authenticationCheck": {
                        "description": "Sets when authentication checks are applied for recipient envelope access. This setting only applies to the following ID checks: \n\n- Phone Authentication\n- SMS Authentication\n- Knowledge-Based ID\n\nThis setting takes one of the following options: \n\n- `initial_access`: The authentication check always applies the first time a recipient accesses the documents. Recipients are not asked to authenticate again when they access the documents from the same browser on the same device. If the recipient attempts to access the documents from a different browser or a different device, the recipient must pass authentication again. Once authenticated, that recipient is not challenged again on the new device or browser. The ability for a recipient to skip authentication for documents is limited to documents sent from the same sending account.\n- `each_access`: Authentication checks apply every time a recipient attempts to access the envelope. However, you can configure the Authentication Expiration setting to allow recipients to skip authentication when they have recently passed authentication by setting a variable time frame.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "authenticationCheckMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "autoNavRule": {
                        "description": "Specifies how auto-navigation works.\nValid values are:\n\n- `off`\n- `required_fields`\n- `required_and_blank_fields`\n- `all_fields`\n- `page_then_required_fields`\n- `page_then_required_and_blank_fields`\n- `page_then_all_fields`\n",
                        "type": "string"
                    },
                    "autoNavRuleMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "autoProvisionSignerAccount": {
                        "description": "Boolean that specifies whether to automatically provision a user membership in the account for accountless recipients. (Also known as Just-in-Time provisioning.)",
                        "type": "string"
                    },
                    "autoProvisionSignerAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "bccEmailArchive": {
                        "description": "Boolean that specifies whether BCC for Email Archive is enabled for the account. BCC for Email Archive allows you to set up an archive email address so that a BCC copy of an envelope is sent only to that address.",
                        "type": "string"
                    },
                    "bccEmailArchiveMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "betaSwitchConfiguration": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "betaSwitchConfigurationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/addressInformation"
                    },
                    "billingAddressMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "bulkSend": {
                        "description": "When **true,** this user can use the bulk send feature for the account.",
                        "type": "string"
                    },
                    "bulkSendActionResendLimit": {
                        "description": "",
                        "type": "string"
                    },
                    "bulkSendMaxCopiesInBatch": {
                        "description": "",
                        "type": "string"
                    },
                    "bulkSendMaxUnprocessedEnvelopesCount": {
                        "description": "",
                        "type": "string"
                    },
                    "bulkSendMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canSelfBrandSend": {
                        "description": "When **true,** account administrators can self-brand their sending console through the DocuSign console.",
                        "type": "string"
                    },
                    "canSelfBrandSendMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canSelfBrandSign": {
                        "description": "When **true,** account administrators can self-brand their signing console through the DocuSign console.",
                        "type": "string"
                    },
                    "canSelfBrandSignMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canUseSalesforceOAuth": {
                        "description": "",
                        "type": "string"
                    },
                    "canUseSalesforceOAuthMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "captureVoiceRecording": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "captureVoiceRecordingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "cfr21SimplifiedSigningEnabled": {
                        "description": "",
                        "type": "string"
                    },
                    "cfr21SimplifiedSigningEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "cfrUseWideImage": {
                        "description": "Boolean that specifies whether to use a shorter/wider format when generating the CFR Part 11 signature image.",
                        "type": "string"
                    },
                    "cfrUseWideImageMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "checkForMultipleAdminsOnAccount": {
                        "description": "",
                        "type": "string"
                    },
                    "checkForMultipleAdminsOnAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "chromeSignatureEnabled": {
                        "description": "Boolean that specifies whether the signers of the envelopes from this account use a signature with a DocuSign chrome around it or not.",
                        "type": "string"
                    },
                    "chromeSignatureEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "commentEmailShowMessageText": {
                        "description": "When **true,** the text of comments is included in email notifications when a comment is posted.\n\n**Note:**  If the envelope requires additional recipient authentication, comment text is not included.",
                        "type": "string"
                    },
                    "commentEmailShowMessageTextMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "commentsAllowEnvelopeOverride": {
                        "description": "When **true** and comments are enabled for the account, senders can disable comments for an envelope through the **Advanced Options** menu that appears during the sending process.",
                        "type": "string"
                    },
                    "commentsAllowEnvelopeOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "conditionalFieldsEnabled": {
                        "description": "When **true,** conditional fields can be used in documents.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "conditionalFieldsEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "consumerDisclosureFrequency": {
                        "description": "Speficies how often to display the consumer disclosure.\n\nValid values are:\n\n- `once`: Per account, the supplemental document is displayed once only per `userId`. \n- `always`: Per envelope, the supplemental document is displayed once only per `userId`. \n- `each_access`: Per envelope, the supplemental document is displayed once only per `recipientId`.\n",
                        "type": "string"
                    },
                    "consumerDisclosureFrequencyMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "convertPdfFields": {
                        "description": "Boolean that specifies whether to enable PDF form fields to get converted to DocuSign secure fields when the document is added or uploaded to an envelope.",
                        "type": "string"
                    },
                    "convertPdfFieldsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "dataPopulationScope": {
                        "description": "Specifies how data is shared for tabs with the same tabLabel. Valid values are:\n\n- `document`: Tabs in a document with the same label populate with the same data.\n- `envelope`: Tabs in all documents in the envelope with the same label populate with the same data.\n- `notset`:   Use the global account setting.\n\nThis setting applies to the following tab types:\n\n- Check box\n- Company\n- Data field\n- Drop-down list\n- Full name\n- Formula\n- Note\n- Title\n\n**Note:** Only Admin users can change this setting. Changing this setting affects envelopes that have been sent but not completed.",
                        "type": "string"
                    },
                    "dataPopulationScopeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "defaultToAdvancedEnvelopesFilterForm": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultToAdvancedEnvelopesFilterFormMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableAutoTemplateMatching": {
                        "description": "",
                        "type": "string"
                    },
                    "disableAutoTemplateMatchingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableMobileApp": {
                        "description": "When **true,** the mobile app distributor key is prevented from connecting for account users.",
                        "type": "string"
                    },
                    "disableMobileAppMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableMobilePushNotifications": {
                        "description": "When **true,** push notifications are disabled for the account.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "disableMobilePushNotificationsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableMobileSending": {
                        "description": "When **true,** sending from a mobile application is disabled.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "disableMobileSendingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableMultipleSessions": {
                        "description": "When **true,** account users cannot be logged into multiple sessions at the same time.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "disableMultipleSessionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disablePurgeNotificationsForSenderMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableSignerCertView": {
                        "description": "When **true,** signers cannot view certificates of completion.",
                        "type": "string"
                    },
                    "disableSignerCertViewMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableSignerHistoryView": {
                        "description": "When **true,** signers cannot view envelope history.",
                        "type": "string"
                    },
                    "disableSignerHistoryViewMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableStyleSignature": {
                        "description": "When **true,** the **Select Style** option is hidden from signers and they must draw their signature instead. ",
                        "type": "string"
                    },
                    "disableStyleSignatureMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableUploadSignature": {
                        "description": "When **true,** signers cannot upload custom image files of their signature and initials.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "disableUploadSignatureMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableUserSharing": {
                        "description": "When **true,** the User Sharing feature is disabled for the account.",
                        "type": "string"
                    },
                    "disableUserSharingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "displayBetaSwitch": {
                        "description": "Boolean that specifies whether to display a Beta switch for your app.",
                        "type": "string"
                    },
                    "displayBetaSwitchMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "documentConversionRestrictions": {
                        "description": "Sets the account document upload restriction for non-account administrators. Valid values are:\n\n- `no_restrictions`: There are no restrictions on the type of documents that can be uploaded.\n- `allow_pdf_only`: Non-administrators can only upload PDF files.\n- `no_upload`: Non-administrators cannot upload files.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "documentConversionRestrictionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "documentRetention": {
                        "description": "Sets a document retention period, which controls the number of days that DocuSign retains documents after they have reached a completed,declined, or voided state. When document retention is enabled for the account, the default value is `356` days.",
                        "type": "string"
                    },
                    "documentRetentionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "documentRetentionPurgeTabs": {
                        "description": "When **true** and `documentRetention` is set, document fields and metadata are also purged after the document retention period ends. The default value is **false.**\n\n**Note:** Only Admins can change this setting.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "Configures the Document Visibility feature for the account. Valid values are:\n\n- `Off`: Document Visibility is not active for the account.\n- `MustSignToViewUnlessSenderAccount`: Document Visibility is enabled for all envelopes sent from the account. Any member of the sending account can view all of the documents in an envelope.\n- `MustSignToViewUnlessSender`: Document Visibility is enabled for all envelopes sent from the account. Only the sender can view all of the documents in an envelope.\n- `SenderCanSetMustSignToViewUnlessSenderAccount`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents within it are still visible to any member of the sending account.\nVd- `SenderCanSetMustSignToViewUnlessSender`: The sender has the option to enable Document Visibility for an envelope. When enabled for an envelope, all of the documents in the envelope are visible only to the sender.\n\n**Note:** For this configuration to take effect, `allowDocumentVisibility` must be set to **true.**",
                        "type": "string"
                    },
                    "documentVisibilityMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "draftEnvelopeRetention": {
                        "description": "",
                        "type": "string"
                    },
                    "draftEnvelopeRetentionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "dss_EnableProvisioningPenConfiguration_RadminOption": {
                        "description": "",
                        "type": "string"
                    },
                    "dss_EnableSignatureTypeCustomTagRadmin_RadminOption": {
                        "description": "",
                        "type": "string"
                    },
                    "dss_SIGN_28411_EnableLeavePagePrompt_RadminOption": {
                        "description": "",
                        "type": "string"
                    },
                    "dss_SIGN_29182_SlideUpBar_RadminOption": {
                        "description": "",
                        "type": "string"
                    },
                    "emailTemplateVersion": {
                        "description": "Specifies the version of the email templates used in an account. If new signing is selected in a member's Admin page, the user is updated to the newest version (1.1), the minimum version of email supported for the account.",
                        "type": "string"
                    },
                    "emailTemplateVersionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAccessCodeGenerator": {
                        "description": "When **true,** enables Access Code Generator on the account.",
                        "type": "string"
                    },
                    "enableAccessCodeGeneratorMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAccountWideSearch": {
                        "description": "",
                        "type": "string"
                    },
                    "enableAccountWideSearchMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAdmHealthcare": {
                        "description": "Account Level Flag that determines the availability to use ADM Healthcare fields",
                        "type": "string"
                    },
                    "enableAdmHealthcareMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAdvancedEnvelopesSearch": {
                        "description": "",
                        "type": "string"
                    },
                    "enableAdvancedEnvelopesSearchMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAdvancedPayments": {
                        "description": "When **true,** enables Advanced Payments for the account.",
                        "type": "string"
                    },
                    "enableAdvancedPaymentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAdvancedPowerForms": {
                        "description": "When **true,** enables advanced PowerForms for the account.",
                        "type": "string"
                    },
                    "enableAdvancedPowerFormsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAgreementActionsForCLM": {
                        "description": "",
                        "type": "string"
                    },
                    "enableAgreementActionsForCLMMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAgreementActionsForESign": {
                        "description": "",
                        "type": "string"
                    },
                    "enableAgreementActionsForESignMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAutoNav": {
                        "description": "When **true,** enables the account to set the AutoNav rule setting, which enables a sender to override the auto-navigation setting per envelope.\n\n**Note:** To change this setting, you must be a SysAdmin user or `EnableAutoNavByDSAdmin must be set.",
                        "type": "string"
                    },
                    "enableAutoNavMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableBccDummyLink": {
                        "description": "",
                        "type": "string"
                    },
                    "enableBccDummyLinkMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableCalculatedFields": {
                        "description": "When **true,** calculated fields are enabled for the account. \n\n**Note:** This setting can be changed only by Admin users, and only if the account-level setting `allowExpression` is set to **true.**",
                        "type": "string"
                    },
                    "enableCalculatedFieldsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableClickPlus": {
                        "description": "",
                        "type": "string"
                    },
                    "enableClickPlusConditionalContent": {
                        "description": "",
                        "type": "string"
                    },
                    "enableClickPlusConditionalContentMetaData": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableClickPlusCustomFields": {
                        "description": "",
                        "type": "string"
                    },
                    "enableClickPlusCustomFieldsMetaData": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableClickPlusCustomStyle": {
                        "description": "",
                        "type": "string"
                    },
                    "enableClickPlusCustomStyleMetaData": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableClickPlusDynamicContent": {
                        "description": "",
                        "type": "string"
                    },
                    "enableClickPlusDynamicContentMetaData": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableClickPlusMetaData": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableClickwraps": {
                        "description": "Boolean that specifies whether clickwraps are enabled in your app. A [clickwrap](/docs/click-api/click101/) is an iframe that you embed in your own website or app.",
                        "type": "string"
                    },
                    "enableClickwrapsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableCombinedPDFDownloadForSBS": {
                        "description": "",
                        "type": "string"
                    },
                    "enableCommentsHistoryDownloadInSigning": {
                        "description": "",
                        "type": "string"
                    },
                    "enableCommentsHistoryDownloadInSigningMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableContactSuggestions": {
                        "description": "",
                        "type": "string"
                    },
                    "enableContactSuggestionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableCustomerSatisfactionMetricTracking": {
                        "description": "When **true,** enables customer satisfaction metric tracking for the account.",
                        "type": "string"
                    },
                    "enableCustomerSatisfactionMetricTrackingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableDSigEUAdvancedPens": {
                        "description": "",
                        "type": "string"
                    },
                    "enableDSigEUAdvancedPensMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableDSigExpressPens": {
                        "description": "",
                        "type": "string"
                    },
                    "enableDSigExpressPensMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableDSigIDCheckForAESPens": {
                        "description": "",
                        "type": "string"
                    },
                    "enableDSigIDCheckForAESPensMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableDSigIDCheckInPersonForQESPens": {
                        "description": "",
                        "type": "string"
                    },
                    "enableDSigIDCheckInPersonForQESPensMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableDSigIDCheckRemoteForQESPens": {
                        "description": "",
                        "type": "string"
                    },
                    "enableDSigIDCheckRemoteForQESPensMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableDSigIDVerificationPens": {
                        "description": "",
                        "type": "string"
                    },
                    "enableDSigIDVerificationPensMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableDSigIDVerificationPremierPens": {
                        "description": "",
                        "type": "string"
                    },
                    "enableDSigIDVerificationPremierPensMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableDSPro": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "enableDSProMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableEnforceTlsEmailsSettingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableEnvelopeStampingByAccountAdmin": {
                        "description": "When **true,** enables the account administrator\nto control envelope stamping for an account\n(stamping the `envelopeId` in the document margins).\n\n**Note:** This setting can be changed only\nby Admin users, and only if the account-level\nsetting `enableEnvelopeStampingByDSAdmin` is set to **true.**",
                        "type": "string"
                    },
                    "enableEnvelopeStampingByAccountAdminMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableEnvelopeStampingByDSAdmin": {
                        "description": "When **true,** enables the DocuSign administrator to control envelope stamping for an account (placement of the `envelopeId`).",
                        "type": "string"
                    },
                    "enableEnvelopeStampingByDSAdminMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableESignAPIHourlyLimitManagement": {
                        "description": "",
                        "type": "string"
                    },
                    "enableESignAPIHourlyLimitManagementMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableEsignCommunities": {
                        "description": "",
                        "type": "string"
                    },
                    "enableEsignCommunitiesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableIDFxAccountlessSMSAuthForPart11": {
                        "description": "",
                        "type": "string"
                    },
                    "enableIDFxAccountlessSMSAuthForPart11Metadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableIDFxIntuitKBA": {
                        "description": "",
                        "type": "string"
                    },
                    "enableIDFxIntuitKBAMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableIDFxPhoneAuthentication": {
                        "description": "",
                        "type": "string"
                    },
                    "enableIDFxPhoneAuthenticationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableIdfxPhoneAuthSignatureAuthStatus": {
                        "description": "",
                        "type": "string"
                    },
                    "enableIdfxPhoneAuthSignatureAuthStatusMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableInboxBrowseViewsPoweredByElasticSearch": {
                        "description": "",
                        "type": "string"
                    },
                    "enableInboxBrowseViewsPoweredByElasticSearchMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableInboxRelevanceSort": {
                        "description": "",
                        "type": "string"
                    },
                    "enableInboxRelevanceSortForRecentAccounts": {
                        "description": "",
                        "type": "string"
                    },
                    "enableInboxRelevanceSortForRecentAccountsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableInboxRelevanceSortMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableInBrowserEditor": {
                        "description": "",
                        "type": "string"
                    },
                    "enableInBrowserEditorMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableKeyTermsSuggestionsByDocumentType": {
                        "description": "",
                        "type": "string"
                    },
                    "enableKeyTermsSuggestionsByDocumentTypeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableLargeFileSupport": {
                        "description": "",
                        "type": "string"
                    },
                    "enableLargeFileSupportMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableParticipantRecipientSettingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enablePaymentProcessing": {
                        "description": "When **true,** payment processing is enabled for this account.\n\n**Note:** This setting can be changed only by Admin users, and only if the account-level setting `allowPaymentProcessing` is set.",
                        "type": "string"
                    },
                    "enablePaymentProcessingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enablePDFAConversion": {
                        "description": "",
                        "type": "string"
                    },
                    "enablePDFAConversionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enablePowerForm": {
                        "description": "When **true,** enables PowerForms for the account.\n\n**Note:** Only SysAdmin users can change this setting.",
                        "type": "string"
                    },
                    "enablePowerFormDirect": {
                        "description": "When **true,** enables direct PowerForms for an account. Direct PowerForms are in-session PowerForms.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "enablePowerFormDirectMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enablePowerFormMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableRecipientDomainValidation": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "enableRecipientDomainValidationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableRecipientMayProvidePhoneNumber": {
                        "description": "",
                        "type": "string"
                    },
                    "enableRecipientMayProvidePhoneNumberMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableReportLinks": {
                        "description": "Enables direct links to envelopes in reports for administrators in the following scopes:\n- `NoEnvelopes`\n- `AllEnvelopes`\n- `OnlyOwnEnvelopes`",
                        "type": "string"
                    },
                    "enableReportLinksMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableRequireSignOnPaper": {
                        "description": "When **true,** the account can use the `requireSignOnPaper` option.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "enableRequireSignOnPaperMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableReservedDomain": {
                        "description": "When **true,** account administrators can reserve a web domain and users. Domains are organization-specific reserved internet domains, such as `@exampledomain.com`. You can define policy settings for users of each reserved domain within your organization, export lists of domain users for audit purposes, and manage domain users.\n\n- Domains may be claimed by an organization.\n- When a domain is claimed by an organization, all users within that domain are added to the organization, even if they have trial or free accounts.\n- You can set domain controls for all users of the domain.\n- You can export information about your organization’s users that are associated with your reserved domains.\n\n**Note:** Only SysAdmin users can change this setting.",
                        "type": "string"
                    },
                    "enableReservedDomainMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableResponsiveSigning": {
                        "description": "When **true,** enables responsive signing.",
                        "type": "string"
                    },
                    "enableResponsiveSigningMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableScheduledRelease": {
                        "description": "When **true,** scheduled releases are enabled. The default value is **false.**",
                        "type": "string"
                    },
                    "enableScheduledReleaseMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSearch": {
                        "description": "",
                        "type": "string"
                    },
                    "enableSearchMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSearchServiceAzureUri": {
                        "description": "",
                        "type": "string"
                    },
                    "enableSearchServiceAzureUriMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSearchSiteSpecificApi": {
                        "description": "",
                        "type": "string"
                    },
                    "enableSearchSiteSpecificApiMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSearchUI": {
                        "description": "",
                        "type": "string"
                    },
                    "enableSearchUIMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSendingTagsFontSettings": {
                        "description": "When **true,** enables fonts to be set on tags for the account.",
                        "type": "string"
                    },
                    "enableSendingTagsFontSettingsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSendToAgent": {
                        "description": "When **true,** this account can use the Agent recipient type.\n\n**Note:** Only SysAdmin users can change this setting.\n",
                        "type": "string"
                    },
                    "enableSendToAgentMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSendToIntermediary": {
                        "description": "When **true,** this account can use the Intermediary recipient type.\n\n**Note:** Only Admin users can change this setting, and only if `allowSendToIntermediary` is set.\n",
                        "type": "string"
                    },
                    "enableSendToIntermediaryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSendToManage": {
                        "description": "When **true,** this account can use the Editor recipient type.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "enableSendToManageMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSequentialSigningAPI": {
                        "description": "When **true,** the account can define the routing\norder of recipients for envelopes sent by using the eSignature API.\n\n**Note:** Only SysAdmin users can change this setting.",
                        "type": "string"
                    },
                    "enableSequentialSigningAPIMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSequentialSigningUI": {
                        "description": "When **true,** the account can define the routing order\nof recipients for envelopes sent by using the DocuSign application.\n\n**Note:** Only SysAdmin users can change this setting.\n",
                        "type": "string"
                    },
                    "enableSequentialSigningUIMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSignerAttachments": {
                        "description": "When **true,** users can use the signing attachments feature to request attachments from signers.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "enableSignerAttachmentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSigningExtensionComments": {
                        "description": "When **true,** enables comments for the account so that signers and recipients can make and respond to comments in documents belonging to the envelopes that they are sent.",
                        "type": "string"
                    },
                    "enableSigningExtensionCommentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSigningExtensionConversations": {
                        "description": "When **true,** enables conversation functionality.",
                        "type": "string"
                    },
                    "enableSigningExtensionConversationsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSigningOrderSettingsForAccount": {
                        "description": "When **true,** switches Signing Order to On by default for new envelopes.",
                        "type": "string"
                    },
                    "enableSigningOrderSettingsForAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSignOnPaper": {
                        "description": "When **true,** a sender can allow signers to use the sign on paper option.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "enableSignOnPaperMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSignOnPaperOverride": {
                        "description": "When **true,** a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "enableSignOnPaperOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSignWithNotary": {
                        "description": "When **true,** Sign with Notary functionality is enabled for the account.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "enableSignWithNotaryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSmartContracts": {
                        "description": "When **true,** blockchain-based [Smart Contracts](https://www.docusign.com/products/blockchain) are enabled. The default value is **false.**",
                        "type": "string"
                    },
                    "enableSmartContractsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSMSAuthentication": {
                        "description": "When **true,** the account can use SMS authentication.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "enableSMSAuthenticationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSMSDeliveryAdditionalNotification": {
                        "description": "",
                        "type": "string"
                    },
                    "enableSMSDeliveryAdditionalNotificationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSMSDeliveryPrimary": {
                        "description": "",
                        "type": "string"
                    },
                    "enableSocialIdLogin": {
                        "description": "Deprecated.",
                        "type": "string"
                    },
                    "enableSocialIdLoginMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableStrikeThrough": {
                        "description": "When **true,** enables strikethrough formatting in documents.",
                        "type": "string"
                    },
                    "enableStrikeThroughMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableTransactionPoint": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "enableTransactionPointMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableVaulting": {
                        "description": "When **true,** Vaulting is enabled for the account.",
                        "type": "string"
                    },
                    "enableVaultingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableWebFormsSeparateUserPermissions": {
                        "description": "",
                        "type": "string"
                    },
                    "enableWebFormsSeparateUserPermissionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableWitnessing": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "enableWitnessingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enforceTemplateNameUniqueness": {
                        "description": "When **true,** the template name must be unique.",
                        "type": "string"
                    },
                    "enforceTemplateNameUniquenessMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enforceTlsEmails": {
                        "description": "",
                        "type": "string"
                    },
                    "enforceTlsEmailsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "envelopeIntegrationAllowed": {
                        "description": "Shows the envelope integration rule for the account, which indicates whether custom admins can enable Connect for their accounts. Enumeration values are: \n\n- `not_allowed`\n- `full` \n\n**Note:** Only SysAdmin users can change this setting.                                                                                 ",
                        "type": "string"
                    },
                    "envelopeIntegrationAllowedMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "envelopeIntegrationEnabled": {
                        "description": "When **true,** enables Connect for an account. Note that Connect integration requires additional configuration that must be set up for it to take effect; this switch is only the on/off control for the account.\n\n**Note:** Only Admin users can change this setting, and only when `envelopeIntegrationAllowed` is set.",
                        "type": "string"
                    },
                    "envelopeIntegrationEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "EnvelopeLimitsTotalDocumentSizeAllowedInMB": {
                        "description": "",
                        "type": "string"
                    },
                    "EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabled": {
                        "description": "",
                        "type": "string"
                    },
                    "EnvelopeLimitsTotalDocumentSizeAllowedInMBEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "EnvelopeLimitsTotalDocumentSizeAllowedInMBMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "envelopeSearchMode": {
                        "description": "",
                        "type": "string"
                    },
                    "envelopeSearchModeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "envelopeStampingDefaultValue": {
                        "description": "When **true,** envelopes sent by this account automatically have the envelope ID stamped in the document margins, unless the sender selects not to have the documents stamped.",
                        "type": "string"
                    },
                    "envelopeStampingDefaultValueMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "exitPrompt": {
                        "description": "",
                        "type": "string"
                    },
                    "exitPromptMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "expressSend": {
                        "description": "Boolean that specifies whether a member of an account can express send (without tags) or must send with tags on documents.",
                        "type": "string"
                    },
                    "expressSendAllowTabs": {
                        "description": "Boolean that specifies whether a member of an account can send templates without the tags being stripped out, even when the account is configured to let its users express send only (they cannot use the tagger).",
                        "type": "string"
                    },
                    "expressSendAllowTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "expressSendMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "externalDocumentSources": {
                        "$ref": "#/components/schemas/externalDocumentSources"
                    },
                    "externalSignaturePadType": {
                        "description": "Specifies the signature pad type.\nValid values are:\n\n- `none`\n- `topaz`\n- `e_padv9`\n- `e_pad_integrisign`\n- `topaz_sigplusextlite`\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "externalSignaturePadTypeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "faxOutEnabled": {
                        "description": "When **true,** fax delivery to recipients is allowed for the account.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "faxOutEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "finishReminder": {
                        "description": "",
                        "type": "string"
                    },
                    "finishReminderMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "guidedFormsHtmlAllowed": {
                        "description": "When **true,** HTML used to implement [Guided Forms](https://www.docusign.com/products/guided-forms) is enabled for the account.",
                        "type": "string"
                    },
                    "guidedFormsHtmlAllowedMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "guidedFormsHtmlConversionPolicy": {
                        "description": "",
                        "type": "string"
                    },
                    "guidedFormsHtmlConversionPolicyMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "hasRecipientConnectClaimedDomain": {
                        "description": "",
                        "type": "string"
                    },
                    "hideAccountAddressInCoC": {
                        "description": "Boolean that specifies whether to hide the account address in the Certificate of Completion.",
                        "type": "string"
                    },
                    "hideAccountAddressInCoCMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "hidePricing": {
                        "description": "Boolean that specifies whether to hide the pricing functionality for an account.",
                        "type": "string"
                    },
                    "hidePricingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "idCheckConfigurations": {
                        "description": "A list of ID check configuration objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idCheckConfiguration"
                        }
                    },
                    "idCheckExpire": {
                        "description": "Determines when a user's authentication with the account expires. Valid values are:\n\n- `always`: Users are required to authenticate each time.\n- `variable`: If the authentication for a user is valid and falls within the value for the `idCheckExpireDays` property, the user is not required to authenticate again.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "idCheckExpireDays": {
                        "description": "The number of days before user authentication credentials expire. A value of `0` specifies that users must re-authenticate for each new session.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "idCheckExpireDaysMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "idCheckExpireMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "idCheckExpireMinutes": {
                        "description": "The number of minutes before user authentication credentials expire.",
                        "type": "string"
                    },
                    "idCheckExpireMinutesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "idCheckRequired": {
                        "description": "Indicates if authentication is configured for the account. Valid values are:\n\n- `always`: Authentication checks are performed on every envelope.\n- `never`: Authentication checks are not performed on any envelopes.\n- `optional`: Authentication is configurable per envelope.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "idCheckRequiredMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "identityVerification": {
                        "description": "Specifies the ID Verification workflow applied on an envelope by workflow ID. <br/>See the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/) method in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource for more information on how to retrieve workflow IDs available for an account. <br/>This can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html) methods. <br/>Note that ID Verification and ID Check are two distinct methods. ID Verification checks recipients' identity by verifying their ID while ID Check relies on data available on public records (such as current and former address).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountIdentityVerificationWorkflow"
                        }
                    },
                    "identityVerificationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "idfxKBAAuthenticationOverride": {
                        "description": "",
                        "type": "string"
                    },
                    "idfxKBAAuthenticationOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "idfxPhoneAuthenticationOverride": {
                        "description": "",
                        "type": "string"
                    },
                    "idfxPhoneAuthenticationOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "ignoreErrorIfAnchorTabNotFound": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "ignoreErrorIfAnchorTabNotFoundMetadataEnabled": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "inPersonIDCheckQuestion": {
                        "description": "A text field containing the question that an in-person signing host uses to collect personal information from the recipient. The recipient's response to this question is saved and can be viewed in the certificate associated with the envelope.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "inPersonIDCheckQuestionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "inPersonSigningEnabled": {
                        "description": "When **true,** in-person signing is enabled for the account.",
                        "type": "string"
                    },
                    "inPersonSigningEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "inSessionEnabled": {
                        "description": "When **true,** the account can send in-session (embedded) envelopes.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "inSessionEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "inSessionSuppressEmails": {
                        "description": "When **true,** emails are not sent to the in-session (embedded) recipients on an envelope.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "inSessionSuppressEmailsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "isConnectDocumentFieldsEnabled": {
                        "description": "",
                        "type": "string"
                    },
                    "linkedExternalPrimaryAccounts": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/linkedExternalPrimaryAccount"
                        }
                    },
                    "maximumSigningGroups": {
                        "description": "The maximum number of signing groups allowed on the account. The default value is `50`. This setting is only shown in responses that list account settings.\n\n**Note:** Only SysAdmin users can change this setting.",
                        "type": "string"
                    },
                    "maximumSigningGroupsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "maximumUsersPerSigningGroup": {
                        "description": "The maximum number of users per signing group. The default value is `50`. This setting is only shown in responses that list account settings.\n\n**Note:** Only SysAdmin users can change this setting.",
                        "type": "string"
                    },
                    "maximumUsersPerSigningGroupMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "maxNumberOfCustomStamps": {
                        "description": "The maximum number of custom stamps.",
                        "type": "string"
                    },
                    "mergeMixedModeResults": {
                        "description": "",
                        "type": "string"
                    },
                    "mergeMixedModeResultsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "mobileSessionTimeout": {
                        "description": "The number of minutes of inactivity before a mobile user is automatically logged out of the system. Valid values are `1` to `120` minutes. The default value is `20` minutes.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "mobileSessionTimeoutMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "numberOfActiveCustomStamps": {
                        "description": "The number of active custom stamps associated with the account. DocuSign calculates this number automatically. This property is only visible to the DocuSign account manager.",
                        "type": "string"
                    },
                    "optInMobileSigningV02": {
                        "description": "Boolean that specifies whether to opt in for Signing v02 on Mobile Devices functionality.",
                        "type": "string"
                    },
                    "optInMobileSigningV02Metadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "optInUniversalSignatures": {
                        "description": "",
                        "type": "string"
                    },
                    "optOutAutoNavTextAndTabColorUpdates": {
                        "description": "Boolean that allows envelope senders to opt out of the recipient signing auto-navigation feature and opt out of updating tab font color.",
                        "type": "string"
                    },
                    "optOutAutoNavTextAndTabColorUpdatesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "optOutNewPlatformSeal": {
                        "description": "Boolean that specifies whether to allow envelope senders to opt out of using the new platform seal.",
                        "type": "string"
                    },
                    "optOutNewPlatformSealPlatformMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "pdfMaxChunkedUploadPartSize": {
                        "description": "",
                        "type": "string"
                    },
                    "pdfMaxChunkedUploadPartSizeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "pdfMaxChunkedUploadTotalSize": {
                        "description": "",
                        "type": "string"
                    },
                    "pdfMaxChunkedUploadTotalSizeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "pdfMaxIndividualUploadSize": {
                        "description": "",
                        "type": "string"
                    },
                    "pdfMaxIndividualUploadSizeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "phoneAuthRecipientMayProvidePhoneNumber": {
                        "description": "When **true,** senders can allow recipients to provide a phone number for the Phone Authentication process.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "phoneAuthRecipientMayProvidePhoneNumberMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "pkiSignDownloadedPDFDocs": {
                        "description": "The policy for adding a digital certificate to downloaded, printed, and emailed documents. \n\nPossible values are: \n\n- `no_sign`\n- `no_sign_allow_user_override`\n- `yes_sign` (Specifies that PDF files downloaded from the platform are signed.)\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "pkiSignDownloadedPDFDocsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "readOnlyMode": {
                        "description": "",
                        "type": "string"
                    },
                    "readOnlyModeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "recipientsCanSignOffline": {
                        "description": "When **true,**\nrecipients receiving envelopes from this account\ncan sign offline.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "recipientsCanSignOfflineMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "recipientSigningAutoNavigationControl": {
                        "description": "When **true,** recipients receiving envelopes from this account can override auto-navigation functionality.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "recipientSigningAutoNavigationControlMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "require21CFRpt11Compliance": {
                        "description": "When **true,**\nrecipients are required\nto use a 21 CFR part 11-compliant signing experience.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "require21CFRpt11ComplianceMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "requireDeclineReason": {
                        "description": "When **true,** signers who decline to sign an envelope sent from this account\nare required to provide a reason for declining.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "requireDeclineReasonMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "requireExternalUserManagement": {
                        "description": "When **true,** the account requires external management of users.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "requireExternalUserManagementMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "requireSignerCertificateType": {
                        "description": "Sets the Digital Signature certificate requirements for sending envelopes.\nValid values are:\n\n- `none`: A Digital Signature certificate is not required.\n- `docusign_express`: Signers must use a DocuSign Express certificate.\n- `docusign_personal`: Signers must use a DocuSign personal certificate.\n- `safe`\n- `open_trust`: Signers must use an OpenTrust certificate.\n",
                        "type": "string"
                    },
                    "requireSignerCertificateTypeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "rsaVeridAccountName": {
                        "description": "The RSA account name.\n\n**Note:**\nOnly Admin users can change this setting. Modifying this value may disrupt\nyour ID Check capability.\nEnsure you have the correct value before changing it.\n",
                        "type": "string"
                    },
                    "rsaVeridPassword": {
                        "description": "The password for the RSA account.\n\n\n**Note:**\nOnly Admin users can change this setting. Modifying this value may disrupt\nyour ID Check capability.\nEnsure you have the correct value before changing it.\n",
                        "type": "string"
                    },
                    "rsaVeridRuleset": {
                        "description": "The RSA rule set used with the account.\n\n**Note:**\nOnly Admin users can change this setting. Modifying this value may disrupt\nyour ID Check capability.\nEnsure you have the correct value before changing it.\n",
                        "type": "string"
                    },
                    "rsaVeridUserId": {
                        "description": "The user ID for the RSA account.\n\n**Note:**\nOnly Admin users can change this setting. Modifying this value may disrupt\nyour ID Check capability.\nEnsure you have the correct value before changing it.\n",
                        "type": "string"
                    },
                    "sbsTransactionLevel": {
                        "description": "",
                        "type": "string"
                    },
                    "selfSignedRecipientEmailDocument": {
                        "description": "Sets how self-signed documents are presented to the email recipients.\nValid values are:\n\n- `include_pdf`: A PDF of the completed document is attached to the email.\n- `include_link`: A secure link to the self-signed documents is included\n   in the email.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "selfSignedRecipientEmailDocumentMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "selfSignedRecipientEmailDocumentUserOverride": {
                        "description": "When **true,** the `selfSignedRecipientEmailDocument` user setting\ncan be set for an individual user.\nThe user setting overrides the account setting.\n\n**Note:** Only Admin users can change this account setting.\n",
                        "type": "string"
                    },
                    "selfSignedRecipientEmailDocumentUserOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "senderCanSignInEachLocation": {
                        "description": "When **true,** a signer can draw their signature in each\nlocation where a sign or initial tab exists. This functionality\nis typically used for mobile signing.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "senderCanSignInEachLocationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "senderMustAuthenticateSigning": {
                        "description": "When **true,** a sender who is also a recipient of an envelope\nmust follow the authentication requirements for the envelope.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "senderMustAuthenticateSigningMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "sendingTagsFontColor": {
                        "description": "The account-wide default font color to use for the content of the tab.\n\nValid values are:\n\n- `Black`\n- `BrightBlue`\n- `BrightRed`\n- `DarkGreen`\n- `DarkRed`\n- `Gold`\n- `Green`\n- `NavyBlue`\n- `Purple`\n- `White`\n",
                        "type": "string"
                    },
                    "sendingTagsFontColorMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "sendingTagsFontName": {
                        "description": "The account-wide default font to be used for the tab value. Supported fonts include:\n\n- `Default`\n- `Arial`\n- `ArialNarrow`\n- `Calibri`\n- `CourierNew`\n- `Garamond`\n- `Georgia`\n- `Helvetica`\n- `LucidaConsole`\n- `MSGothic`\n- `MSMincho`\n- `OCR-A`\n- `Tahoma`\n- `TimesNewRoman`\n- `Trebuchet`\n- `Verdana`",
                        "type": "string"
                    },
                    "sendingTagsFontNameMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "sendingTagsFontSize": {
                        "description": "The account-wide default font size used for the information in the tab:\n\n- `Size7`\n- `Size8`\n- `Size9`\n- `Size10`\n- `Size11`\n- `Size12`\n- `Size14`\n- `Size16`\n- `Size18`\n- `Size20`\n- `Size22`\n- `Size24`\n- `Size26`\n- `Size28`\n- `Size36`\n- `Size48`\n- `Size72`",
                        "type": "string"
                    },
                    "sendingTagsFontSizeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "sendLockoutRecipientNotification": {
                        "description": "",
                        "type": "string"
                    },
                    "sendLockoutRecipientNotificationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "sendToCertifiedDeliveryEnabled": {
                        "description": "When true,\nthe account can use the\ncertified deliveries recipient type.\n",
                        "type": "string"
                    },
                    "sendToCertifiedDeliveryEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "sessionTimeout": {
                        "description": "The amount of idle activity time, in minutes, before a user is automatically logged out of the system. The minimum setting is 20 minutes and the maximum setting is 120 minutes.\n",
                        "type": "string"
                    },
                    "sessionTimeoutMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "setRecipEmailLang": {
                        "description": "When **true,** senders can set the email language to use for\neach recipient.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "setRecipEmailLangMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "setRecipSignLang": {
                        "description": "When **true,**\nsetting a unique language for a recipient\nnot only affects the email language, but also the signing\nlanguage they are presented with. When **false,** only the email will\nbe affected when the sender specifies a unique language for a\nrecipient.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "setRecipSignLangMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "sharedTemplateFolders": {
                        "description": "Boolean that specifies whether an account can use Shared Template Folders.",
                        "type": "string"
                    },
                    "sharedTemplateFoldersMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "showCompleteDialogInEmbeddedSession": {
                        "description": "Boolean that specifies whether complete dialogs are displayed directly within an application in embedded signing sessions.",
                        "type": "string"
                    },
                    "showCompleteDialogInEmbeddedSessionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "showConditionalRoutingOnSend": {
                        "description": "When **true,** Conditional Routing options display to senders during the sending experience.",
                        "type": "string"
                    },
                    "showConditionalRoutingOnSendMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "showInitialConditionalFields": {
                        "description": "Boolean that specifies whether conditional field options are initially displayed (before a user makes entries).",
                        "type": "string"
                    },
                    "showInitialConditionalFieldsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "showLocalizedWatermarks": {
                        "description": "Boolean that specifies whether localized watermarks are displayed.",
                        "type": "string"
                    },
                    "showLocalizedWatermarksMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "showMaskedFieldsWhenDownloadingDocumentAsSender": {
                        "description": "",
                        "type": "string"
                    },
                    "showMaskedFieldsWhenDownloadingDocumentAsSenderMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "showTutorials": {
                        "description": "When **true,**\nshow tutorials.\n",
                        "type": "string"
                    },
                    "showTutorialsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signatureProviders": {
                        "description": "Names of electronic or digital signature providers that can be used.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "signatureProvidersMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signDateFormat": {
                        "description": "The format for the signature date. Valid values are:\n\n- `d/M/yyyy`\n- `dd-MM-yy`\n- `dd-MMM-yy`\n- `dd-MM-yyyy`\n- `dd.MM.yyyy`\n- `dd-MMM-yyyy`\n- `dd MMMM yyyy`\n- `M/d/yyyy`\n- `MM-dd-yyyy`\n- `MM/dd/yyyy`\n- `MM/dd/yy`\n- `MMM-dd-yyyy`\n- `MMM d, yyyy`\n- `MMMM d, yyyy`\n- `yyyy-MM-dd`\n- `yyyy-MMM-dd`\n- `yyyy/MM/dd`\n- `yyyy MMMM d`\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signDateFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signDateTimeAccountLanguageOverride": {
                        "description": "",
                        "type": "string"
                    },
                    "signDateTimeAccountLanguageOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signDateTimeAccountTimezoneOverride": {
                        "description": "",
                        "type": "string"
                    },
                    "signDateTimeAccountTimezoneOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signerAttachCertificateToEnvelopePDF": {
                        "description": "When **true,**\nthe Certificate of Completion is included in the PDF of the envelope documents\nwhen it is downloaded.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signerAttachCertificateToEnvelopePDFMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signerAttachConcat": {
                        "description": "When **true,** signer attachments are added to the parent document\nthat contains the attachment.\nThe default behavior creates\na new document in the envelope for every signer attachment.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signerAttachConcatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signerCanCreateAccount": {
                        "description": "When **true,**\na signer can create a DocuSign account\nafter signing.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signerCanCreateAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signerCanSignOnMobile": {
                        "description": "When **true,** recipients can sign on a mobile device.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signerCanSignOnMobileMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signerInSessionUseEnvelopeCompleteEmail": {
                        "description": "When **true,** an \"envelope complete\" email is sent to an in-session\n(embedded) or offline signer after DocuSign processes the envelope\nif in-session emails are not suppressed.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signerInSessionUseEnvelopeCompleteEmailMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signerLoginRequirements": {
                        "description": "Sets the login requirements for signers. Valid values are:\n\n- `login_not_required`: Signers are not required to log in.\n- `login_required_if_account_holder`: If the signer has a DocuSign account,\n  they must log in to sign the document.\n- `login_required_per_session`: The sender cannot send an envelope to anyone\n  who does not have a DocuSign account.\n- `login_required_per_envelope`: The sender cannot send an envelope to anyone\n  who does not have a DocuSign account, and the signer must also log in for\n  each envelope they will sign.\n\n\n**Note:** Only Admin users can change this setting. If you use Direct PowerForms\nor captive (embedded signers), the \"Account required\" settings are bypassed for\nthose signers. If your workflow requires that the signer have an account,\nyou should not use those methods.\n",
                        "type": "string"
                    },
                    "signerLoginRequirementsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signerMustHaveAccount": {
                        "description": "When **true,** senders can only send an envelope to a recipient\nthat has a DocuSign account.\n\n**Note:** Only Account Administrators can change this setting.\n",
                        "type": "string"
                    },
                    "signerMustHaveAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signerMustLoginToSign": {
                        "description": "When **true,**\nsigners must log in to the DocuSign platform to sign an envelope.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signerMustLoginToSignMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signerShowSecureFieldInitialValues": {
                        "description": "When **true,** the initial values of all SecureFields are written\nto the document when it is sent.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signerShowSecureFieldInitialValuesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signingSessionTimeout": {
                        "description": "The number of minutes\nthat a signing session stays\nalive without any activity.\n",
                        "type": "string"
                    },
                    "signingSessionTimeoutMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signingUiVersion": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "signingUiVersionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signTimeFormat": {
                        "description": "The format for the signature time. Valid values are:\n\n- `none`\n- `HH:mm`\n- `h:mm`\n- `HH:mm:ss`\n- `h:mm:ss`\n",
                        "type": "string"
                    },
                    "signTimeFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signTimeShowAmPm": {
                        "description": "When **true,**\nthe time shows the AM or PM indicator.\n",
                        "type": "string"
                    },
                    "signTimeShowAmPmMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "simplifiedSendingEnabled": {
                        "description": "When **true,** simplified sending is enabled for the account. The default value is **false.**",
                        "type": "string"
                    },
                    "simplifiedSendingEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "singleSignOnEnabled": {
                        "description": "When **true,**\nsingle sign-on (SSO) is enabled.\n",
                        "type": "string"
                    },
                    "singleSignOnEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "skipAuthCompletedEnvelopes": {
                        "description": "When **true,**\ndo not require authentication prompt for viewing completed envelopes\n",
                        "type": "string"
                    },
                    "skipAuthCompletedEnvelopesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "socialIdRecipAuth": {
                        "description": "When **true,**\nrecipients can use\n[social ids](https://support.docusign.com/guides/signer-authentication)\nwhen signing\n",
                        "type": "string"
                    },
                    "socialIdRecipAuthMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "specifyDocumentVisibility": {
                        "description": "When **true,** senders can specify the visibility of the documents in an envelope at the recipient level.\n",
                        "type": "string"
                    },
                    "specifyDocumentVisibilityMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "startInAdvancedCorrect": {
                        "description": "When **true,**\nwhen initiating correction of an in-flight envelope\nthe sender starts in advanced correct mode.\n",
                        "type": "string"
                    },
                    "startInAdvancedCorrectMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "supplementalDocumentsMustAccept": {
                        "description": "When **true,** account users must accept supplemental documents when signing.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustAcceptMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "supplementalDocumentsMustRead": {
                        "description": "When **true,** account users must both view and accept supplemental documents when signing.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustReadMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "supplementalDocumentsMustView": {
                        "description": "When **true,** account users must view supplemental documents when signing.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustViewMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "suppressCertificateEnforcement": {
                        "description": "Boolean that specifies whether or not API calls require a x509 cert in the header of the call.",
                        "type": "string"
                    },
                    "suppressCertificateEnforcementMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "tabAccountSettings": {
                        "$ref": "#/components/schemas/tabAccountSettings"
                    },
                    "timezoneOffsetAPI": {
                        "description": "Specifies the time zone\nto use with the API.\n\nValid values are:\n\n- `TZ_01_AfghanistanStandardTime`\n- `TZ_02_AlaskanStandardTime`\n- `TZ_03_ArabStandardTime`\n- `TZ_04_ArabianStandardTime`\n- `TZ_05_ArabicStandardTime`\n- `TZ_06_ArgentinaStandardTime`\n- `TZ_07_AtlanticStandardTime`\n- `TZ_08_AUS_CentralStandardTime`\n- `TZ_09_AUS_EasternStandardTime`\n- `TZ_10_AzerbaijanStandardTime`\n- `TZ_11_AzoresStandardTime`\n- `TZ_12_BangladeshStandardTime`\n- `TZ_13_CanadaCentralStandardTime`\n- `TZ_14_CapeVerdeStandardTime`\n- `TZ_15_CaucasusStandardTime`\n- `TZ_16_CentralAustraliaStandardTime`\n- `TZ_17_CentralAmericaStandardTime`\n- `TZ_18_CentralAsiaStandardTime`\n- `TZ_19_CentralBrazilianStandardTime`\n- `TZ_20_CentralEuropeStandardTime`\n- `TZ_21_CentralEuropeanStandardTime`\n- `TZ_22_CentralPacificStandardTime`\n- `TZ_23_CentralStandardTime`\n- `TZ_24_CentralStandardTimeMexico`\n- `TZ_25_ChinaStandardTime`\n- `TZ_26_DatelineStandardTime`\n- `TZ_27_E_AfricaStandardTime`\n- `TZ_28_E_AustraliaStandardTime`\n- `TZ_29_E_EuropeStandardTime`\n- `TZ_30_E_SouthAmericaStandardTime`\n- `TZ_31_EasternStandardTime`\n- `TZ_32_EgyptStandardTime`\n- `TZ_33_EkaterinburgStandardTime`\n- `TZ_34_FijiStandardTime`\n- `TZ_35_FLE_StandardTime`\n- `TZ_36_GeorgianStandardTime`\n- `TZ_37_GMT_StandardTime`\n- `TZ_38_GreenlandStandardTime`\n- `TZ_39_GreenwichStandardTime`\n- `TZ_40_GTB_StandardTime`\n- `TZ_41_HawaiianStandardTime`\n- `TZ_42_IndiaStandardTime`\n- `TZ_43_IranStandardTime`\n- `TZ_44_IsraelStandardTime`\n- `TZ_45_JordanStandardTime`\n- `TZ_46_KaliningradStandardTime`\n- `TZ_47_KamchatkaStandardTime`\n- `TZ_48_KoreaStandardTime`\n- `TZ_49_MagadanStandardTime`\n- `TZ_50_MauritiusStandardTime`\n- `TZ_51_MidAtlanticStandardTime`\n- `TZ_52_MiddleEastStandardTime`\n- `TZ_53_MontevideoStandardTime`\n- `TZ_54_MoroccoStandardTime`\n- `TZ_55_MountainStandardTime`\n- `TZ_56_MountainStandardTimeMMexico`\n- `TZ_57_MyanmarStandardTime`\n- `TZ_58_N_CentralAsiaStandardTime`\n- `TZ_59_NamibiaStandardTime`\n- `TZ_60_NepalStandardTime`\n- `TZ_61_NewZealandStandardTime`\n- `TZ_62_NewfoundlandStandardTime`\n- `TZ_63_NorthAsiaEastStandardTime`\n- `TZ_64_NorthAsiaStandardTime`\n- `TZ_65_PacificSAStandardTime`\n- `TZ_66_PacificStandardTime`\n- `TZ_67_PacificStandardTimeMexico`\n- `TZ_68_PakistanStandardTime`\n- `TZ_69_ParaguayStandardTime`\n- `TZ_70_RomanceStandardTime`\n- `TZ_71_RussianStandardTime`\n- `TZ_72_SAEasternStandardTime`\n- `TZ_73_SAPacificStandardTime`\n- `TZ_74_SAWesternStandardTime`\n- `TZ_75_SamoaStandardTime`\n- `TZ_76_SE_AsiaStandardTime`\n- `TZ_77_SingaporeStandardTime`\n- `TZ_78_SouthAfricaStandardTime`\n- `TZ_79_SriLankaStandardTime`\n- `TZ_80_SyriaStandardTime`\n- `TZ_81_TaipeiStandardTime`\n- `TZ_82_TasmaniaStandardTime`\n- `TZ_83_TokyoStandardTime`\n- `TZ_84_TongaStandardTime`\n- `TZ_85_TurkeyStandardTime`\n- `TZ_86_UlaanbaatarStandardTime`\n- `TZ_87_US_EasternStandardTime`\n- `TZ_88_USMountainStandardTime`\n- `TZ_89_VenezuelaStandardTime`\n- `TZ_90_VladivostokStandardTime`\n- `TZ_91_W_AustraliaStandardTime`\n- `TZ_92_W_CentralAfricaStandardTime`\n- `TZ_93_W_EuropeStandardTime`\n- `TZ_94_WestAsiaStandardTime`\n- `TZ_95_WestPacificStandardTime`\n- `TZ_96_YakutskStandardTime`\n",
                        "type": "string"
                    },
                    "timezoneOffsetAPIMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "timezoneOffsetUI": {
                        "description": "Specifies the time zone\nto use in the UI.\n\nValid values are:\n\n- `TZ_01_AfghanistanStandardTime`\n- `TZ_02_AlaskanStandardTime`\n- `TZ_03_ArabStandardTime`\n- `TZ_04_ArabianStandardTime`\n- `TZ_05_ArabicStandardTime`\n- `TZ_06_ArgentinaStandardTime`\n- `TZ_07_AtlanticStandardTime`\n- `TZ_08_AUS_CentralStandardTime`\n- `TZ_09_AUS_EasternStandardTime`\n- `TZ_10_AzerbaijanStandardTime`\n- `TZ_11_AzoresStandardTime`\n- `TZ_12_BangladeshStandardTime`\n- `TZ_13_CanadaCentralStandardTime`\n- `TZ_14_CapeVerdeStandardTime`\n- `TZ_15_CaucasusStandardTime`\n- `TZ_16_CentralAustraliaStandardTime`\n- `TZ_17_CentralAmericaStandardTime`\n- `TZ_18_CentralAsiaStandardTime`\n- `TZ_19_CentralBrazilianStandardTime`\n- `TZ_20_CentralEuropeStandardTime`\n- `TZ_21_CentralEuropeanStandardTime`\n- `TZ_22_CentralPacificStandardTime`\n- `TZ_23_CentralStandardTime`\n- `TZ_24_CentralStandardTimeMexico`\n- `TZ_25_ChinaStandardTime`\n- `TZ_26_DatelineStandardTime`\n- `TZ_27_E_AfricaStandardTime`\n- `TZ_28_E_AustraliaStandardTime`\n- `TZ_29_E_EuropeStandardTime`\n- `TZ_30_E_SouthAmericaStandardTime`\n- `TZ_31_EasternStandardTime`\n- `TZ_32_EgyptStandardTime`\n- `TZ_33_EkaterinburgStandardTime`\n- `TZ_34_FijiStandardTime`\n- `TZ_35_FLE_StandardTime`\n- `TZ_36_GeorgianStandardTime`\n- `TZ_37_GMT_StandardTime`\n- `TZ_38_GreenlandStandardTime`\n- `TZ_39_GreenwichStandardTime`\n- `TZ_40_GTB_StandardTime`\n- `TZ_41_HawaiianStandardTime`\n- `TZ_42_IndiaStandardTime`\n- `TZ_43_IranStandardTime`\n- `TZ_44_IsraelStandardTime`\n- `TZ_45_JordanStandardTime`\n- `TZ_46_KaliningradStandardTime`\n- `TZ_47_KamchatkaStandardTime`\n- `TZ_48_KoreaStandardTime`\n- `TZ_49_MagadanStandardTime`\n- `TZ_50_MauritiusStandardTime`\n- `TZ_51_MidAtlanticStandardTime`\n- `TZ_52_MiddleEastStandardTime`\n- `TZ_53_MontevideoStandardTime`\n- `TZ_54_MoroccoStandardTime`\n- `TZ_55_MountainStandardTime`\n- `TZ_56_MountainStandardTimeMMexico`\n- `TZ_57_MyanmarStandardTime`\n- `TZ_58_N_CentralAsiaStandardTime`\n- `TZ_59_NamibiaStandardTime`\n- `TZ_60_NepalStandardTime`\n- `TZ_61_NewZealandStandardTime`\n- `TZ_62_NewfoundlandStandardTime`\n- `TZ_63_NorthAsiaEastStandardTime`\n- `TZ_64_NorthAsiaStandardTime`\n- `TZ_65_PacificSAStandardTime`\n- `TZ_66_PacificStandardTime`\n- `TZ_67_PacificStandardTimeMexico`\n- `TZ_68_PakistanStandardTime`\n- `TZ_69_ParaguayStandardTime`\n- `TZ_70_RomanceStandardTime`\n- `TZ_71_RussianStandardTime`\n- `TZ_72_SAEasternStandardTime`\n- `TZ_73_SAPacificStandardTime`\n- `TZ_74_SAWesternStandardTime`\n- `TZ_75_SamoaStandardTime`\n- `TZ_76_SE_AsiaStandardTime`\n- `TZ_77_SingaporeStandardTime`\n- `TZ_78_SouthAfricaStandardTime`\n- `TZ_79_SriLankaStandardTime`\n- `TZ_80_SyriaStandardTime`\n- `TZ_81_TaipeiStandardTime`\n- `TZ_82_TasmaniaStandardTime`\n- `TZ_83_TokyoStandardTime`\n- `TZ_84_TongaStandardTime`\n- `TZ_85_TurkeyStandardTime`\n- `TZ_86_UlaanbaatarStandardTime`\n- `TZ_87_US_EasternStandardTime`\n- `TZ_88_USMountainStandardTime`\n- `TZ_89_VenezuelaStandardTime`\n- `TZ_90_VladivostokStandardTime`\n- `TZ_91_W_AustraliaStandardTime`\n- `TZ_92_W_CentralAfricaStandardTime`\n- `TZ_93_W_EuropeStandardTime`\n- `TZ_94_WestAsiaStandardTime`\n- `TZ_95_WestPacificStandardTime`\n- `TZ_96_YakutskStandardTime`\n",
                        "type": "string"
                    },
                    "timezoneOffsetUIMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "universalSignatureOptIn": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "useAccountLevelEmail": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "useAccountLevelEmailMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useConsumerDisclosure": {
                        "description": "When **true,** the account uses an Electronic Record and\nSignature Disclosure Statement.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "useConsumerDisclosureMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useConsumerDisclosureWithinAccount": {
                        "description": "When **true,** specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.",
                        "type": "string"
                    },
                    "useConsumerDisclosureWithinAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useDerivedKeys": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "useDerivedKeysMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useDocuSignExpressSignerCertificate": {
                        "description": "When **true,**\nsigners\nare required to use Express Digital Signatures.\n",
                        "type": "string"
                    },
                    "useDocuSignExpressSignerCertificateMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useEnvelopeSearchMixedMode": {
                        "description": "",
                        "type": "string"
                    },
                    "useEnvelopeSearchMixedModeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useMultiAppGroupsData": {
                        "description": "",
                        "type": "string"
                    },
                    "useMultiAppGroupsDataMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useNewBlobForPdf": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "useNewBlobForPdfMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useNewEnvelopeSearch": {
                        "description": "",
                        "type": "string"
                    },
                    "useNewEnvelopeSearchMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useNewEnvelopeSearchOnlyWhenSearchingAfterDate": {
                        "description": "",
                        "type": "string"
                    },
                    "useNewEnvelopeSearchOnlyWhenSearchingAfterDateMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useNewEnvelopeSearchOnlyWithSearchTerm": {
                        "description": "",
                        "type": "string"
                    },
                    "useNewEnvelopeSearchOnlyWithSearchTermMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useSAFESignerCertificates": {
                        "description": "When **true,**\nsigners are\nrequired to use SAFE digital signatures.\n",
                        "type": "string"
                    },
                    "useSAFESignerCertificatesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "usesAPI": {
                        "description": "When **true,**\nthe account can use the API.\n\n**Note:** Only SysAdmin users can change this setting.\n",
                        "type": "string"
                    },
                    "usesAPIMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useSignatureProviderPlatform": {
                        "description": "Boolean that specifies whether the account uses the digital signature provider platform to eSign.",
                        "type": "string"
                    },
                    "useSignatureProviderPlatformMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "useSmartContractsV1": {
                        "description": "",
                        "type": "string"
                    },
                    "validationsAllowed": {
                        "description": "Boolean that specifies whether validations on recipient email domains are allowed.",
                        "type": "string"
                    },
                    "validationsAllowedMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "validationsBrand": {
                        "description": "Valid values are:\n\n- `docusign`\n- `account`\n",
                        "type": "string"
                    },
                    "validationsBrandMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "validationsCadence": {
                        "description": "Valid values are:\n\n- `none`\n- `monthly`\n",
                        "type": "string"
                    },
                    "validationsCadenceMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "validationsEnabled": {
                        "description": "When **true,**\nenables validations.\n",
                        "type": "string"
                    },
                    "validationsEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "validationsReport": {
                        "description": "Valid values are:\n\n- `none`\n- `life_sciences_part11`\n",
                        "type": "string"
                    },
                    "validationsReportMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "waterMarkEnabled": {
                        "description": "When **true,**\nthe\n[watermark feature](https://support.docusign.com/s/articles/How-do-I-manage-the-watermark-for-In-Process-envelopes-sent-from-my-account)\nis enabled for the account.\n",
                        "type": "string"
                    },
                    "waterMarkEnabledMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "writeReminderToEnvelopeHistory": {
                        "description": "When **true,**\nsent reminders are included in the envelope history.",
                        "type": "string"
                    },
                    "writeReminderToEnvelopeHistoryMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "wurflMinAllowableScreenSize": {
                        "description": "The smallest screen allowed.",
                        "type": "string"
                    },
                    "wurflMinAllowableScreenSizeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    }
                },
                "x-ds-definition-name": "accountSettingsInformation",
                "x-ms-summary": "Contains account settings information. Used in requests to set property values. Used in responses to report property values."
            },
            "accountSharedAccess": {
                "description": "Contains shared access information.",
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The account ID associated with the envelope.",
                        "type": "string"
                    },
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "sharedAccess": {
                        "description": "A list of shared access information of envelope and templates for the users specified in the request.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/memberSharedItems"
                        }
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountSharedAccess",
                "x-ms-summary": "Contains shared access information."
            },
            "accountSignature": {
                "type": "object",
                "properties": {
                    "adoptedDateTime": {
                        "description": "The UTC date and time when the user adopted the signature.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "customField": {
                        "description": "",
                        "type": "string"
                    },
                    "dateStampProperties": {
                        "$ref": "#/components/schemas/dateStampProperties"
                    },
                    "disallowUserResizeStamp": {
                        "description": "When **true,** users may not resize the stamp.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "externalID": {
                        "description": "Optionally specify an external identifier for the user's signature.",
                        "type": "string"
                    },
                    "imageBase64": {
                        "description": "",
                        "type": "string"
                    },
                    "imageType": {
                        "description": "Specificies the type of image. Valid values:\n\n- `stamp_image`\n- `signature_image`\n- `initials_image`",
                        "type": "string"
                    },
                    "initials150ImageId": {
                        "description": "The ID of the user's initials image.",
                        "type": "string"
                    },
                    "initialsImageUri": {
                        "description": "The URI for retrieving the image of the user's initials.",
                        "type": "string"
                    },
                    "isDefault": {
                        "description": "Boolean that specifies whether the signature is the default signature for the user.",
                        "type": "string"
                    },
                    "lastModifiedDateTime": {
                        "description": "The date and time that the item was last modified.",
                        "type": "string"
                    },
                    "nrdsId": {
                        "description": "The National Association of Realtors (NAR) membership ID for a user who is a realtor.",
                        "type": "string"
                    },
                    "nrdsLastName": {
                        "description": "The realtor's last name.",
                        "type": "string"
                    },
                    "nrdsStatus": {
                        "description": "The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:\n\n- `Active`\n- `Inactive`\n- `Terminate`\n- `Provisional`\n- `Deceased`\n- `Suspend`\n- `Unknown`",
                        "type": "string"
                    },
                    "phoneticName": {
                        "description": "The phonetic spelling of the `signatureName`.",
                        "type": "string"
                    },
                    "signature150ImageId": {
                        "description": "The ID of the user's signature image.",
                        "type": "string"
                    },
                    "signatureFont": {
                        "description": "The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.\n\n- `\"1_DocuSign\"`\n- `\"2_DocuSign\"`\n- `\"3_DocuSign\"`\n- `\"4_DocuSign\"`\n- `\"5_DocuSign\"`\n- `\"6_DocuSign\"`\n- `\"7_DocuSign\"`\n- `\"8_DocuSign\"`\n- `\"Mistral\"`\n- `\"Rage Italic\"`\n",
                        "type": "string"
                    },
                    "signatureGroups": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signatureGroup"
                        }
                    },
                    "signatureId": {
                        "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
                        "type": "string"
                    },
                    "signatureImageUri": {
                        "description": "An endpoint URI that you can use to retrieve the user's signature image.",
                        "type": "string"
                    },
                    "signatureInitials": {
                        "description": "Specifies the user's signature in initials format.",
                        "type": "string"
                    },
                    "signatureName": {
                        "description": "Specifies the user's signature name.",
                        "type": "string"
                    },
                    "signatureRights": {
                        "description": "The rights that the user has to the signature. Valid values are:\n\n- `none`\n- `read`\n- `admin`",
                        "type": "string"
                    },
                    "signatureType": {
                        "description": "Specifies the type of signature.",
                        "type": "string"
                    },
                    "signatureUsers": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signatureUser"
                        }
                    },
                    "stampFormat": {
                        "description": "The format of a stamp. Valid values are:\n\n- `NameHanko`: The stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents the signer's name and the date. ",
                        "type": "string"
                    },
                    "stampImageUri": {
                        "description": "The URI for retrieving the image of the user's stamp.",
                        "type": "string"
                    },
                    "stampSizeMM": {
                        "description": "The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
                        "type": "string"
                    },
                    "stampType": {
                        "description": "The type of stamp. Valid values are:\n\n- `signature`: A signature image. This is the default value.\n- `stamp`: A stamp image.\n- null",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountSignature",
                "description": "",
                "x-ms-summary": ""
            },
            "accountSignatureDefinition": {
                "type": "object",
                "properties": {
                    "dateStampProperties": {
                        "$ref": "#/components/schemas/dateStampProperties"
                    },
                    "disallowUserResizeStamp": {
                        "description": "When **true,** users may not resize the stamp.",
                        "type": "string"
                    },
                    "externalID": {
                        "description": "Optionally specify an external identifier for the user's signature.",
                        "type": "string"
                    },
                    "imageType": {
                        "description": "Specificies the type of image. Valid values:\n\n- `stamp_image`\n- `signature_image`\n- `initials_image`",
                        "type": "string"
                    },
                    "isDefault": {
                        "description": "Boolean that specifies whether the signature is the default signature for the user.",
                        "type": "string"
                    },
                    "nrdsId": {
                        "description": "The National Association of Realtors (NAR) membership ID for a user who is a realtor.",
                        "type": "string"
                    },
                    "nrdsLastName": {
                        "description": "The realtor's last name.",
                        "type": "string"
                    },
                    "phoneticName": {
                        "description": "The phonetic spelling of the `signatureName`.",
                        "type": "string"
                    },
                    "signatureFont": {
                        "description": "The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.\n\n- `\"1_DocuSign\"`\n- `\"2_DocuSign\"`\n- `\"3_DocuSign\"`\n- `\"4_DocuSign\"`\n- `\"5_DocuSign\"`\n- `\"6_DocuSign\"`\n- `\"7_DocuSign\"`\n- `\"8_DocuSign\"`\n- `\"Mistral\"`\n- `\"Rage Italic\"`\n",
                        "type": "string"
                    },
                    "signatureGroups": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signatureGroupDef"
                        }
                    },
                    "signatureId": {
                        "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
                        "type": "string"
                    },
                    "signatureInitials": {
                        "description": "Specifies the user's signature in initials format.",
                        "type": "string"
                    },
                    "signatureName": {
                        "description": "Specifies the user's signature name.",
                        "type": "string"
                    },
                    "signatureType": {
                        "description": "Specifies the type of signature.",
                        "type": "string"
                    },
                    "signatureUsers": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signatureUserDef"
                        }
                    },
                    "stampFormat": {
                        "description": "The format of a stamp. Valid values are:\n\n- `NameHanko`: The stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents the signer's name and the date. ",
                        "type": "string"
                    },
                    "stampSizeMM": {
                        "description": "The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountSignatureDefinition",
                "description": "",
                "x-ms-summary": ""
            },
            "accountSignatureProvider": {
                "type": "object",
                "properties": {
                    "isRequired": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "priority": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signatureProviderDisplayName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signatureProviderId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signatureProviderName": {
                        "description": "The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. For details, see [the current provider list](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/). You can also retrieve the list by using the [AccountSignatureProviders: List](/docs/esign-rest-api/reference/accounts/accountsignatureproviders/list/) method.\n\nExample: `universalsignaturepen_default`\n\n",
                        "type": "string"
                    },
                    "signatureProviderOptionsMetadata": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountSignatureProviderOption"
                        }
                    },
                    "signatureProviderRequiredOptions": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signatureProviderRequiredOption"
                        }
                    }
                },
                "description": "Contains information about the signature provider associated with the Identity Verification workflow.\nIf empty, then this specific workflow is not intended for signers.\n",
                "x-ds-definition-name": "accountSignatureProvider",
                "x-ms-summary": "Contains information about the signature provider associated with the Identity Verification workflow.\nIf empty, then this specific workflow is not intended for signers.\n"
            },
            "accountSignatureProviderOption": {
                "type": "object",
                "properties": {
                    "signatureProviderOptionDisplayName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signatureProviderOptionId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signatureProviderOptionName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "description": "Reserved for DocuSign.",
                "x-ds-definition-name": "accountSignatureProviderOption",
                "x-ms-summary": "Reserved for DocuSign."
            },
            "accountSignatureProviders": {
                "type": "object",
                "properties": {
                    "signatureProviders": {
                        "description": "Names of electronic or digital signature providers that can be used.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountSignatureProvider"
                        }
                    }
                },
                "x-ds-definition-name": "accountSignatureProviders",
                "description": "",
                "x-ms-summary": ""
            },
            "accountSignaturesInformation": {
                "type": "object",
                "properties": {
                    "accountSignatures": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountSignature"
                        }
                    }
                },
                "x-ds-definition-name": "accountSignaturesInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "accountUISettings": {
                "type": "object",
                "properties": {
                    "adminMessage": {
                        "$ref": "#/components/schemas/adminMessage"
                    },
                    "allowUsersToEditSharedAccess": {
                        "description": "",
                        "type": "string"
                    },
                    "allowUsersToEditSharedAccessMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "askAnAdmin": {
                        "$ref": "#/components/schemas/askAnAdmin"
                    },
                    "clickwrapSchemaVersion": {
                        "description": "",
                        "type": "string"
                    },
                    "clickwrapSchemaVersionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableAdminMessage": {
                        "description": "",
                        "type": "string"
                    },
                    "enableAdminMessageMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableEasySignCanUseMultiTemplateApply": {
                        "description": "",
                        "type": "string"
                    },
                    "enableEasySignCanUseMultiTemplateApplyMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableEasySignTemplateUpload": {
                        "description": "",
                        "type": "string"
                    },
                    "enableEasySignTemplateUploadMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableEnvelopeCopyWithData": {
                        "description": "",
                        "type": "string"
                    },
                    "enableEnvelopeCopyWithDataMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableLegacySendflowLink": {
                        "description": "",
                        "type": "string"
                    },
                    "enableLegacySendflowLinkMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "hasExternalLinkedAccounts": {
                        "description": "",
                        "type": "string"
                    },
                    "hasExternalLinkedAccountsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "hideSendAnEnvelope": {
                        "description": "",
                        "type": "string"
                    },
                    "hideSendAnEnvelopeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "hideUseATemplate": {
                        "description": "When **true,** the **Templates** menu is hidden from account users who are not Admins. The default value is **false.**",
                        "type": "string"
                    },
                    "hideUseATemplateInPrepare": {
                        "description": "",
                        "type": "string"
                    },
                    "hideUseATemplateInPrepareMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "hideUseATemplateMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "orderBasedRecipientIdGeneration": {
                        "description": "",
                        "type": "string"
                    },
                    "orderBasedRecipientIdGenerationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "removeEnvelopeForwarding": {
                        "description": "",
                        "type": "string"
                    },
                    "removeEnvelopeForwardingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "shouldRedactAccessCode": {
                        "description": "",
                        "type": "string"
                    },
                    "shouldRedactAccessCodeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "uploadNewImageToSignOrInitial": {
                        "description": "",
                        "type": "string"
                    },
                    "uploadNewImageToSignOrInitialMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    }
                },
                "description": "An object that defines the options that are available to non-administrators in the UI.",
                "x-ds-definition-name": "accountUISettings",
                "x-ms-summary": "An object that defines the options that are available to non-administrators in the UI."
            },
            "addOn": {
                "description": "Contains information about add ons.",
                "type": "object",
                "properties": {
                    "active": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "addOnId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "id": {
                        "description": "A unique ID for the Salesforce object.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "addOn",
                "x-ms-summary": "Contains information about add ons."
            },
            "addressInformation": {
                "description": "Contains address information.",
                "type": "object",
                "properties": {
                    "address1": {
                        "description": "The first line of the user's address.\nMaximum length: 100 characters.",
                        "type": "string"
                    },
                    "address2": {
                        "description": "The second line of the user's address.\nMaximum length: 100 characters.",
                        "type": "string"
                    },
                    "city": {
                        "description": "The user's city. Maximum length: 40 characters.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The user's country. Maximum length: 50 characters.",
                        "type": "string"
                    },
                    "fax": {
                        "description": "A fax number associated with the address, if one is available.",
                        "type": "string"
                    },
                    "phone": {
                        "description": "A phone number associated with the address.",
                        "type": "string"
                    },
                    "postalCode": {
                        "description": "The user's postal code. Maximum length: 20 characters.",
                        "type": "string"
                    },
                    "stateOrProvince": {
                        "description": "The user's state or province. Maximum length: 40 characters.",
                        "type": "string"
                    },
                    "zipPlus4": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "addressInformation",
                "x-ms-summary": "Contains address information."
            },
            "addressInformationInput": {
                "description": "Contains address input information.",
                "type": "object",
                "properties": {
                    "addressInformation": {
                        "$ref": "#/components/schemas/addressInformation"
                    },
                    "displayLevelCode": {
                        "description": "Specifies the display level for the recipient. Valid values are:\n* `ReadOnly`\n* `Editable`\n* `DoNotDisplay`",
                        "type": "string"
                    },
                    "receiveInResponse": {
                        "description": "A Boolean value that specifies whether the information must be returned in the response.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "addressInformationInput",
                "x-ms-summary": "Contains address input information."
            },
            "adminMessage": {
                "type": "object",
                "properties": {
                    "baseMessage": {
                        "description": "",
                        "type": "string"
                    },
                    "moreInformation": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "adminMessage",
                "description": "",
                "x-ms-summary": ""
            },
            "agent": {
                "description": "Contains information about an agent recipient. An agent is a recipient who can add name and email information for recipients that appear after the agent in routing order.",
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "consentDetailsList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentDetails"
                        }
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The email ID of the agent. Notification of the document to sign is sent to this email id. \n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "emailRecipientPostSigningURL": {
                        "description": "",
                        "type": "string"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "excludedDocuments": {
                        "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "firstName": {
                        "description": "The recipient's first name. Maximum Length: 50 characters.",
                        "type": "string"
                    },
                    "firstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fullName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fullNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The recipient's last name.",
                        "type": "string"
                    },
                    "lastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "The code associated with the recipient's status. This property is read-only.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "agent",
                "x-ms-summary": "Contains information about an agent recipient. An agent is a recipient who can add name and email information for recipients that appear after the agent in routing order."
            },
            "apiRequestLog": {
                "description": "Contains API request log information.",
                "type": "object",
                "properties": {
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The API endpoint that was called.",
                        "type": "string"
                    },
                    "requestLogId": {
                        "description": "The ID of the log entry.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the API request.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "apiRequestLog",
                "x-ms-summary": "Contains API request log information."
            },
            "apiRequestLogsResult": {
                "description": "Contains information about multiple API request logs.",
                "type": "object",
                "properties": {
                    "apiRequestLogs": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/apiRequestLog"
                        }
                    }
                },
                "x-ds-definition-name": "apiRequestLogsResult",
                "x-ms-summary": "Contains information about multiple API request logs."
            },
            "approve": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "buttonText": {
                        "description": " Specifies the approval text that displays in the tab. ",
                        "type": "string"
                    },
                    "buttonTextMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. You can only use this when adding new tabs for a recipient. When used, the new tab inherits all of the properties of the custom tab.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "**Note:** Approve tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to approve documents\nwithout placing a signature or initials on the\ndocument.\n",
                "x-ds-definition-name": "approve",
                "x-ms-summary": "A tab that allows the recipient to approve documents\nwithout placing a signature or initials on the\ndocument.\n"
            },
            "appStoreProduct": {
                "description": "Contains information about an APP store product.",
                "type": "object",
                "properties": {
                    "marketPlace": {
                        "description": "",
                        "type": "string"
                    },
                    "productId": {
                        "description": "The Product ID from the AppStore.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "appStoreProduct",
                "x-ms-summary": "Contains information about an APP store product."
            },
            "appStoreReceipt": {
                "description": "Contains information about an APP store receipt.",
                "type": "object",
                "properties": {
                    "downgradeProductId": {
                        "description": "",
                        "type": "string"
                    },
                    "isDowngradeCancellation": {
                        "description": "",
                        "type": "string"
                    },
                    "productId": {
                        "description": "The Product ID from the AppStore.",
                        "type": "string"
                    },
                    "receiptData": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "appStoreReceipt",
                "x-ms-summary": "Contains information about an APP store receipt."
            },
            "askAnAdmin": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "phone": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "askAnAdmin",
                "description": "",
                "x-ms-summary": ""
            },
            "attachment": {
                "description": "Contains information about an attachment.",
                "type": "object",
                "properties": {
                    "accessControl": {
                        "description": "Valid values are `sender` and `senderAndAllRecipients`.",
                        "type": "string"
                    },
                    "attachmentId": {
                        "description": "The unique identifier for the attachment.",
                        "type": "string"
                    },
                    "attachmentType": {
                        "description": "Specifies the type of the attachment for the recipient.",
                        "type": "string"
                    },
                    "data": {
                        "description": "A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.",
                        "type": "string"
                    },
                    "label": {
                        "description": "A label for the attachment. Potential values include: \n\n- `guidedForm`: [Guided forms](https://www.docusign.com/products/guided-forms) provide a step-by-step, mobile-ready experience to help signers easily complete long or complex forms.\n- `eventNotifications`: A list of envelope-level event statuses that trigger Connect to send updates to the endpoint specified in the `url` property. \n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the attachment.",
                        "type": "string"
                    },
                    "remoteUrl": {
                        "description": "The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "attachment",
                "x-ms-summary": "Contains information about an attachment."
            },
            "authenticationMethod": {
                "description": "Contains information about the method used for authentication.",
                "type": "object",
                "properties": {
                    "authenticationType": {
                        "description": "Indicates the type of authentication. Valid values are: PhoneAuth, STAN, ISCheck, OFAC, AccessCode, AgeVerify, or SSOAuth. ",
                        "type": "string"
                    },
                    "lastProvider": {
                        "description": "The last provider that authenticated the user. ",
                        "type": "string"
                    },
                    "lastTimestamp": {
                        "description": " The data and time the user last used the authentication method. ",
                        "type": "string"
                    },
                    "totalCount": {
                        "description": "The number of times the authentication method was used. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "authenticationMethod",
                "x-ms-summary": "Contains information about the method used for authentication."
            },
            "authenticationStatus": {
                "description": "A complex element that contains information about a user's authentication status.",
                "type": "object",
                "properties": {
                    "accessCodeResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "ageVerifyResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "anySocialIDResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "facebookResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "googleResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "identityVerificationResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "idLookupResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "idQuestionsResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "linkedinResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "liveIDResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "ofacResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "openIDResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "phoneAuthResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "salesforceResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "signatureProviderResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "smsAuthResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "sTANPinResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "twitterResult": {
                        "$ref": "#/components/schemas/eventResult"
                    },
                    "yahooResult": {
                        "$ref": "#/components/schemas/eventResult"
                    }
                },
                "x-ds-definition-name": "authenticationStatus",
                "x-ms-summary": "A complex element that contains information about a user's authentication status."
            },
            "authorizationUser": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The account ID.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the authorization user.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the authorization user.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the authorization user.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "authorizationUser",
                "description": "",
                "x-ms-summary": ""
            },
            "bccEmailAddress": {
                "description": "Contains information about the BCC email address.",
                "type": "object",
                "properties": {
                    "bccEmailAddressId": {
                        "description": "Only users with canManageAccount setting can use this option. An array of up to 5 email addresses the envelope is sent to as a BCC email. \n \nExample: If your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.",
                        "type": "string"
                    },
                    "email": {
                        "description": "Specifies the BCC email address. DocuSign verifies that the email format is correct, but does not verify that the email is active.Using this overrides the BCC for Email Archive information setting for this envelope.\n\nMaximum of length: 100 characters. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bccEmailAddress",
                "x-ms-summary": "Contains information about the BCC email address."
            },
            "bccEmailArchive": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The ID of the account that owns the BCC email archive configuration.",
                        "type": "string"
                    },
                    "bccEmailArchiveId": {
                        "description": "The ID of the BCC email archive configuration.",
                        "type": "string"
                    },
                    "created": {
                        "description": "The UTC DateTime when the BCC email archive configuration was created.",
                        "type": "string"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "email": {
                        "description": "The BCC email address to use for archiving DocuSign messages.\n\nExample: customer_bcc@example.com",
                        "type": "string"
                    },
                    "emailNotificationId": {
                        "description": "The GUID of the activation email message sent to the BCC email address.",
                        "type": "string"
                    },
                    "modified": {
                        "description": "The UTC DateTime when the BCC email archive configuration was last modified.",
                        "type": "string"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "status": {
                        "description": "The status of the BCC email address. Possible values are:\n\n- `activation_sent`: An activation link has been sent to the BCC email address.\n- `active`: The BCC email address is actively used for archiving.\n- `closed`: The BCC email address is no longer used for archiving.",
                        "type": "string"
                    },
                    "uri": {
                        "description": "The helper URI for retrieving the BCC email archive.",
                        "type": "string"
                    }
                },
                "description": "This object contains information abut a BCC email archive configuration (a BCC email address used to archive DocuSign-generated emails).",
                "x-ds-definition-name": "bccEmailArchive",
                "x-ms-summary": "This object contains information abut a BCC email archive configuration (a BCC email address used to archive DocuSign-generated emails)."
            },
            "bccEmailArchiveHistory": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The ID of the account that owns the BCC email archive configuration.",
                        "type": "string"
                    },
                    "action": {
                        "description": "The action taken on the BCC email archive configuration.\n\nExamples: \n\n- `CREATED`: The BCC email archive configuration has been created.\n- `UPDATED`: The BCC email address has been activated by clicking on the activation link in the activation email message.\n- `CLOSED`: The BCC email address has been marked as closed is no longer used for archiving.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The BCC email address used to archive the emails that DocuSign generates. \n\nExample: customer_bcc@example.com",
                        "type": "string"
                    },
                    "modified": {
                        "description": "The UTC DateTime when the BCC email address was last modified.",
                        "type": "string"
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "status": {
                        "description": "The status of the BCC email address. Possible values are:\n\n- `activation_sent`: An activation link has been sent to the BCC email address.\n- `active`: The BCC email address is actively used for archiving.\n- `closed`: The BCC email address is no longer used for archiving.",
                        "type": "string"
                    }
                },
                "description": "Contains details about the history of the BCC email archive configuration.",
                "x-ds-definition-name": "bccEmailArchiveHistory",
                "x-ms-summary": "Contains details about the history of the BCC email archive configuration."
            },
            "bccEmailArchiveHistoryList": {
                "type": "object",
                "properties": {
                    "bccEmailArchiveHistory": {
                        "description": "A list of changes to the BCC email archive configuration.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bccEmailArchiveHistory"
                        }
                    },
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bccEmailArchiveHistoryList",
                "description": "",
                "x-ms-summary": ""
            },
            "bccEmailArchiveList": {
                "type": "object",
                "properties": {
                    "bccEmailArchives": {
                        "description": "A list of  BCC email archive configurations.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bccEmailArchive"
                        }
                    },
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "description": "Contains a list of BCC email archive configurations.",
                "x-ds-definition-name": "bccEmailArchiveList",
                "x-ms-summary": "Contains a list of BCC email archive configurations."
            },
            "billingCharge": {
                "description": "Contains information about a billing charge.",
                "type": "object",
                "properties": {
                    "allowedQuantity": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "blocked": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "chargeName": {
                        "description": "Provides information on what services the charge item is for.\n\nThe following table provides a description of the different chargeName values available at this time.\n\n| chargeName | Description |\n| --- | --- |\n| id_check | ID Check Charge |\n| in_person_signing | In Person Signing charge |\n| envelopes Included | Sent Envelopes for the account |\n| age_verify | Age verification check |\n| ofac | OFAC Check |\n| id_confirm | ID confirmation check |\n| student_authentication | STAN PIN authentication check |\n| wet_sign_fax | Pages for returning signed documents by fax |\n| attachment_fax | Pages for returning attachments by fax |\n| phone_authentication | Phone authentication charge |\n| powerforms | PowerForm envelopes sent |\n| signer_payments | Payment processing charge |\n| outbound_fax | Send by fax charge |\n| bulk_recipient_envelopes | Bulk Recipient Envelopes sent |\n| sms_authentications | SMS authentication charge |\n| saml_authentications | SAML authentication charge |\n| express_signer_certificate | DocuSign Express Certificate charge |\n| personal_signer_certificate | Personal Signer Certificate charge |\n| safe_certificate | SAFE BioPharma Signer Certificate charge |\n| seats | Included active seats charge |\n| open_trust_certificate | OpenTrust Signer Certificate charge |",
                        "type": "string"
                    },
                    "chargeType": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "chargeUnitOfMeasure": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "discounts": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingDiscount"
                        }
                    },
                    "firstEffectiveDate": {
                        "description": "",
                        "type": "string"
                    },
                    "includedQuantity": {
                        "description": "",
                        "type": "string"
                    },
                    "incrementalQuantity": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lastEffectiveDate": {
                        "description": "",
                        "type": "string"
                    },
                    "prices": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingPrice"
                        }
                    },
                    "unitPrice": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "usedQuantity": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingCharge",
                "x-ms-summary": "Contains information about a billing charge."
            },
            "billingChargeResponse": {
                "description": "Defines a billing charge response object.",
                "type": "object",
                "properties": {
                    "billingChargeItems": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingCharge"
                        }
                    }
                },
                "x-ds-definition-name": "billingChargeResponse",
                "x-ms-summary": "Defines a billing charge response object."
            },
            "billingDiscount": {
                "type": "object",
                "properties": {
                    "beginQuantity": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "discount": {
                        "description": "",
                        "type": "string"
                    },
                    "endQuantity": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingDiscount",
                "description": "",
                "x-ms-summary": ""
            },
            "billingEntityInformationResponse": {
                "type": "object",
                "properties": {
                    "billingProfile": {
                        "description": "The type of billing method on the account. Valid values are: \n\n- `direct`\n- `web`",
                        "type": "string"
                    },
                    "entityName": {
                        "description": "",
                        "type": "string"
                    },
                    "externalEntityId": {
                        "description": "",
                        "type": "string"
                    },
                    "isExternallyBilled": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingEntityInformationResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "billingInvoice": {
                "description": "Contains information about a billing invoice.",
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "The total amount of the purchase.",
                        "type": "string"
                    },
                    "balance": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "dueDate": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "invoiceId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "invoiceItems": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingInvoiceItem"
                        }
                    },
                    "invoiceNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "invoiceUri": {
                        "description": "Contains a URI for an endpoint that you can use to retrieve invoice information.",
                        "type": "string"
                    },
                    "nonTaxableAmount": {
                        "description": "",
                        "type": "string"
                    },
                    "pdfAvailable": {
                        "description": "",
                        "type": "string"
                    },
                    "taxableAmount": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingInvoice",
                "x-ms-summary": "Contains information about a billing invoice."
            },
            "billingInvoiceItem": {
                "description": "Contains information about an item on a billing invoice.",
                "type": "object",
                "properties": {
                    "chargeAmount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "chargeName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "invoiceItemId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The quantity of envelopes to add to the account.",
                        "type": "string"
                    },
                    "taxAmount": {
                        "description": "",
                        "type": "string"
                    },
                    "taxExemptAmount": {
                        "description": "",
                        "type": "string"
                    },
                    "unitPrice": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingInvoiceItem",
                "x-ms-summary": "Contains information about an item on a billing invoice."
            },
            "billingInvoicesResponse": {
                "description": "Defines a billing invoice response object.",
                "type": "object",
                "properties": {
                    "billingInvoices": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingInvoice"
                        }
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingInvoicesResponse",
                "x-ms-summary": "Defines a billing invoice response object."
            },
            "billingInvoicesSummary": {
                "type": "object",
                "properties": {
                    "accountBalance": {
                        "description": "",
                        "type": "string"
                    },
                    "billingInvoices": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingInvoice"
                        }
                    },
                    "currencyCode": {
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.\n",
                        "type": "string"
                    },
                    "pastDueBalance": {
                        "description": "",
                        "type": "string"
                    },
                    "paymentAllowed": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingInvoicesSummary",
                "description": "",
                "x-ms-summary": ""
            },
            "billingPayment": {
                "description": "Contains information on a billing plan.",
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "invoiceId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "paymentId": {
                        "description": "The ID of the payment.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingPayment",
                "x-ms-summary": "Contains information on a billing plan."
            },
            "billingPaymentItem": {
                "description": "Defines a billing payment request object.",
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "The total amount of the purchase.",
                        "type": "string"
                    },
                    "description": {
                        "description": "A sender-defined description of the line item.\n",
                        "type": "string"
                    },
                    "paymentDate": {
                        "description": "",
                        "type": "string"
                    },
                    "paymentId": {
                        "description": "The ID of the payment.",
                        "type": "string"
                    },
                    "paymentNumber": {
                        "description": "When **true,** a PDF version of the invoice is available. \n\nTo get the PDF, make the call again and change \"Accept:\" in the header to \"Accept: application/pdf\".",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingPaymentItem",
                "x-ms-summary": "Defines a billing payment request object."
            },
            "billingPaymentRequest": {
                "type": "object",
                "properties": {
                    "paymentAmount": {
                        "description": "The payment amount for the past due invoices. This value must match the pastDueBalance value retrieved using Get Past Due Invoices.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingPaymentRequest",
                "description": "",
                "x-ms-summary": ""
            },
            "billingPaymentResponse": {
                "description": "Defines an billing payment response object.",
                "type": "object",
                "properties": {
                    "billingPayments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingPayment"
                        }
                    }
                },
                "x-ds-definition-name": "billingPaymentResponse",
                "x-ms-summary": "Defines an billing payment response object."
            },
            "billingPaymentsResponse": {
                "description": "Defines a billing payments response object.",
                "type": "object",
                "properties": {
                    "billingPayments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingPaymentItem"
                        }
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingPaymentsResponse",
                "x-ms-summary": "Defines a billing payments response object."
            },
            "billingPlan": {
                "description": "Contains information about a billing plan.",
                "type": "object",
                "properties": {
                    "appStoreProducts": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appStoreProduct"
                        }
                    },
                    "currencyPlanPrices": {
                        "description": "Contains the `currencyCode` and `currencySymbol` for the alternate currency values for `envelopeFee`, `fixedFee`, and `seatFee` that are configured for this plan feature set.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/currencyPlanPrice"
                        }
                    },
                    "enableSupport": {
                        "description": "When **true,** customer support is provided as part of the account plan.",
                        "type": "string"
                    },
                    "includedSeats": {
                        "description": "The number of seats (users) included in the plan.",
                        "type": "string"
                    },
                    "otherDiscountPercent": {
                        "description": "Any other percentage discount for the plan.\n\nExample: `\"0.00\"`",
                        "type": "string"
                    },
                    "paymentCycle": {
                        "description": " The payment cycle associated with the plan. Valid values: Monthly or Annually. ",
                        "type": "string"
                    },
                    "paymentMethod": {
                        "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
                        "type": "string"
                    },
                    "perSeatPrice": {
                        "description": "The per seat price for the plan.",
                        "type": "string"
                    },
                    "planClassification": {
                        "description": "Identifies the type of plan. Examples include:\n\n- `business`\n- `corporate`\n- `enterprise` \n- `free`",
                        "type": "string"
                    },
                    "planFeatureSets": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureSet"
                        }
                    },
                    "planId": {
                        "description": "DocuSign's ID for the account plan.",
                        "type": "string"
                    },
                    "planName": {
                        "description": "The name of the billing plan.\n",
                        "type": "string"
                    },
                    "seatDiscounts": {
                        "description": "A complex type that returns information about any seat discounts. It contains the information `BeginSeatCount`, `EndSeatCount` and `SeatDiscountPercent`.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/seatDiscount"
                        }
                    },
                    "supportIncidentFee": {
                        "description": "The support incident fee charged for each support incident.\n\nExample: `\"$0.00\"`",
                        "type": "string"
                    },
                    "supportPlanFee": {
                        "description": "The support plan fee charged for this plan.\n\nExample: `\"$0.00\"`",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingPlan",
                "x-ms-summary": "Contains information about a billing plan."
            },
            "billingPlanInformation": {
                "type": "object",
                "properties": {
                    "appStoreReceipt": {
                        "$ref": "#/components/schemas/appStoreReceipt"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/accountAddress"
                    },
                    "creditCardInformation": {
                        "$ref": "#/components/schemas/creditCardInformation"
                    },
                    "directDebitProcessorInformation": {
                        "$ref": "#/components/schemas/directDebitProcessorInformation"
                    },
                    "downgradeReason": {
                        "description": "(Optional) The user's reason for downgrading their billing plan.",
                        "type": "string"
                    },
                    "enablePreAuth": {
                        "description": "",
                        "type": "string"
                    },
                    "enableSupport": {
                        "description": "When **true,** customer support is provided as part of the account plan.",
                        "type": "string"
                    },
                    "includedSeats": {
                        "description": "The number of seats (users) included in the plan.",
                        "type": "string"
                    },
                    "incrementalSeats": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "paymentMethod": {
                        "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
                        "type": "string"
                    },
                    "paymentProcessor": {
                        "description": "",
                        "type": "string"
                    },
                    "paymentProcessorInformation": {
                        "$ref": "#/components/schemas/paymentProcessorInformation"
                    },
                    "planInformation": {
                        "$ref": "#/components/schemas/planInformation"
                    },
                    "processPayment": {
                        "description": "",
                        "type": "string"
                    },
                    "referralInformation": {
                        "$ref": "#/components/schemas/referralInformation"
                    },
                    "renewalStatus": {
                        "description": "The renewal status of the account. Possible values are:\n\n- `auto`: The account automatically renews. \n- `queued_for_close`: The account will be closed at the billingPeriodEndDate. \n- queued_for_downgrade`: The account will be downgraded at the `billingPeriodEndDate`.",
                        "type": "string"
                    },
                    "saleDiscountAmount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountFixedAmount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountPercent": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountPeriods": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountSeatPriceOverride": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "taxExemptId": {
                        "description": "",
                        "type": "string"
                    }
                },
                "description": "This object contains details about a billing plan.",
                "x-ds-definition-name": "billingPlanInformation",
                "x-ms-summary": "This object contains details about a billing plan."
            },
            "billingPlanPreview": {
                "description": "Information used to provide a preview of a billing plan.",
                "type": "object",
                "properties": {
                    "currencyCode": {
                        "description": "Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the account.",
                        "type": "string"
                    },
                    "invoice": {
                        "$ref": "#/components/schemas/billingInvoice"
                    },
                    "isProrated": {
                        "description": "When **true,** the billing plan is prorated.",
                        "type": "string"
                    },
                    "subtotalAmount": {
                        "description": "",
                        "type": "string"
                    },
                    "taxAmount": {
                        "description": "",
                        "type": "string"
                    },
                    "totalAmount": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingPlanPreview",
                "x-ms-summary": "Information used to provide a preview of a billing plan."
            },
            "billingPlanResponse": {
                "description": "Defines a billing plan response object.",
                "type": "object",
                "properties": {
                    "billingPlan": {
                        "$ref": "#/components/schemas/billingPlan"
                    },
                    "successorPlans": {
                        "description": "A list of billing plans that the current billing plan can be rolled into.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingPlan"
                        }
                    }
                },
                "x-ds-definition-name": "billingPlanResponse",
                "x-ms-summary": "Defines a billing plan response object."
            },
            "billingPlansResponse": {
                "description": "Defines a billing plans response object.",
                "type": "object",
                "properties": {
                    "billingPlans": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingPlan"
                        }
                    }
                },
                "x-ds-definition-name": "billingPlansResponse",
                "x-ms-summary": "Defines a billing plans response object."
            },
            "billingPlanUpdateResponse": {
                "description": "Defines a billing plan update response object.",
                "type": "object",
                "properties": {
                    "accountPaymentMethod": {
                        "description": "The type of payment method used for the account. Valid values are:\n\n- `credit_card`\n- ",
                        "type": "string"
                    },
                    "billingPlanPreview": {
                        "$ref": "#/components/schemas/billingPlanPreview"
                    },
                    "currencyCode": {
                        "description": "Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the account.",
                        "type": "string"
                    },
                    "includedSeats": {
                        "description": "The number of seats (users) included in the plan.",
                        "type": "string"
                    },
                    "paymentCycle": {
                        "description": "The payment cycle associated with the plan. Valid values: \n\n- `Monthly`\n- `Annually` ",
                        "type": "string"
                    },
                    "paymentMethod": {
                        "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
                        "type": "string"
                    },
                    "planId": {
                        "description": "DocuSign's ID for the account plan.",
                        "type": "string"
                    },
                    "planName": {
                        "description": "The name of the billing plan used for the account.\n\nExamples: \n\n- `Personal - Annual`\n- `Unlimited Envelope Subscription - Annual Billing`",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingPlanUpdateResponse",
                "x-ms-summary": "Defines a billing plan update response object."
            },
            "billingPrice": {
                "type": "object",
                "properties": {
                    "beginQuantity": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "endQuantity": {
                        "description": "",
                        "type": "string"
                    },
                    "unitPrice": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingPrice",
                "description": "",
                "x-ms-summary": ""
            },
            "brand": {
                "type": "object",
                "properties": {
                    "brandCompany": {
                        "description": "The name of the company associated with the brand.",
                        "type": "string"
                    },
                    "brandId": {
                        "description": "The ID used to identify a specific brand in API calls.",
                        "type": "string"
                    },
                    "brandLanguages": {
                        "description": "An array of two-letter codes for the languages that you want to use with the brand. The supported languages are:\n\n- Arabic (`ar`)\n- Armenian (`hy`)\n- Bahasa Indonesia (`id`)\n- Bahasa Malay (`ms`)\n- Bulgarian (`bg`)\n- Chinese Simplified (`zh_CN`)\n- Chinese Traditional (`zh_TW`)\n- Croatian (`hr`)\n- Czech (`cs`)\n- Danish (`da`)\n- Dutch (`nl`)\n- English UK (`en_GB`)\n- English US (`en`)\n- Estonian (`et`)\n- Farsi (`fa`)\n- Finnish (`fi`)\n- French (`fr`)\n- French Canada (`fr_CA`)\n- German (`de`)\n- Greek (`el`)\n- Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n- Latvian (`lv`)\n- Lithuanian (`lt`)\n- Norwegian (`no`)\n- Polish (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brasil (`pt_BR`)\n- Romanian (`ro`)\n- Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n- Slovenian (`sl`)\n- Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n- Swedish (`sv`)\n- Thai (`th`)\n- Turkish (`tr`)\n- Ukranian (`uk`)\n- Vietnamese (`vi`)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "brandName": {
                        "description": "The name of the brand.",
                        "type": "string"
                    },
                    "colors": {
                        "description": "An array of name-value pairs specifying the colors that the brand uses for the following elements:\n\n- Button background\n- Button text\n- Header background\n- Header text",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    },
                    "defaultBrandLanguage": {
                        "description": "The two-letter code for the language that you want to use as the brand default. The supported languages are:\n\n- Arabic (`ar`)\n- Armenian (`hy`)\n- Bahasa Indonesia (`id`)\n- Bahasa Malay (`ms`)\n- Bulgarian (`bg`)\n- Chinese Simplified (`zh_CN`)\n- Chinese Traditional (`zh_TW`)\n- Croatian (`hr`)\n- Czech (`cs`)\n- Danish (`da`)\n- Dutch (`nl`)\n- English UK (`en_GB`)\n- English US (`en`)\n- Estonian (`et`)\n- Farsi (`fa`)\n- Finnish (`fi`)\n- French (`fr`)\n- French Canada (`fr_CA`)\n- German (`de`)\n- Greek (`el`)\n- Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n- Latvian (`lv`)\n- Lithuanian (`lt`)\n- Norwegian (`no`)\n- Polish (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brasil (`pt_BR`)\n- Romanian (`ro`)\n- Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n- Slovenian (`sl`)\n- Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n- Swedish (`sv`)\n- Thai (`th`)\n- Turkish (`tr`)\n- Ukranian (`uk`)\n- Vietnamese (`vi`)",
                        "type": "string"
                    },
                    "emailContent": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/brandEmailContent"
                        }
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "isOrganizationBrand": {
                        "description": "",
                        "type": "string"
                    },
                    "isOverridingCompanyName": {
                        "description": "When **true,** the `brandCompany` property is overriding the name of the company in the account settings.",
                        "type": "boolean"
                    },
                    "isSendingDefault": {
                        "description": "When **true,** the sending brand is the default brand for sending new envelopes.",
                        "type": "boolean"
                    },
                    "isSigningDefault": {
                        "description": "When **true,** the siging brand is the default brand for the signing experience.",
                        "type": "boolean"
                    },
                    "landingPages": {
                        "description": "An array of name/value pairs specifying the pages to which the user is redirected after the following events occur:\n\n- Signing Completed\n- Viewed Exit\n- Finish Later\n- Decline\n- Session Timeout\n- Authentication Failure\n\nIf you do not specify landing pages, the DocuSign default pages are used.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    },
                    "links": {
                        "description": "An array of `brandLink` objects that contain information about the links that the brand uses.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/brandLink"
                        }
                    },
                    "logos": {
                        "$ref": "#/components/schemas/brandLogos"
                    },
                    "organizationBrandLogo": {
                        "description": "",
                        "type": "string"
                    },
                    "resources": {
                        "$ref": "#/components/schemas/brandResourceUrls"
                    }
                },
                "description": "Information about a brand that is associated with an account. A brand applies custom styles and text to an envelope.",
                "x-ds-definition-name": "brand",
                "x-ms-summary": "Information about a brand that is associated with an account. A brand applies custom styles and text to an envelope."
            },
            "brandEmailContent": {
                "type": "object",
                "properties": {
                    "content": {
                        "description": "Deprecated.",
                        "type": "string"
                    },
                    "emailContentType": {
                        "description": "Deprecated.",
                        "type": "string"
                    },
                    "emailToLink": {
                        "description": "Deprecated.",
                        "type": "string"
                    },
                    "linkText": {
                        "description": "Deprecated.",
                        "type": "string"
                    }
                },
                "description": "Deprecated.",
                "x-ds-definition-name": "brandEmailContent",
                "x-ms-summary": "Deprecated."
            },
            "brandLink": {
                "type": "object",
                "properties": {
                    "linkText": {
                        "description": "The text used for the link.",
                        "type": "string"
                    },
                    "linkType": {
                        "description": "The type of link. Valid values include:\n\n- `aboutDocusign`\n- `closeButton`",
                        "type": "string"
                    },
                    "showLink": {
                        "description": "When **true,** the link displays to the recipient.",
                        "type": "string"
                    },
                    "urlOrMailTo": {
                        "description": "The URL or mailto address of the link.",
                        "type": "string"
                    }
                },
                "description": "Information about a link that a brand uses.",
                "x-ds-definition-name": "brandLink",
                "x-ms-summary": "Information about a link that a brand uses."
            },
            "brandLogos": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "The URI for the brand's secondary logo.\n\nThis is a read-only property that provides a URI to the logo in use.\nTo update a logo use\n[AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).\n",
                        "type": "string"
                    },
                    "primary": {
                        "description": "The URI for the brand's secondary logo.\n\nThis is a read-only property that provides a URI to the logo in use.\nTo update a logo use\n[AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).\n",
                        "type": "string"
                    },
                    "secondary": {
                        "description": "The URI for the brand's secondary logo.\n\nThis is a read-only property that provides a URI to the logo in use.\nTo update a logo use\n[AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).\n",
                        "type": "string"
                    }
                },
                "description": "The URIs for retrieving the logos that are associated with the brand.\n\nThese are read-only properties that provide a URI to logos in use.\nTo update a logo use\n[AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).\n",
                "x-ds-definition-name": "brandLogos",
                "x-ms-summary": "The URIs for retrieving the logos that are associated with the brand.\n\nThese are read-only properties that provide a URI to logos in use.\nTo update a logo use\n[AccountBrands: updateLogo](/docs/esign-rest-api/reference/accounts/accountbrands/updatelogo/).\n"
            },
            "brandRequest": {
                "type": "object",
                "properties": {
                    "brandId": {
                        "description": "The ID of the brand used in API calls",
                        "type": "string"
                    }
                },
                "description": "This request object contains information about a specific brand.",
                "x-ds-definition-name": "brandRequest",
                "x-ms-summary": "This request object contains information about a specific brand."
            },
            "brandResources": {
                "type": "object",
                "properties": {
                    "createdByUserInfo": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "createdDate": {
                        "description": "The date and time that the brand resource was created.",
                        "type": "string"
                    },
                    "dataNotSavedNotInMaster": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "modifiedByUserInfo": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "modifiedDate": {
                        "description": "The date on which this user record was last modified.",
                        "type": "string"
                    },
                    "modifiedTemplates": {
                        "description": "This property is returned in the response to the [AccountBrands::listResources][listResources] request. It contains a list of any email templates that have been modified to differ from the master resource files.\n\n[listResources]: /docs/esign-rest-api/reference/accounts/accountbrands/listresources/",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "resourcesContentType": {
                        "description": "The type of brand resource file. A brand uses a different resource file to control each of the following experiences:\n\n- Sending (`sending`)\n- Signing (`signing`)\n- Email messages (`email`)\n- Captive (embedded) signing (`signing_captive`)\n\nYou can modify the default email messages and formats in these files and upload them to your brand to customize the user experience.",
                        "type": "string"
                    },
                    "resourcesContentUri": {
                        "description": "The URI for the brand resource file.",
                        "type": "string"
                    }
                },
                "description": "Information about the resource files that the brand uses for the email, signing, sending, and captive (embedded) signing experiences.",
                "x-ds-definition-name": "brandResources",
                "x-ms-summary": "Information about the resource files that the brand uses for the email, signing, sending, and captive (embedded) signing experiences."
            },
            "brandResourcesList": {
                "type": "object",
                "properties": {
                    "resourcesContentTypes": {
                        "description": "A list of resources that the brand uses.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/brandResources"
                        }
                    }
                },
                "x-ds-definition-name": "brandResourcesList",
                "description": "",
                "x-ms-summary": ""
            },
            "brandResourceUrls": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "The URI for the email resource file that the brand uses.",
                        "type": "string"
                    },
                    "sending": {
                        "description": "The URI for the sending resource file that the brand uses.",
                        "type": "string"
                    },
                    "signing": {
                        "description": "The URI for the signing resource file that the brand uses.",
                        "type": "string"
                    },
                    "signingCaptive": {
                        "description": "The URI for the captive (embedded) signing resource file that the brand uses.",
                        "type": "string"
                    }
                },
                "description": "Brands use resource files to style the following experiences: \n\n- Email\n- Sending\n- Signing\n- Captive (embedded) signing \n\nYou can modify these resource files to customize these experiences.",
                "x-ds-definition-name": "brandResourceUrls",
                "x-ms-summary": "Brands use resource files to style the following experiences: \n\n- Email\n- Sending\n- Signing\n- Captive (embedded) signing \n\nYou can modify these resource files to customize these experiences."
            },
            "brandsRequest": {
                "type": "object",
                "properties": {
                    "brands": {
                        "description": "A list of brands.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/brandRequest"
                        }
                    }
                },
                "description": "Details about one or more brands.",
                "x-ds-definition-name": "brandsRequest",
                "x-ms-summary": "Details about one or more brands."
            },
            "brandsResponse": {
                "type": "object",
                "properties": {
                    "brands": {
                        "description": "A list of brands.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/brand"
                        }
                    },
                    "recipientBrandIdDefault": {
                        "description": "The brand that envelope recipients see when a brand is not explicitly set.",
                        "type": "string"
                    },
                    "senderBrandIdDefault": {
                        "description": "The brand that envelope senders see when a brand is not explicitly set.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "brandsResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkEnvelope": {
                "type": "object",
                "properties": {
                    "bulkRecipientRow": {
                        "description": "The row of the recipient in the CSV file used to create the bulk recipient list.",
                        "type": "string"
                    },
                    "bulkStatus": {
                        "description": "Indicates the status of the bulk send operation. Returned values can be:\n- `queued`\n- `processing`\n- `sent`\n- `failed`",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the recipient assigned to this envelope transaction.",
                        "type": "string"
                    },
                    "envelopeId": {
                        "description": "GUID of the bulk envelope.",
                        "type": "string"
                    },
                    "envelopeUri": {
                        "description": "The URI for retrieving the envelope or envelopes.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "name": {
                        "description": "The name of the recipient assigned to this envelope transaction.",
                        "type": "string"
                    },
                    "submittedDateTime": {
                        "description": "The date and time on which the bulk envelope was created.",
                        "type": "string"
                    },
                    "transactionId": {
                        "description": "Identifier for the envelope transaction. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. DocuSign recommends that you use a transaction ID for offline signing to ensure that an envelope is not sent multiple times. You can use the transaction ID to determine an envelope's status (queued, processing, sent, or failed) in cases where the Internet connection is lost before envelope status is returned.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkEnvelope",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkEnvelopeStatus": {
                "type": "object",
                "properties": {
                    "batchId": {
                        "description": "Specifies an identifier which can be used to retrieve a more detailed status of individual bulk recipient batches.",
                        "type": "string"
                    },
                    "batchSize": {
                        "description": "The number of items returned in this response.",
                        "type": "string"
                    },
                    "bulkEnvelopes": {
                        "description": "A list of bulk envelope objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkEnvelope"
                        }
                    },
                    "bulkEnvelopesBatchUri": {
                        "description": "URI at which you can retrieve the batch envelopes.",
                        "type": "string"
                    },
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "failed": {
                        "description": "The number of entries with a status of failed. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "queued": {
                        "description": "The number of entries with a status of queued. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "sent": {
                        "description": "The number of entries with a status of sent.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "submittedDate": {
                        "description": "The date on which the bulk envelope was created.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkEnvelopeStatus",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkProcessingLists": {
                "type": "object",
                "properties": {
                    "bulkProcessListIds": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-ds-definition-name": "bulkProcessingLists",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkProcessingListSummaries": {
                "type": "object",
                "properties": {
                    "bulkListSummaries": {
                        "description": "An array of `bulkSendingListSummary` objects where each summary provides basic information about a bulk send list that belongs to the current user.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkProcessingListSummary"
                        }
                    }
                },
                "x-ds-definition-name": "bulkProcessingListSummaries",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkProcessingListSummary": {
                "type": "object",
                "properties": {
                    "bulkProcessListId": {
                        "description": "",
                        "type": "string"
                    },
                    "createdByUser": {
                        "description": "",
                        "type": "string"
                    },
                    "createdDate": {
                        "description": "The creation date of the account in UTC timedate format.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkProcessingListSummary",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkProcessRequest": {
                "type": "object",
                "properties": {
                    "batchName": {
                        "description": "",
                        "type": "string"
                    },
                    "envelopeOrTemplateId": {
                        "description": "The GUID of the envelope or template.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkProcessRequest",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkProcessResponse": {
                "type": "object",
                "properties": {
                    "batchId": {
                        "description": "Identifier used to query the status of an individual bulk recipient batch.",
                        "type": "string"
                    },
                    "batchName": {
                        "description": "",
                        "type": "string"
                    },
                    "batchSize": {
                        "description": "The total number of items in the batch being queried.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "description": "Error details.\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "queueLimit": {
                        "description": "",
                        "type": "string"
                    },
                    "totalQueued": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkProcessResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkProcessResult": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkSendBatchError"
                        }
                    },
                    "listId": {
                        "description": "The GUID of the bulk send list.",
                        "type": "string"
                    },
                    "success": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkProcessResult",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkSendBatchActionRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "The action to apply. Valid values:\n\n* `Resend`\n* `Correct`\n* `Void`\n\nThis property is required and case-sensitive. The value must correspond to the `bulkAction` query parameter.\n",
                        "type": "string"
                    },
                    "notification": {
                        "$ref": "#/components/schemas/notification"
                    },
                    "voidReason": {
                        "description": "A string explaining why the envelope is voided. This value is shown in a message to the recipients.\n\nThis property is required if `action` is `Void`.\n",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkSendBatchActionRequest",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkSendBatchError": {
                "type": "object",
                "properties": {
                    "error": {
                        "description": "The server error associated with the Connect post failure.",
                        "type": "string"
                    },
                    "errorDetail": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkSendBatchError",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkSendBatchRequest": {
                "type": "object",
                "properties": {
                    "batchName": {
                        "description": "The new name of the bulk send batch.\n\nThis property is required. The maximum length of the string is 500 characters.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkSendBatchRequest",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkSendBatchStatus": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "",
                        "type": "string"
                    },
                    "actionStatus": {
                        "description": "",
                        "type": "string"
                    },
                    "batchId": {
                        "description": "The batch ID.",
                        "type": "string"
                    },
                    "batchName": {
                        "description": "The batch name.",
                        "type": "string"
                    },
                    "batchSize": {
                        "description": "The number of of bulk envelopes submitted in the current batch\n",
                        "type": "string"
                    },
                    "bulkErrors": {
                        "description": "An array of error statuses.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkSendErrorStatus"
                        }
                    },
                    "envelopeIdOrTemplateId": {
                        "description": "The ID of the draft envelope or template that was used to create the batch.\n",
                        "type": "string"
                    },
                    "envelopesInfo": {
                        "$ref": "#/components/schemas/bulkSendEnvelopesInfo"
                    },
                    "envelopesUri": {
                        "description": "The URI to get all envelopes sent in the batch.\n",
                        "type": "string"
                    },
                    "failed": {
                        "description": "The number of envelopes that failed to process or send.\n",
                        "type": "string"
                    },
                    "mailingListId": {
                        "description": "The ID of the mailing list used to create the batch.",
                        "type": "string"
                    },
                    "mailingListName": {
                        "description": "",
                        "type": "string"
                    },
                    "ownerUserId": {
                        "description": "",
                        "type": "string"
                    },
                    "queued": {
                        "description": "The number of envelopes waiting in pending queue\n",
                        "type": "string"
                    },
                    "resendsRemaining": {
                        "description": "",
                        "type": "string"
                    },
                    "senderUserId": {
                        "description": "The ID of the sender.",
                        "type": "string"
                    },
                    "sent": {
                        "description": "The number of envelopes sent successfully.",
                        "type": "string"
                    },
                    "submittedDate": {
                        "description": "The timestamp of  when the batch was submitted in ISO 8601 format.\n\n",
                        "type": "string"
                    }
                },
                "description": "Result of `getBulkSendBatchStatus`",
                "x-ds-definition-name": "bulkSendBatchStatus",
                "x-ms-summary": "Result of `getBulkSendBatchStatus`"
            },
            "bulkSendBatchSummaries": {
                "type": "object",
                "properties": {
                    "batchSizeLimit": {
                        "description": "The maximum number of envelopes the account is permitted to submit in a given batch.",
                        "type": "string"
                    },
                    "bulkBatchSummaries": {
                        "description": "An array of batch summaries.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkSendBatchSummary"
                        }
                    },
                    "bulkProcessQueueLimit": {
                        "description": "",
                        "type": "string"
                    },
                    "bulkProcessTotalQueued": {
                        "description": "",
                        "type": "string"
                    },
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "queueLimit": {
                        "description": "Maximum number of envelopes an account is permitted to have in the queue at any one time.",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalQueued": {
                        "description": "The number of envelopes currently pending processing for the entire account.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "description": "A list of bulk send batch summaries. ",
                "x-ds-definition-name": "bulkSendBatchSummaries",
                "x-ms-summary": "A list of bulk send batch summaries. "
            },
            "bulkSendBatchSummary": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "",
                        "type": "string"
                    },
                    "actionStatus": {
                        "description": "",
                        "type": "string"
                    },
                    "batchId": {
                        "description": "The batch ID.",
                        "type": "string"
                    },
                    "batchName": {
                        "description": "The name of the batch.",
                        "type": "string"
                    },
                    "batchSize": {
                        "description": "The number of envelopes in the batch.",
                        "type": "string"
                    },
                    "batchUri": {
                        "description": "The batch details URI.",
                        "type": "string"
                    },
                    "failed": {
                        "description": "Number of envelopes that failed to send.",
                        "type": "string"
                    },
                    "queued": {
                        "description": "Number of envelopes peding processing.\n",
                        "type": "string"
                    },
                    "sent": {
                        "description": "Number of envelopes that have been sent.",
                        "type": "string"
                    },
                    "submittedDate": {
                        "description": "The time stamp of when the batch was created in ISO 8601 format.",
                        "type": "string"
                    }
                },
                "description": "Summary status of a single batch.",
                "x-ds-definition-name": "bulkSendBatchSummary",
                "x-ms-summary": "Summary status of a single batch."
            },
            "bulkSendEnvelopesInfo": {
                "type": "object",
                "properties": {
                    "authoritativeCopy": {
                        "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
                        "type": "string"
                    },
                    "completed": {
                        "description": "",
                        "type": "string"
                    },
                    "correct": {
                        "description": "",
                        "type": "string"
                    },
                    "created": {
                        "description": "The UTC DateTime when the workspace user authorization was created.",
                        "type": "string"
                    },
                    "declined": {
                        "description": "",
                        "type": "string"
                    },
                    "deleted": {
                        "description": "",
                        "type": "string"
                    },
                    "delivered": {
                        "description": "",
                        "type": "string"
                    },
                    "digitalSignaturesPending": {
                        "description": "",
                        "type": "string"
                    },
                    "sent": {
                        "description": "The number of entries with a status of `sent`.",
                        "type": "string"
                    },
                    "signed": {
                        "description": "",
                        "type": "string"
                    },
                    "timedOut": {
                        "description": "",
                        "type": "string"
                    },
                    "transferCompleted": {
                        "description": "",
                        "type": "string"
                    },
                    "voided": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulkSendEnvelopesInfo",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkSendErrorStatus": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "The timestamp of when the error occurred in ISO 8601 format.",
                        "type": "string"
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "errorMessage": {
                        "description": "The error message generated during processing, if any.\n",
                        "type": "string"
                    },
                    "recipientEmails": {
                        "description": "An array of email addresses for the failed bulk envelope.\n\nRecipient email/info of the failed bulk envelope.\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "A single bulk send error report.",
                "x-ds-definition-name": "bulkSendErrorStatus",
                "x-ms-summary": "A single bulk send error report."
            },
            "bulkSendingCopy": {
                "type": "object",
                "properties": {
                    "customFields": {
                        "description": "The custom fields for this copy of the envelope.\n\n**Note:** These custom fields must also be included in the original envelope or template that you want to send.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkSendingCopyCustomField"
                        }
                    },
                    "docGenFormFields": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulksendingCopyDocGenFormField"
                        }
                    },
                    "emailBlurb": {
                        "description": "The email body for this copy of the envelope.",
                        "type": "string"
                    },
                    "emailSubject": {
                        "description": "The email subject line for this copy of the envelope.\n\nFor information about adding merge field information to the email subject,\nsee [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.",
                        "type": "string"
                    },
                    "recipients": {
                        "description": "Information about the recipients associated with this copy of the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkSendingCopyRecipient"
                        }
                    }
                },
                "description": "This object contains the details to use for a specific copy, or instance, of the envelope. When you send an envelope by using a bulk send list, you can customize these properties for each instance.",
                "x-ds-definition-name": "bulkSendingCopy",
                "x-ms-summary": "This object contains the details to use for a specific copy, or instance, of the envelope. When you send an envelope by using a bulk send list, you can customize these properties for each instance."
            },
            "bulkSendingCopyCustomField": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name of the custom field.",
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of the custom field.",
                        "type": "string"
                    }
                },
                "description": "This object contains details about a custom field for a bulk send copy. In a bulk send request, each custom field in the bulk send list must match a custom field in the envelope or template that you want to send.",
                "x-ds-definition-name": "bulkSendingCopyCustomField",
                "x-ms-summary": "This object contains details about a custom field for a bulk send copy. In a bulk send request, each custom field in the bulk send list must match a custom field in the envelope or template that you want to send."
            },
            "bulksendingCopyDocGenFormField": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "bulksendingCopyDocGenFormField",
                "description": "",
                "x-ms-summary": ""
            },
            "bulkSendingCopyRecipient": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "email": {
                        "description": "The recipient's email address.",
                        "type": "string"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "hostEmail": {
                        "description": "The email address of the signing host.\nThis is the DocuSign user that is hosting the in-person signing session.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `email` instead.\n\nMaximum Length: 100 characters.\n",
                        "type": "string"
                    },
                    "hostName": {
                        "description": "The name of the signing host.\nThis is the DocuSign user that is hosting the in-person signing session.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `name` instead.\n\nMaximum Length: 100 characters.\n",
                        "type": "string"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identificationMethod": {
                        "description": "",
                        "type": "string"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientSignatureProviders": {
                        "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientSignatureProvider"
                        }
                    },
                    "roleName": {
                        "description": "The name of the role associated with the recipient.\n\n**Note:** Every recipient must be assigned either a `recipientId` or a `roleName` but not both. You cannot use `roleName` and `recipientId` in the same list.",
                        "type": "string"
                    },
                    "signerName": {
                        "description": "The in-person signer's full legal name.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `name` instead.\n\nMaximum Length: 100 characters.\n",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "tabs": {
                        "description": "A list of tabs associated with the recipient. In a bulk send request, each of these recipient tabs must match a recipient tab on the envelope or template that you want to send. To match up, the `tabLabel` for this tab and the `tabLabel` for the corresponding tab on the envelope or template must be the same.\n\nFor example, if the envelope has a placeholder text tab with the `tabLabel` `childName`, you must assign the same `tabLabel` `childName` to the tab here that you are populating with that information.\n\n You can use the following types of tabs to match bulk send recipients to an envelope:\n\n- Text tabs\n- Radio group tabs (where the name of the `radioGroup` on the envelope is used as the `tabLabel` in the bulk send list)\n- List tabs",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkSendingCopyTab"
                        }
                    }
                },
                "description": "This object contains details about a bulk send recipient.",
                "x-ds-definition-name": "bulkSendingCopyRecipient",
                "x-ms-summary": "This object contains details about a bulk send recipient."
            },
            "bulkSendingCopyTab": {
                "type": "object",
                "properties": {
                    "initialValue": {
                        "description": "The initial value that you want to assign to the tab.",
                        "type": "string"
                    },
                    "tabLabel": {
                        "description": "The label associated with the recipient tab. In a bulk send request, the `tabLabel` for this tab and the `tabLabel` for the corresponding tab on the envelope or template must be the same.\n\nMaximum Length: 500 characters.",
                        "type": "string"
                    }
                },
                "description": "A tab associated with the bulk send recipient. In a bulk send request, each recipient tab must match a recipient tab on the envelope or template that you want to send. To match up, the `tabLabel` for this tab and the `tabLabel` for the corresponding tab on the envelope or template must be the same.\n\nFor example, if the envelope has a placeholder text tab with the `tabLabel` `childName`, you must assign the same `tabLabel` `childName` to the tab here that you are populating with that information.",
                "x-ds-definition-name": "bulkSendingCopyTab",
                "x-ms-summary": "A tab associated with the bulk send recipient. In a bulk send request, each recipient tab must match a recipient tab on the envelope or template that you want to send. To match up, the `tabLabel` for this tab and the `tabLabel` for the corresponding tab on the envelope or template must be the same.\n\nFor example, if the envelope has a placeholder text tab with the `tabLabel` `childName`, you must assign the same `tabLabel` `childName` to the tab here that you are populating with that information."
            },
            "bulkSendingList": {
                "type": "object",
                "properties": {
                    "bulkCopies": {
                        "description": "An array of `bulkCopy` objects. Each object represents an instance or copy of an envelope and contains details such as the recipient, custom fields, tabs, and other information.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkSendingCopy"
                        }
                    },
                    "listId": {
                        "description": "The GUID of the bulk send list.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the bulk send list.",
                        "type": "string"
                    }
                },
                "description": "This object contains the details for the bulk send list.",
                "x-ds-definition-name": "bulkSendingList",
                "x-ms-summary": "This object contains the details for the bulk send list."
            },
            "bulkSendingListSummaries": {
                "type": "object",
                "properties": {
                    "bulkListSummaries": {
                        "description": "An array of `bulkSendingListSummary` objects where each summary provides basic information about a bulk send list that belongs to the current user.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bulkSendingListSummary"
                        }
                    }
                },
                "description": "This complex type contains summaries that provide basic information about the bulk send lists that belong to the current user.",
                "x-ds-definition-name": "bulkSendingListSummaries",
                "x-ms-summary": "This complex type contains summaries that provide basic information about the bulk send lists that belong to the current user."
            },
            "bulkSendingListSummary": {
                "type": "object",
                "properties": {
                    "bulkSendListId": {
                        "description": "The GUID of the bulk send list. This property is created after you post a new bulk send list.",
                        "type": "string"
                    },
                    "createdByUser": {
                        "description": "The GUID of the user who created the bulk send list.",
                        "type": "string"
                    },
                    "createdDate": {
                        "description": "The UTC DateTime that the bulk send list was created.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the bulk send list.",
                        "type": "string"
                    }
                },
                "description": "This object contains basic information about a bulk send list.",
                "x-ds-definition-name": "bulkSendingListSummary",
                "x-ms-summary": "This object contains basic information about a bulk send list."
            },
            "bulkSendRequest": {
                "type": "object",
                "properties": {
                    "batchName": {
                        "description": "The human-readable name of the batch. If you do not set this value, it defaults to the `name` property of the `bulkSendingList` object.\n",
                        "type": "string"
                    },
                    "envelopeOrTemplateId": {
                        "description": "The GUID of the envelope or template that you want to send in bulk.",
                        "type": "string"
                    }
                },
                "description": "This object contains information about the envelope or template that you want to send in bulk.",
                "x-ds-definition-name": "bulkSendRequest",
                "x-ms-summary": "This object contains information about the envelope or template that you want to send in bulk."
            },
            "bulkSendResponse": {
                "type": "object",
                "properties": {
                    "batchId": {
                        "description": "A batch identifier that you can use to get the status of the batch.",
                        "type": "string"
                    },
                    "batchName": {
                        "description": "",
                        "type": "string"
                    },
                    "batchSize": {
                        "description": "The total number of items in the batch being queried.",
                        "type": "string"
                    },
                    "envelopeOrTemplateId": {
                        "description": "The GUID of the envelope or template that was sent.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "description": "A human-readable object that describes errors that occur. It is only valid for responses and ignored in requests.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "description": "A list of errors that occurred. This information is intended to be parsed by machine.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "queueLimit": {
                        "description": "",
                        "type": "string"
                    },
                    "totalQueued": {
                        "description": "",
                        "type": "string"
                    }
                },
                "description": "The object contains the response to a bulk send request.",
                "x-ds-definition-name": "bulkSendResponse",
                "x-ms-summary": "The object contains the response to a bulk send request."
            },
            "bulkSendTestResponse": {
                "type": "object",
                "properties": {
                    "canBeSent": {
                        "description": "When **true,** the envelope or template is compatible with the bulk send list and can be sent by using the [BulkSend: createBulkSendRequest][BulkSendRequest] method.\n\n**Note:** This property is only returned in responses and ignored in requests.\n\n[BulkSendRequest]:  /docs/esign-rest-api/reference/bulkenvelopes/bulksend/createbulksendrequest/\n",
                        "type": "boolean"
                    },
                    "validationErrorDetails": {
                        "description": "Human-readable details about any validation errors that occurred.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "validationErrors": {
                        "description": "A list of validation errors that were encountered during the bulk send test.\n\n**Note:** This information is intended to be parsed by machine.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "This object contains the results of a bulk send test.",
                "x-ds-definition-name": "bulkSendTestResponse",
                "x-ms-summary": "This object contains the results of a bulk send test."
            },
            "captiveRecipient": {
                "type": "object",
                "properties": {
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address associated with the captive recipient.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "userName": {
                        "description": "The username associated with the captive recipient.",
                        "type": "string"
                    }
                },
                "description": "This object contains details about a captive (embedded) recipient.",
                "x-ds-definition-name": "captiveRecipient",
                "x-ms-summary": "This object contains details about a captive (embedded) recipient."
            },
            "captiveRecipientInformation": {
                "type": "object",
                "properties": {
                    "captiveRecipients": {
                        "description": "A complex type containing information about one or more captive recipients.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/captiveRecipient"
                        }
                    }
                },
                "description": "Contains information about captive (embedded) recipients.",
                "x-ds-definition-name": "captiveRecipientInformation",
                "x-ms-summary": "Contains information about captive (embedded) recipients."
            },
            "carbonCopy": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "agentCanEditEmail": {
                        "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "agentCanEditName": {
                        "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Not applicable for Carbon Copy recipients.",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "consentDetailsList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentDetails"
                        }
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The recipient's email address. Notification of the document to sign is sent to this email address. \n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "emailRecipientPostSigningURL": {
                        "description": "",
                        "type": "string"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "excludedDocuments": {
                        "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "firstName": {
                        "description": "The recipient's first name. Maximum Length: 50 characters.",
                        "type": "string"
                    },
                    "firstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fullName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fullNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The recipient's last name.",
                        "type": "string"
                    },
                    "lastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "linkedAccountConfigurationId": {
                        "description": "",
                        "type": "string"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "proofFile": {
                        "$ref": "#/components/schemas/recipientProofFile"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "The code associated with the recipient's status. This property is read-only.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "description": "Contains information about a carbon copy recipient. Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. ",
                "x-ds-definition-name": "carbonCopy",
                "x-ms-summary": "Contains information about a carbon copy recipient. Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date or add information to any of the documents. "
            },
            "certifiedDelivery": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "agentCanEditEmail": {
                        "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "agentCanEditName": {
                        "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "consentDetailsList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentDetails"
                        }
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The recipient's email address.",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "emailRecipientPostSigningURL": {
                        "description": "",
                        "type": "string"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "excludedDocuments": {
                        "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "firstName": {
                        "description": "The recipient's first name. Maximum Length: 50 characters.",
                        "type": "string"
                    },
                    "firstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fullName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fullNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The recipient's last name.",
                        "type": "string"
                    },
                    "lastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "proofFile": {
                        "$ref": "#/components/schemas/recipientProofFile"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "The status of the recipient. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "The code associated with the recipient's status. This property is read-only.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "description": "Contains information about a certified delivery recipient. Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents.",
                "x-ds-definition-name": "certifiedDelivery",
                "x-ms-summary": "Contains information about a certified delivery recipient. Certified delivery recipients must receive the completed documents for the envelope to be completed. However, they don't need to sign, initial, date or add information to any of the documents."
            },
            "checkbox": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign-generated custom tab ID for the custom tab to apply. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "This property does not apply to `checkbox` tabs.\n\nTo require users to check\nat least one, or at most some number\nof checkboxes,\nassociate the checkbox tabs\nwith a [`tabGroup`][tabGroup].\nThen set the following `tabGroup` properties:\n\n- [`maximumAllowed`][maximumAllowed]\n- [`minimumRequired`][minimumRequired]\n- [`groupRule`][groupRule] specifies how the other two properties are interpreted.\n\nYou can find an example\nat [Stack Overflow][so].\n\n[so]:               https://stackoverflow.com/questions/58209376/checkbox-validation-using-docusign-rest-api/58210277#58210277\n[tabGroup]:         /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups\n[groupRule]:        /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_grouprule\n[maximumAllowed]:   /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_maximumallowed\n[minimumRequired]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#definition__enveloperecipienttabs_tabgroups_minimumrequired\n",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "selected": {
                        "description": "When **true,** the checkbox is selected.",
                        "type": "string"
                    },
                    "selectedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "selectedOriginal": {
                        "description": "",
                        "type": "string"
                    },
                    "selectedOriginalMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-7, -6)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-7, -6)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to select a yes/no (on/off) option.\n",
                "x-ds-definition-name": "checkbox",
                "x-ms-summary": "A tab that allows the recipient to select a yes/no (on/off) option.\n"
            },
            "chunkedUploadPart": {
                "type": "object",
                "properties": {
                    "sequence": {
                        "description": "The order of the part in the chunked upload.",
                        "type": "string"
                    },
                    "size": {
                        "description": "The size of the part in bytes. \n\nDocuSign recommends that a chunked upload part is no larger than a few MB in size.",
                        "type": "string"
                    }
                },
                "description": "An object that contains information about the chunked upload part.",
                "x-ds-definition-name": "chunkedUploadPart",
                "x-ms-summary": "An object that contains information about the chunked upload part."
            },
            "chunkedUploadRequest": {
                "type": "object",
                "properties": {
                    "chunkedUploadId": {
                        "description": "The ID of the chunked upload.\n\n**Note:** This property is ignored in requests, and overridden with an auto-generated value in responses.",
                        "type": "string"
                    },
                    "data": {
                        "description": "A base64-encoded representation of the content that is used to upload the file. \n\nMaximum size: 50 MB. However, data is also subject to REST API limits regarding request sizes, and Internet Information Systems (IIS) might place further constraints on file size.",
                        "type": "string"
                    }
                },
                "description": "This is the request object for uploading a chunked upload.",
                "x-ds-definition-name": "chunkedUploadRequest",
                "x-ms-summary": "This is the request object for uploading a chunked upload."
            },
            "chunkedUploadResponse": {
                "type": "object",
                "properties": {
                    "checksum": {
                        "description": "A 64-byte, Secure Hash Algorithm 256 (SHA256) checksum that the caller computes across the entirety of the original content that has been uploaded to the chunked upload. DocuSign compares this value to its own computation. If the two values are not equal, the original content and received content are not the same and the commit action is refused.",
                        "type": "string"
                    },
                    "chunkedUploadId": {
                        "description": "The ID of the chunked upload. ",
                        "type": "string"
                    },
                    "chunkedUploadParts": {
                        "description": "A list of the parts that compose the chunked upload, including their byte sizes. The list must be contiguous before you can commit the chunked upload.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/chunkedUploadPart"
                        }
                    },
                    "chunkedUploadUri": {
                        "description": "The URI that you use to reference the chunked upload in other API requests, such as envelope document and envelope attachment requests. ",
                        "type": "string"
                    },
                    "committed": {
                        "description": "When **true,** the chunked upload has been committed. A committed chunked upload can no longer receive any additional parts and is ready for use within other API requests. ",
                        "type": "string"
                    },
                    "expirationDateTime": {
                        "description": "The UTC time at which the chunked upload expires and is no longer addressable. \n\n**Note:** You must fully upload and use a chunked upload within 20 minutes of initializing it.\n",
                        "type": "string"
                    },
                    "maxChunkedUploadParts": {
                        "description": "The maximum number of parts allowed for a chunked upload. This value is configurable per DocuSign environment, account, or integrator. The default value is 128. The maximum possible value is 256.  ",
                        "type": "string"
                    },
                    "maxTotalSize": {
                        "description": "The maximum total size allowed for a chunked upload. This value is configured per DocuSign environment, account, or integrator. The default value is 50 MB.",
                        "type": "string"
                    },
                    "totalSize": {
                        "description": "The total size of the parts of the chunked upload.\n\n**Note:** When a chunked upload is used as an envelope document, it is subject to the PDF size limit (25 MB) and page count limit that apply to all envelope documents.",
                        "type": "string"
                    }
                },
                "description": "This response object is returned after you upload a chunked upload.",
                "x-ds-definition-name": "chunkedUploadResponse",
                "x-ms-summary": "This response object is returned after you upload a chunked upload."
            },
            "cloudStorageProvider": {
                "type": "object",
                "properties": {
                    "authenticationUrl": {
                        "description": "The authentication URL used for the cloud storage provider. This information is only included in the response if the user has not passed authentication for the cloud storage provider. If the redirectUrl query string is provided, the returnUrl is appended to the authenticationUrl. ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "redirectUrl": {
                        "description": "The URL the user is redirected to after the cloud storage provider authenticates the user. Using this will append the redirectUrl to the authenticationUrl.\n\nThe redirectUrl is restricted to URLs in the docusign.com or docusign.net domains.",
                        "type": "string"
                    },
                    "service": {
                        "description": "The service name for the cloud storage provider.",
                        "type": "string"
                    },
                    "serviceId": {
                        "description": "The DocuSign-generated ID for the cloud storage provider.",
                        "type": "string"
                    }
                },
                "description": "Contains details about a specific cloud storage provider.",
                "x-ds-definition-name": "cloudStorageProvider",
                "x-ms-summary": "Contains details about a specific cloud storage provider."
            },
            "cloudStorageProviders": {
                "type": "object",
                "properties": {
                    "storageProviders": {
                        "description": "An Array containing the storage providers associated with the user.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/cloudStorageProvider"
                        }
                    }
                },
                "x-ds-definition-name": "cloudStorageProviders",
                "description": "",
                "x-ms-summary": ""
            },
            "comment": {
                "type": "object",
                "properties": {
                    "envelopeId": {
                        "description": "The Guid of the envelope the comment thread belongs to.",
                        "type": "string"
                    },
                    "hmac": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The unique identifier for the comment.",
                        "type": "string"
                    },
                    "mentions": {
                        "description": "An array of userIds that are mentioned directly in the body of a comment.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "read": {
                        "description": "When **true,** indicates that the comment was read.",
                        "type": "boolean"
                    },
                    "sentByEmail": {
                        "description": "The email address of the user who created the comment.",
                        "type": "string"
                    },
                    "sentByFullName": {
                        "description": "The full name of the user who created the comment.",
                        "type": "string"
                    },
                    "sentByImageId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "sentByInitials": {
                        "description": "The initials of the user who created the comment.",
                        "type": "string"
                    },
                    "sentByRecipientId": {
                        "description": "The recipient ID of the user who created the comment.",
                        "type": "string"
                    },
                    "sentByUserId": {
                        "description": "The user ID of the user who created the comment.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the signing group that can view the comment or that created the comment.",
                        "type": "string"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "subject": {
                        "description": "The subject of the envelope.",
                        "type": "string"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab that represents the comment thread.",
                        "type": "string"
                    },
                    "text": {
                        "description": "The content of the comment, as UTF-8 text. \n\nMaximum Length: 500 characters.\n\n**Note:** The maximum size allowed for the entire message body is 32 KB. ",
                        "type": "string"
                    },
                    "threadId": {
                        "description": "The unique identifier for the comment thread.",
                        "type": "string"
                    },
                    "threadOriginatorId": {
                        "description": "The userId of the user who created the thread.",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "The time the comment was created.",
                        "type": "string"
                    },
                    "timeStampFormatted": {
                        "description": "The time the comment was created, formatted according to the format of the user who created the comment.",
                        "type": "string"
                    },
                    "visibleTo": {
                        "description": "The user IDs of the users that the comment is visible to.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-ds-definition-name": "comment",
                "description": "",
                "x-ms-summary": ""
            },
            "commentHistoryResult": {
                "type": "object",
                "properties": {
                    "comments": {
                        "description": "An array of comment tabs that contain information about users' comments on documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/comment"
                        }
                    },
                    "count": {
                        "format": "int32",
                        "description": "The maximum number of results to return.",
                        "type": "integer"
                    },
                    "endTimetoken": {
                        "description": "",
                        "type": "string"
                    },
                    "startTimetoken": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "commentHistoryResult",
                "description": "",
                "x-ms-summary": ""
            },
            "commentPublish": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "A unique ID for the Salesforce object.",
                        "type": "string"
                    },
                    "mentions": {
                        "description": "An array of userIds that are mentioned directly in the body of a comment.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "text": {
                        "description": "Specifies the text that is shown in the dropdown list. ",
                        "type": "string"
                    },
                    "threadAnchorKeys": {
                        "description": "",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "threadId": {
                        "description": "The unique identifier for the comment thread.",
                        "type": "string"
                    },
                    "visibleTo": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-ds-definition-name": "commentPublish",
                "description": "",
                "x-ms-summary": ""
            },
            "commentsPublish": {
                "type": "object",
                "properties": {
                    "commentsToPublish": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commentPublish"
                        }
                    }
                },
                "x-ds-definition-name": "commentsPublish",
                "description": "",
                "x-ms-summary": ""
            },
            "commentThread": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "comments": {
                        "description": "An array of comment tabs that contain information about users' comments on documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/comment"
                        }
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "threadId": {
                        "description": "The unique identifier for the comment thread.",
                        "type": "string"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "commentThread",
                "description": "",
                "x-ms-summary": ""
            },
            "commissionCounty": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A Commission County tab displays the county of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n",
                "x-ds-definition-name": "commissionCounty",
                "x-ms-summary": "A Commission County tab displays the county of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n"
            },
            "commissionExpiration": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A Commission Expiration tab displays the expiration date of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n",
                "x-ds-definition-name": "commissionExpiration",
                "x-ms-summary": "A Commission Expiration tab displays the expiration date of a notary's commission. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary](/docs/notary-api/).\n"
            },
            "commissionNumber": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A Commission Number tab displays a notary's commission number. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n",
                "x-ds-definition-name": "commissionNumber",
                "x-ms-summary": "A Commission Number tab displays a notary's commission number. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n"
            },
            "commissionState": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A Commission State tab displays the state in which a notary's commission was granted. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n",
                "x-ds-definition-name": "commissionState",
                "x-ms-summary": "A Commission State tab displays the state in which a notary's commission was granted. The tab is populated with the notary's commission information, but the recipient can also edit the value when notarizing. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/\n"
            },
            "company": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that displays the recipient's company name.\n",
                "x-ds-definition-name": "company",
                "x-ms-summary": "A tab that displays the recipient's company name.\n"
            },
            "compositeTemplate": {
                "type": "object",
                "properties": {
                    "compositeTemplateId": {
                        "description": "The ID of this composite template. This ID is used as a reference when adding document object information. If used, the document's `content-disposition` must include the composite template ID to which the document should be added. If a composite template ID is not specified in the content-disposition, the document is applied based on the value of the `documentId` property only. If no document object is specified, the composite template inherits the first document.",
                        "type": "string"
                    },
                    "document": {
                        "$ref": "#/components/schemas/document"
                    },
                    "inlineTemplates": {
                        "description": " Zero or more inline templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/inlineTemplate"
                        }
                    },
                    "pdfMetaDataTemplateSequence": {
                        "description": "A number representing the sequence in which to apply the template that contains the PDF metadata.\n\nExample: `4`",
                        "type": "string"
                    },
                    "serverTemplates": {
                        "description": "Zero or more server-side templates and their position in the overlay. If supplied, they are overlaid into the envelope in the order of their Sequence value.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/serverTemplate"
                        }
                    }
                },
                "description": "This object contains information about a [composite template][composite], which you can use to to apply multiple templates to a single envelope, combine templates with PDF forms, and combine templates with documents from cloud sources.\n\n[composite]: /docs/esign-rest-api/esign101/concepts/templates/composite/",
                "x-ds-definition-name": "compositeTemplate",
                "x-ms-summary": "This object contains information about a [composite template][composite], which you can use to to apply multiple templates to a single envelope, combine templates with PDF forms, and combine templates with documents from cloud sources.\n\n[composite]: /docs/esign-rest-api/esign101/concepts/templates/composite/"
            },
            "conditionalRecipientRule": {
                "type": "object",
                "properties": {
                    "conditions": {
                        "description": "An array of conditions that define when the recipients will be used.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/conditionalRecipientRuleCondition"
                        }
                    },
                    "order": {
                        "description": "An integer that specifies the order in which rules are processed.\nLower values are processed before higher values.",
                        "type": "string"
                    },
                    "recipientGroup": {
                        "$ref": "#/components/schemas/recipientGroup"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the condition will be applied. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    }
                },
                "description": "A rule that defines a set of recipients and the conditions under which they will be used for the envelope.",
                "x-ds-definition-name": "conditionalRecipientRule",
                "x-ms-summary": "A rule that defines a set of recipients and the conditions under which they will be used for the envelope."
            },
            "conditionalRecipientRuleCondition": {
                "type": "object",
                "properties": {
                    "filters": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/conditionalRecipientRuleFilter"
                        }
                    },
                    "order": {
                        "description": "An integer that specifies the order in which rules are processed.\nLower values are processed before higher values.",
                        "type": "string"
                    },
                    "recipientLabel": {
                        "description": "An identifier for the recipient. After assigning this value in a `recipient` object, you can reference it in the `conditions` object to set the recipient as a conditional recipient. For an example, see [How to use conditional recipients](/docs/esign-rest-api/how-to/use-conditional-recipients/).\n",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "conditionalRecipientRuleCondition",
                "description": "",
                "x-ms-summary": ""
            },
            "conditionalRecipientRuleFilter": {
                "type": "object",
                "properties": {
                    "operator": {
                        "description": "How the tab value is compared to the `value` property. Valid values:\n\n* `equals`\n* `greaterThan`\n* `greaterThanEquals`\n* `lessThan`\n* `lessThanEquals`\n* `filled`\n* `selected`",
                        "type": "string"
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "scope": {
                        "description": "The scope under which the condition is evaluated. Valid values:\n\n* `tabs`",
                        "type": "string"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "value": {
                        "description": "A set value to which the tab's actual value is compared.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "conditionalRecipientRuleFilter",
                "description": "",
                "x-ms-summary": ""
            },
            "connectConfigResults": {
                "type": "object",
                "properties": {
                    "configurations": {
                        "description": "An array of DocuSign Connect configurations.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectCustomConfiguration"
                        }
                    },
                    "totalRecords": {
                        "description": "The number of results.",
                        "type": "string"
                    }
                },
                "description": "This object contains the results of a ConnectConfigurations::GET method.",
                "x-ds-definition-name": "connectConfigResults",
                "x-ms-summary": "This object contains the results of a ConnectConfigurations::GET method."
            },
            "connectCustomConfiguration": {
                "type": "object",
                "properties": {
                    "allowEnvelopePublish": {
                        "description": "Set this value to **true** to enable the webhook. The default property is **false.**",
                        "type": "string"
                    },
                    "allowSalesforcePublish": {
                        "description": "When **true,** DocuSign sends data to the designated Salesforce account through Connect. The default value is **true.**",
                        "type": "string"
                    },
                    "allUsers": {
                        "description": "When **true,** the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect. The default value is **false.**\n\n**Note:** If this property is **false,** make sure you set the `userIds` property to a non-empty array of user IDs.",
                        "type": "string"
                    },
                    "allUsersExcept": {
                        "description": "This flag allows you to toggle between including and excluding specified users from the configuration. When **false,** the users corresponding to the IDs in `userIds` will be included in the configuration. Conversely, when **true,** the users will be excluded from the configuration. The default value is **false.**",
                        "type": "string"
                    },
                    "configurationType": {
                        "description": "The type of the configuration. Valid values:\n\n* `custom`: Creates an account-level configuration\n* `customrecipient`: Creates a Recipient Connect configuration\n* `salesforce`\n* `eOriginal`\n\nThis property is required.",
                        "type": "string"
                    },
                    "connectId": {
                        "description": "The DocuSign-generated ID for the Connect configuration.\n\nThis property is read-only.",
                        "type": "string"
                    },
                    "deliveryMode": {
                        "description": "The delivery mode of the configuration. Valid values:\n\n* `SIM`\n* `Aggregate`",
                        "type": "string"
                    },
                    "disabledBy": {
                        "description": "",
                        "type": "string"
                    },
                    "enableLog": {
                        "description": "When **true,** Connect logging is turned on. DocuSign recommends that you enable this functionality to help troubleshoot any issues. \n\nYou can have a maximum of 100 active logs in your account. You can view the entries in active logs in the **Logs** tab in the Connect console.",
                        "type": "string"
                    },
                    "envelopeEvents": {
                        "description": "A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property.\n\nWhen using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), you must include either the `envelopeEvents` property or the `recipientEvents` property. If you are instead using the [JSON SIM event model](]/platform/webhooks/connect/improved-json-sim-event-model/), use the `events` property.\n\nThe [possible event statuses](/platform/webhooks/connect/event-triggers/) are:\n\n* `Sent`\n* `Delivered`\n* `Completed`\n* `Declined`\n* `Voided`\n\n**Note:** These values are case-sensitive.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "eventData": {
                        "$ref": "#/components/schemas/connectEventData"
                    },
                    "events": {
                        "description": "A comma-separated list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `urlToPublishTo` property.\n\nSet this property when you are using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/). If you are instead using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), set either the `envelopeEvents` property or the `recipientEvents` property.\n\nThe [possible event statuses](/platform/webhooks/connect/improved-json-sim-event-model/#eventreference) are:\n\n* `envelope-created`\n* `envelope-sent`\n* `envelope-resent`\n* `envelope-delivered`\n* `envelope-completed`\n* `envelope-declined`\n* `envelope-voided`\n* `recipient-authenticationfailed`\n* `recipient-autoresponded`\n* `recipient-declined`\n* `recipient-delivered`\n* `recipient-completed`\n* `recipient-sent`\n* `recipient-resent`\n* `template-created`\n* `template-modified`\n* `template-deleted`\n* `envelope-corrected`\n* `envelope-purge`\n* `envelope-deleted`\n* `envelope-discard`\n* `recipient-reassign`\n* `recipient-delegate`\n* `recipient-finish-later`\n* `click-agreed`\n* `click-declined`\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "externalFolderId": {
                        "description": "The ID of an external folder.",
                        "type": "string"
                    },
                    "externalFolderLabel": {
                        "description": "The label for an external folder.",
                        "type": "string"
                    },
                    "groupIds": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "includeCertificateOfCompletion": {
                        "description": "When **true,** the Connect Service includes the Certificate of Completion with completed envelopes. ",
                        "type": "string"
                    },
                    "includeCertSoapHeader": {
                        "description": "",
                        "type": "string"
                    },
                    "includeDocumentFields": {
                        "description": "When **true,** the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. ",
                        "type": "string"
                    },
                    "includeDocuments": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "includeEnvelopeVoidReason": {
                        "description": "When **true,** if the envelope is voided, the Connect Service notification will include the void reason, as entered by the person that voided the envelope. ",
                        "type": "string"
                    },
                    "includeHMAC": {
                        "description": "",
                        "type": "string"
                    },
                    "includeOAuth": {
                        "description": "",
                        "type": "string"
                    },
                    "includeSenderAccountasCustomField": {
                        "description": "When **true,** Connect will include the sender account as Custom Field in the data.",
                        "type": "string"
                    },
                    "includeTimeZoneInformation": {
                        "description": "When **true,** Connect will include the envelope time zone information.",
                        "type": "string"
                    },
                    "integratorManaged": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the Connect configuration.\n\nThis property is required.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The password for the Connect configuration.\n\nThis property is not used for the `createHistoricalEnvelopePublishTransaction` endpoint.\n",
                        "type": "string"
                    },
                    "recipientEvents": {
                        "description": "An array of recipient event statuses that will trigger Connect to send notifications to your webhook listener at the URL endpoint specified in the `url` property. \n\nWhen using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), you must include either the `envelopeEvents` property or the `recipientEvents` property. If you are instead using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/), use the `events` property.\n\nThe [possible event statuses](/platform/webhooks/connect/event-triggers/) are:\n\n* `Sent`\n* `AutoResponded`\n* `Delivered`\n* `Completed`\n* `Declined`\n* `AuthenticationFailed`\n\n**Note:** These values are case-sensitive.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requireMutualTls": {
                        "description": "When **true,** [Mutual TLS](/platform/webhooks/mutual-tls/) authentication is enabled.",
                        "type": "string"
                    },
                    "requiresAcknowledgement": {
                        "description": "When **true,** event delivery acknowledgements are enabled for your Connect configuration.\n\nDocuSign Connect awaits a valid 200 response from your application acknowledging that it received a message. If you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and places it into a failure queue. It is imperative that you acknowledge successful receipt of Connect events as they occur by sending a 200 event back.\n\n#### When **true** and Send Individual Messages (SIM) mode is activated\n\nIf the HTTP status response to a notification message is not in the range of 200-299,\nthen the message delivery failed, and the configuration is marked as down.\n\nThe message will be queued and retried once per day.\nWhile a Connect configuration is marked down, subsequent notifications will not be tried. Instead they will be immediately queued with the reason `Pending`.\nWhen a message succeeds, all queued messages for the configuration will be tried immediately, in order.\n\nThere is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.\n\n#### When **true** and SIM mode is not activated\n\nIf the HTTP Status response to a notification message is not in the range of 200-299,  then the message delivery failed, and the message is queued.\n\nThe message will be retried after at least a day the next time a subsequent message is successfully sent to this configuration (subscription).  Subsequent notifications will be tried when they occur.\nThere is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.\n\n#### When **false**\n\nWhen `requiresAcknowledgement` is set to **false** and you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and determines that the server is unavailable. It does not retry to send the notification message, and you must handle the failure manually.\n\n",
                        "type": "string"
                    },
                    "salesforceApiVersion": {
                        "description": "The version of the Salesforce API that you are using.",
                        "type": "string"
                    },
                    "salesforceAuthcode": {
                        "description": "",
                        "type": "string"
                    },
                    "salesforceCallBackUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "salesforceDocumentsAsContentFiles": {
                        "description": "When **true,** DocuSign can use documents in your Salesforce account for sending and signing.",
                        "type": "string"
                    },
                    "senderOverride": {
                        "description": "",
                        "type": "string"
                    },
                    "senderSelectableItems": {
                        "description": "This property sets the items that are available for selection when adding or editing Connect objects. ",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sfObjects": {
                        "description": "An array of Salesforce objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectSalesforceObject"
                        }
                    },
                    "signMessageWithX509Certificate": {
                        "description": "When **true,** Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol. ",
                        "type": "string"
                    },
                    "soapNamespace": {
                        "description": "The namespace of the SOAP interface.\n\n**Note:** If `useSoapInterface` is set to **true,** you must set this value.",
                        "type": "string"
                    },
                    "urlToPublishTo": {
                        "description": "The web address of the listener or retrieving service endpoint. It must be an HTTPS URL.",
                        "type": "string"
                    },
                    "userIds": {
                        "description": "A comma-separated list of user IDs. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener.\n\nBy default, the users will be included in the configuration. If you want to exclude the users, set the `allUsersExcept` property to **true.**\n\n**Note:** If `allUsers` is set to `false`, then you must provide a list of user IDs.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userName": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "useSoapInterface": {
                        "description": "When **true,** the notifications are sent to your endpoint as SOAP requests. ",
                        "type": "string"
                    }
                },
                "description": "The `connectCustomConfiguration` object describes a Connect configuration for your account.",
                "x-ds-definition-name": "connectCustomConfiguration",
                "x-ms-summary": "The `connectCustomConfiguration` object describes a Connect configuration for your account."
            },
            "connectDebugLog": {
                "type": "object",
                "properties": {
                    "connectConfig": {
                        "description": "The name of the Connect configuration.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "eventDateTime": {
                        "description": "The UTC date and time of the event.",
                        "type": "string"
                    },
                    "eventDescription": {
                        "description": "A description of the event.",
                        "type": "string"
                    },
                    "payload": {
                        "description": "Log output.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "connectDebugLog",
                "description": "",
                "x-ms-summary": ""
            },
            "connectDeleteFailureResult": {
                "type": "object",
                "x-ds-definition-name": "connectDeleteFailureResult",
                "description": "",
                "x-ms-summary": ""
            },
            "connectEventData": {
                "type": "object",
                "properties": {
                    "format": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "includeData": {
                        "description": "A string array of the data to be included.\nThe default is the empty array `[]`.\n\n- `attachments`: Include attachments associated with the envelope.\n- `custom_fields`: Include the custom fields associated with the envelope.\n- `documents`: Include the documents associated with the envelope.\n- `extensions`: Include information about the email settings associated with the envelope.\n- `folders`: Include the folder where the envelope exists.\n- `payment_tabs`: Include the payment tabs associated with the envelope.\n- `powerform`: Include the PowerForms associated with the envelope.\n- `prefill_tabs`: Include the [pre-filled tabs](/docs/esign-rest-api/esign101/concepts/tabs/prefilled-tabs/) associated with the envelope.\n- `recipients`: Include the recipients associated with the envelope.\n- `tabs`: Include the tabs associated with the envelope.\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "description": "Set this property to `restv2.1` to return event data in JSON. If the property is not set, the event data will be returned in XML by default.",
                        "type": "string"
                    }
                },
                "description": "This object lets you choose the data format of your Connect response.",
                "x-ds-definition-name": "connectEventData",
                "x-ms-summary": "This object lets you choose the data format of your Connect response."
            },
            "connectFailureFilter": {
                "type": "object",
                "properties": {
                    "envelopeIds": {
                        "description": "An array of envelope GUIDs.\n\nExample: `93be49ab-xxxx-xxxx-xxxx-f752070d71ec`\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "synchronous": {
                        "description": "Must be **false.** Setting this property to any other value will result in errors.",
                        "type": "string"
                    }
                },
                "description": "A list of failed envelope IDs to retry.",
                "x-ds-definition-name": "connectFailureFilter",
                "x-ms-summary": "A list of failed envelope IDs to retry."
            },
            "connectFailureResult": {
                "type": "object",
                "properties": {
                    "configId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "configUrl": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The connection status.",
                        "type": "string"
                    },
                    "statusMessage": {
                        "description": "A human-readable message describing the connection status.",
                        "type": "string"
                    }
                },
                "description": "This object contains details about a Connect failure result.",
                "x-ds-definition-name": "connectFailureResult",
                "x-ms-summary": "This object contains details about a Connect failure result."
            },
            "connectFailureResults": {
                "type": "object",
                "properties": {
                    "retryQueue": {
                        "description": "Details about a Connect failure result.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectFailureResult"
                        }
                    }
                },
                "x-ds-definition-name": "connectFailureResults",
                "description": "",
                "x-ms-summary": ""
            },
            "connectHistoricalEnvelopeRepublish": {
                "type": "object",
                "properties": {
                    "config": {
                        "$ref": "#/components/schemas/connectCustomConfiguration"
                    },
                    "envelopes": {
                        "description": "An array of envelope IDs as comma-separated strings. This property is required.\n\nFor example: `[\"4280f274-xxxx-xxxx-xxxx-b218b7eeda08\",\"9586h293-xxxx-xxxx-xxxx-m923b8opre71\",\"2347w948-xxxx-xxxx-xxxx-t096b8krno89\"]`",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-ds-definition-name": "connectHistoricalEnvelopeRepublish",
                "description": "The request body for the `createHistoricalEnvelopePublishTransaction` endpoint.",
                "x-ms-summary": "The request body for the `createHistoricalEnvelopePublishTransaction` endpoint."
            },
            "connectLog": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The account ID associated with the envelope.",
                        "type": "string"
                    },
                    "configUrl": {
                        "description": "The web address of the listener or retrieving service endpoint for Connect.",
                        "type": "string"
                    },
                    "connectDebugLog": {
                        "description": "A complex element containing information about the Connect configuration, error details, date/time, description and payload.\nThis information is included in the response only when the `additional_info` query is set to **true.**\nThis additional information is only available when retrieving general logs with [ConnectEvents:get](/docs/esign-rest-api/reference/connect/connectevents/get/), but not when retrieving failure logs with [ConnectEvents:listFailures](/docs/esign-rest-api/reference/connect/connectevents/listfailures/).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectDebugLog"
                        }
                    },
                    "connectId": {
                        "description": "The ID of the Connect configuration that failed. If an account has multiple Connect configurations, this value is used to look up the Connect configuration for the failed post.",
                        "type": "string"
                    },
                    "created": {
                        "description": "The UTC DateTime when the Connect post was created.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the envelope sender.",
                        "type": "string"
                    },
                    "envelopeId": {
                        "description": "The ID of the envelope that failed to post.",
                        "type": "string"
                    },
                    "error": {
                        "description": "The error that caused the Connect post to fail.",
                        "type": "string"
                    },
                    "failureId": {
                        "description": "The failure log ID for the failure.",
                        "type": "string"
                    },
                    "failureUri": {
                        "description": "The URI for the Connect post failure.",
                        "type": "string"
                    },
                    "lastTry": {
                        "description": "The UTC DateTime of the last attempt to post.",
                        "type": "string"
                    },
                    "logId": {
                        "description": "The Connect log ID for the entry.",
                        "type": "string"
                    },
                    "logUri": {
                        "description": "The URI for the Connect log entry.",
                        "type": "string"
                    },
                    "retryCount": {
                        "description": "The number of times the Connect post has been retried.",
                        "type": "string"
                    },
                    "retryUri": {
                        "description": "A URI that you can use to retry to publish the Connect post.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The envelope status for the Connect post. Possible values are:\n- `Any`\n- `Voided`\n- `Created`\n- `Deleted`\n- `Sent`\n- `Delivered`\n- `Signed`\n- `Completed`\n- `Declined`\n- `TimedOut`\n- `Template`\n- `Processing`\n\nFor details about these statuses, see [Envelope Status Code Descriptions](/docs/esign-rest-api/esign101/rules-and-limits/responses/).",
                        "type": "string"
                    },
                    "subject": {
                        "description": "The subject of the envelope.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the sender of the envelope.",
                        "type": "string"
                    }
                },
                "description": "Contains information about a Connect log entry.",
                "x-ds-definition-name": "connectLog",
                "x-ms-summary": "Contains information about a Connect log entry."
            },
            "connectLogs": {
                "type": "object",
                "properties": {
                    "failures": {
                        "description": "An array of containing failure information from the Connect failure log.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectLog"
                        }
                    },
                    "logs": {
                        "description": "A list of Connect general logs.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectLog"
                        }
                    },
                    "totalRecords": {
                        "description": "The count of records in the log list.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of this tab. Values are:\n\n- `Approve`\n- `CheckBox`\n- `Company`\n- `Date`\n- `DateSigned`\n- `Decline`\n- `Email`\n- `EmailAddress`\n- `EnvelopeId`\n- `FirstName`\n- `Formula`\n- `FullName`\n- `InitialHere`\n- `InitialHereOptional`\n- `LastName`\n- `List`\n- `Note`\n- `Number`\n- `Radio`\n- `SignerAttachment`\n- `SignHere`\n- `SignHereOptional`\n- `Ssn`\n- `Text`\n- `Title`\n- `Zip5`\n- `Zip5Dash4`\n",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "connectLogs",
                "description": "",
                "x-ms-summary": ""
            },
            "connectOAuthConfig": {
                "type": "object",
                "properties": {
                    "authorizationServerUrl": {
                        "description": "The token URL for your authorization server or OAuth service.\n\nThis property is required.",
                        "type": "string"
                    },
                    "clientId": {
                        "description": "The client ID assigned to your app by your authorization server or OAuth service.\n\nThis property is required.",
                        "type": "string"
                    },
                    "clientSecret": {
                        "description": "The secret value provided by your authorization server.\n\nThis property is required.",
                        "type": "string"
                    },
                    "customParameters": {
                        "description": "",
                        "type": "string",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "scope": {
                        "description": "The scopes that your app will request from the authorization server.\n\nThis property is optional.\n\n**Note:** If you are using Azure, this value is the application ID URI of the secified resource affixed with the `.default`. For example: `api://{{clientId}}/.default`",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "connectOAuthConfig",
                "description": "A complex object describing a Connect OAuth configuration.",
                "x-ms-summary": "A complex object describing a Connect OAuth configuration."
            },
            "connectSalesforceField": {
                "type": "object",
                "properties": {
                    "dsAttribute": {
                        "description": "",
                        "type": "string"
                    },
                    "dsLink": {
                        "description": "A URL that links to the information in the DocuSign field.",
                        "type": "string"
                    },
                    "dsNode": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "A unique ID for the Salesforce object.",
                        "type": "string"
                    },
                    "sfField": {
                        "description": "",
                        "type": "string"
                    },
                    "sfFieldName": {
                        "description": "The name of the Salesforce field.",
                        "type": "string"
                    },
                    "sfFolder": {
                        "description": "The name of the Salesforce folder.",
                        "type": "string"
                    },
                    "sfLockedValue": {
                        "description": "",
                        "type": "string"
                    }
                },
                "description": "This object is used to match a DocuSign field to a Salesforce field so that DocuSign can send information to your Salesforce account.",
                "x-ds-definition-name": "connectSalesforceField",
                "x-ms-summary": "This object is used to match a DocuSign field to a Salesforce field so that DocuSign can send information to your Salesforce account."
            },
            "connectSalesforceObject": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "When **true,** the `connectSalesforceObject` is active.",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description of the `connectSalesforceObject`.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the `connectSalesforceObject`.",
                        "type": "string"
                    },
                    "insert": {
                        "description": "",
                        "type": "string"
                    },
                    "onCompleteOnly": {
                        "description": "When **true,** Salesforce is updated only when the envelope is complete.",
                        "type": "string"
                    },
                    "selectFields": {
                        "description": "The DocuSign and Salesforce fields that you want to use to match a Salesforce object with DocuSign information. This information tells Connect when to send updates to Salesforce.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectSalesforceField"
                        }
                    },
                    "sfObject": {
                        "description": "The Salesforce.com object type, such as `case`, `contact`, or `opportunity`.",
                        "type": "string"
                    },
                    "sfObjectName": {
                        "description": "A name for the Salesforce object.\n\n**Note:** You can enter any name for the object. It does not have to match the `sfObject` property.",
                        "type": "string"
                    },
                    "updateFields": {
                        "description": "The DocuSign and Salesforce fields that you want to update. \n\n**Note:** You can choose to update SalesForce (with information from DocuSign) only, update DocuSign only, or both.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectSalesforceField"
                        }
                    }
                },
                "description": "A `connectSalesforceObject` is an object that updates envelope and document status or recipient status in your Salesforce account.\n\nWhen you install DocuSign Connect for Salesforce, the service automatically sets up two Connect objects: one that updates envelope status and documents and one that updates recipient status. You can also customize DocuSign Connect for Salesforce by associating DocuSign objects with Salesforce objects so that DocuSign Connect for Salesforce updates or inserts the information into the Salesforce object. For more information, see \n[DocuSign for Salesforce - Adding Completed Documents to the Notes and Attachments](https://support.docusign.com/s/articles/DocuSign-for-Salesforce-Adding-Completed-Documents-to-the-Notes-and-Attachments-New).",
                "x-ds-definition-name": "connectSalesforceObject",
                "x-ms-summary": "A `connectSalesforceObject` is an object that updates envelope and document status or recipient status in your Salesforce account.\n\nWhen you install DocuSign Connect for Salesforce, the service automatically sets up two Connect objects: one that updates envelope status and documents and one that updates recipient status. You can also customize DocuSign Connect for Salesforce by associating DocuSign objects with Salesforce objects so that DocuSign Connect for Salesforce updates or inserts the information into the Salesforce object. For more information, see \n[DocuSign for Salesforce - Adding Completed Documents to the Notes and Attachments](https://support.docusign.com/s/articles/DocuSign-for-Salesforce-Adding-Completed-Documents-to-the-Notes-and-Attachments-New)."
            },
            "connectUserInfo": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "isIncluded": {
                        "description": "",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the user.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "connectUserInfo",
                "description": "",
                "x-ms-summary": ""
            },
            "connectUserObject": {
                "type": "object",
                "properties": {
                    "configurationtype": {
                        "description": "The type of custom Connect configuration being accessed.",
                        "type": "string"
                    },
                    "connectId": {
                        "description": "The ID of the custom Connect configuration being accessed.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "Boolean value that indicates whether the custom Connect configuration is enabled or not.",
                        "type": "string"
                    },
                    "hasAccess": {
                        "description": "",
                        "type": "string"
                    },
                    "senderSearchableItems": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-ds-definition-name": "connectUserObject",
                "description": "",
                "x-ms-summary": ""
            },
            "consentDetails": {
                "type": "object",
                "properties": {
                    "consentKey": {
                        "description": "",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "signerConsentStatus": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "consentDetails",
                "description": "",
                "x-ms-summary": ""
            },
            "consoleViewRequest": {
                "type": "object",
                "properties": {
                    "envelopeId": {
                        "description": "The ID of an envelope. If the envelope has been sent, the endpoint returns a URL for a view of the documents. If the envelope has not yet been sent, the endpoint returns a URL for the sender view.\n\nThis property is optional. If no value is provided, the endpoint returns a URL for the front page of the demo UI.",
                        "type": "string"
                    },
                    "returnUrl": {
                        "description": "The URL to which the user should be redirected. This is only used when the `envelopeId` is specified as a draft envelope. In this case, the endpoint returns a URL for the sender view. When the user exits the sender view, they will be redirected to the `returnUrl` value. If no value is provided, there is no option to leave the sender view.\n\nIn other cases, the user is not redirected out of the console view.",
                        "type": "string"
                    }
                },
                "description": "The request object for the [EnvelopeViews: createConsole](/docs/esign-rest-api/reference/envelopes/envelopeviews/createconsole/) method.",
                "x-ds-definition-name": "consoleViewRequest",
                "x-ms-summary": "The request object for the [EnvelopeViews: createConsole](/docs/esign-rest-api/reference/envelopes/envelopeviews/createconsole/) method."
            },
            "consumerDisclosure": {
                "type": "object",
                "properties": {
                    "accountEsignId": {
                        "description": "The GUID of the account associated with the consumer disclosure.",
                        "type": "string"
                    },
                    "allowCDWithdraw": {
                        "description": "When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.**\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowCDWithdrawMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "changeEmail": {
                        "description": "If the customer needs to change their email address, this is the email address to which they should the change request.\n\nMaximum length: 100 characters.",
                        "type": "string"
                    },
                    "changeEmailOther": {
                        "description": "Other information about the requirements for the user to change their email address.\n\nMaximum length: 255 characters.\n\nExample: \n\n`We do not require any other information from you to change your email address.`",
                        "type": "string"
                    },
                    "companyName": {
                        "description": "Specifies the company name used in the disclosure. The default value is the account name.\n\nHowever, if your account uses signing brands that specify a company name, you can substitute the brand's company name by setting the `useBrand` property to **true.** Whenever an envelope is sent from the account that uses a signing brand with a specified `companyName`, that value is used in email notifications and in the signing experience.\n\n**Note:** This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. You must also set the value of the `useBrand` property to **true.**",
                        "type": "string"
                    },
                    "companyPhone": {
                        "description": "The phone number of the company associated with the consumer disclosure, as a free-formatted string.",
                        "type": "string"
                    },
                    "copyCostPerPage": {
                        "description": "The cost per page if the customer requests paper copies.\n\nExample: \n\n`0.0000`",
                        "type": "string"
                    },
                    "copyFeeCollectionMethod": {
                        "description": "Specifies the fee collection method for cases in which the customer requires paper copies of the document.\n\nMaximum length: 255 characters.\n\nExample: \n\n`We will bill you for any fees at that time, if any.`",
                        "type": "string"
                    },
                    "copyRequestEmail": {
                        "description": "The email address to which the customer should send a request for copies of a document.\n\nMaximum length: 100 characters.",
                        "type": "string"
                    },
                    "custom": {
                        "description": "When **true,** indicates that the consumer disclosure is a custom disclosure. The default is **false.**",
                        "type": "string"
                    },
                    "enableEsign": {
                        "description": "When **true** (default), indicates that eSign is enabled.",
                        "type": "string"
                    },
                    "esignAgreement": {
                        "description": "The final, assembled text of the Electronic Record and Signature Disclosure that includes the appropriate `companyName` and other specifics. It also includes the HTML tags used for formatting.",
                        "type": "string"
                    },
                    "esignText": {
                        "description": "The template for the Electronic Record and Signature Disclosure, which contains placeholders for information such as the `companyName`. It also includes the HTML tags used for formatting.\n\n**Note:** If you are switching to or updating a custom disclosure, you can edit both the text and the HTML formatting.",
                        "type": "string"
                    },
                    "languageCode": {
                        "description": "The code for the language version of the disclosure. The following languages are supported:\n\n- Arabic (`ar`)\n- Bulgarian (`bg`)\n- Czech (`cs`)\n- Chinese Simplified (`zh_CN`)\n- Chinese Traditional (`zh_TW`)\n- Croatian (`hr`)\n- Danish (`da`)\n- Dutch (`nl`)\n- English US (`en`)\n- English UK (`en_GB`)\n- Estonian (`et`)\n- Farsi (`fa`)\n- Finnish (`fi`)\n- French (`fr`)\n- French Canadian (`fr_CA`)\n- German (`de`)\n- Greek (`el`)\n- Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Bahasa Indonesian (`id`)\n- Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n- Latvian (`lv`)\n- Lithuanian (`lt`)\n- Bahasa Melayu (`ms`)\n- Norwegian (`no`)\n- Polish (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brazil (`pt_BR`)\n- Romanian (`ro`)\n- Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n- Slovenian (`sl`)\n- Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n- Swedish (`sv`)\n- Thai (`th`)\n- Turkish (`tr`)\n- Ukrainian (`uk`) \n- Vietnamese (`vi`)\n\nAdditionally, you can automatically detect the browser language being used by the viewer and display the disclosure in that language by setting the value to `browser`.",
                        "type": "string"
                    },
                    "mustAgreeToEsign": {
                        "description": "When **true,** the  recipient must agree to the consumer disclosure. The value of this property is read-only. It is calculated based on the account setting `consumerDisclosureFrequency` and the user's actions.",
                        "type": "string"
                    },
                    "pdfId": {
                        "description": "**Deprecated.** \n\nThe `pdfId` property in the consumer_disclosure PUT request is deprecated. For security reasons going forward, any value provided in the request packet must be ignored. ",
                        "type": "string"
                    },
                    "useBrand": {
                        "description": "When **true,** specifies that the company name in the signing brand is used for the disclosure. Whenever an envelope is sent from the account that uses a signing brand with a specified company name, that value is used in email notifications and in the signing experience.  \n\nWhen **false** (default), or if the signing brand does not specify a company name, the account name is used instead.\n\n**Note:** This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. ",
                        "type": "string"
                    },
                    "useConsumerDisclosureWithinAccount": {
                        "description": "When **true,** specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.",
                        "type": "string"
                    },
                    "useConsumerDisclosureWithinAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "withdrawAddressLine1": {
                        "description": "Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "withdrawAddressLine2": {
                        "description": "Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "withdrawByEmail": {
                        "description": "When **true** (default), indicates that the customer can withdraw consent by email.",
                        "type": "string"
                    },
                    "withdrawByMail": {
                        "description": "When **true,** indicates that the customer can withdraw consent by postal mail. The default is **false.**",
                        "type": "string"
                    },
                    "withdrawByPhone": {
                        "description": "When **true,** indicates that the customer can withdraw consent by phone. The default is **false.**",
                        "type": "string"
                    },
                    "withdrawCity": {
                        "description": "Contains the city of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 50 characters. ",
                        "type": "string"
                    },
                    "withdrawConsequences": {
                        "description": "Text indicating the consequences of withdrawing consent.\n\nMaximum length: 255 characters.",
                        "type": "string"
                    },
                    "withdrawEmail": {
                        "description": "Contains the email address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "withdrawOther": {
                        "description": "Contains any other information needed to withdraw consent.\n\nMaximum length: 255 characters.\n\nExample:\n\n`We do not need any other information from you to withdraw consent.`",
                        "type": "string"
                    },
                    "withdrawPhone": {
                        "description": "Contains the phone number that a customer can call to register consent withdrawal notification as a free-formatted string.\n\nMaximum length: 20 characters. ",
                        "type": "string"
                    },
                    "withdrawPostalCode": {
                        "description": "Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 20 characters. ",
                        "type": "string"
                    },
                    "withdrawState": {
                        "description": "Contains the state of the postal address to which a customer can send a consent withdrawal notification.\n\nExample: `PA`",
                        "type": "string"
                    }
                },
                "description": "Details about consumer disclosures.",
                "x-ds-definition-name": "consumerDisclosure",
                "x-ms-summary": "Details about consumer disclosures."
            },
            "contact": {
                "type": "object",
                "properties": {
                    "cloudProvider": {
                        "description": "The cloud service that provided the contact. Valid values are:\n\n- `rooms`\n- `docusignCore` (default)\n\n<!-- Future:\n\n- `Box`\n- `GoogleDrive`\n- `Dropbox`\n- `SalesForce`\n- `SkyDrive`\n\n-->",
                        "type": "string"
                    },
                    "cloudProviderContainerId": {
                        "description": "The ID of the container at the cloud provider. For example, this might be the room ID for a DocuSign Transaction Room.",
                        "type": "string"
                    },
                    "contactId": {
                        "description": "The ID of a contact person in the account's address book.",
                        "type": "string"
                    },
                    "contactPhoneNumbers": {
                        "description": "A list of the contact's phone numbers.\n\n**Note:** The phone numbers associated with shared contacts do not display to users other than the user who added the contact. Additionally, in the following scenarios, the phone number of a shared contact does not populate automatically for anyone other than the user who added the contact:\n\n- Sending an envelope by using SMS\n- Using phone authentication\n\nYou must ask the user who added the contact for the phone number and then manually enter it into the authentication box.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/contactPhoneNumber"
                        }
                    },
                    "contactUri": {
                        "description": "The URI for retrieving information about the contact.",
                        "type": "string"
                    },
                    "emails": {
                        "description": "An array of email addresses.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "isOwner": {
                        "description": "",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name of the contact.",
                        "type": "string"
                    },
                    "notaryContactDetails": {
                        "$ref": "#/components/schemas/notaryContactDetails"
                    },
                    "organization": {
                        "description": "",
                        "type": "string"
                    },
                    "roomContactType": {
                        "description": "",
                        "type": "string"
                    },
                    "shared": {
                        "description": "When **true,** this contact is shared.",
                        "type": "string"
                    },
                    "signingGroup": {
                        "description": "The ID of the signing group.",
                        "type": "string"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "contact",
                "description": "",
                "x-ms-summary": ""
            },
            "contactGetResponse": {
                "type": "object",
                "properties": {
                    "contacts": {
                        "description": "A list of contacts.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/contact"
                        }
                    },
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "description": "This response object contains information about the contacts associated with an account.",
                "x-ds-definition-name": "contactGetResponse",
                "x-ms-summary": "This response object contains information about the contacts associated with an account."
            },
            "contactModRequest": {
                "type": "object",
                "properties": {
                    "contactList": {
                        "description": "A list of contacts.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/contact"
                        }
                    }
                },
                "description": "The request object containing the new information for the contacts.",
                "x-ds-definition-name": "contactModRequest",
                "x-ms-summary": "The request object containing the new information for the contacts."
            },
            "contactPhoneNumber": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "description": "The contact's phone number.\n\nExample: `+12223334444`",
                        "type": "string"
                    },
                    "phoneType": {
                        "description": "The type of phone number. Valid values are:\n\n- `home`\n- `mobile`\n- `work`\n- `other`\n- `fax`",
                        "type": "string"
                    }
                },
                "description": "Details about the phone numbers associated with a specific contact.",
                "x-ds-definition-name": "contactPhoneNumber",
                "x-ms-summary": "Details about the phone numbers associated with a specific contact."
            },
            "contactUpdateResponse": {
                "type": "object",
                "properties": {
                    "contacts": {
                        "description": "A list of contacts.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/contact"
                        }
                    }
                },
                "description": "This response objects shows the updated details for the contacts.",
                "x-ds-definition-name": "contactUpdateResponse",
                "x-ms-summary": "This response objects shows the updated details for the contacts."
            },
            "correctViewRequest": {
                "type": "object",
                "properties": {
                    "beginOnTagger": {
                        "description": "",
                        "type": "string"
                    },
                    "returnUrl": {
                        "description": "(Required) The URL to which the user should be redirected after\nthe view session has ended.\n\nMaximum Length: 470 characters. If the `returnUrl` exceeds this\nlimit, the user is redirected to a truncated URL\nBe sure to include `https://` in the URL\nor redirecting might fail on some browsers.\n\nWhen DocuSign redirects to\nthis URL, it will include an `event` query parameter that your app can use:\n\n* `send`: User corrected and sent the envelope.\n* `save`: User saved the envelope.\n* `cancel`: User canceled the transaction.\n* `error`: There was an error when performing the correct or send.\n* `sessionEnd`: The session ended before the user completed a different action.\n",
                        "type": "string"
                    },
                    "suppressNavigation": {
                        "description": "Specifies whether the window is displayed with or without dressing.",
                        "type": "string"
                    },
                    "viewUrl": {
                        "description": "",
                        "type": "string"
                    }
                },
                "description": "The request body for the [EnvelopeViews: createCorrect](/docs/esign-rest-api/reference/envelopes/envelopeviews/createcorrect/) method.",
                "x-ds-definition-name": "correctViewRequest",
                "x-ms-summary": "The request body for the [EnvelopeViews: createCorrect](/docs/esign-rest-api/reference/envelopes/envelopeviews/createcorrect/) method."
            },
            "country": {
                "type": "object",
                "properties": {
                    "isoCode": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "provinces": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/province"
                        }
                    },
                    "provinceValidated": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "country",
                "description": "",
                "x-ms-summary": ""
            },
            "creditCardInformation": {
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/addressInformation"
                    },
                    "cardLastDigits": {
                        "description": "",
                        "type": "string"
                    },
                    "cardNumber": {
                        "description": "The credit card number.",
                        "type": "string"
                    },
                    "cardType": {
                        "description": "The type of credit card. Valid values are: \n\n- `visa` \n- `mastercard` \n- `amex`",
                        "type": "string"
                    },
                    "cvNumber": {
                        "description": "The 3 or 4-digit card verification value (CVV) number associated with the credit card. CVV numbers are also referred to as card security codes (CSCs).",
                        "type": "string"
                    },
                    "expirationMonth": {
                        "description": "The month that the credit card expires, expressed as a number from 1 to 12.",
                        "type": "string"
                    },
                    "expirationYear": {
                        "description": "The year in which the credit card expires, in 4-digit format.",
                        "type": "string"
                    },
                    "nameOnCard": {
                        "description": "The exact name as it appears on the credit card.",
                        "type": "string"
                    },
                    "tokenizedCard": {
                        "description": "",
                        "type": "string"
                    }
                },
                "description": "This object contains information about a credit card that is associated with an account.",
                "x-ds-definition-name": "creditCardInformation",
                "x-ms-summary": "This object contains information about a credit card that is associated with an account."
            },
            "creditCardTypes": {
                "type": "object",
                "properties": {
                    "cardTypes": {
                        "description": "An array containing supported credit card types.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-ds-definition-name": "creditCardTypes",
                "description": "",
                "x-ms-summary": ""
            },
            "currencyFeatureSetPrice": {
                "type": "object",
                "properties": {
                    "currencyCode": {
                        "description": "Specifies the alternate ISO currency code for the account. ",
                        "type": "string"
                    },
                    "currencySymbol": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "envelopeFee": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fixedFee": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "seatFee": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "description": "Information about the price and currency associated with the feature set. Reserved for internal DocuSign use only.",
                "x-ds-definition-name": "currencyFeatureSetPrice",
                "x-ms-summary": "Information about the price and currency associated with the feature set. Reserved for internal DocuSign use only."
            },
            "currencyPlanPrice": {
                "type": "object",
                "properties": {
                    "currencyCode": {
                        "description": "Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the account.",
                        "type": "string"
                    },
                    "currencySymbol": {
                        "description": "Specifies the currency symbol.\nValid values:\n\n- `AED` <br>  \"د.إ\"\n- `AFN` <br>  \"؋\"\n- `ALL` <br>  \"L\"\n- `AMD` <br>  \"֏\"\n- `ANG` <br>  \"ƒ\"\n- `AOA` <br>  \"Kz\"\n- `ARS` <br>  \"$\"\n- `AUD` <br>  \"$\"\n- `AWG` <br>  \"ƒ\"\n- `AZN` <br>  \"₼\"\n- `BAM` <br>  \"KM\"\n- `BBD` <br>  \"$\"\n- `BDT` <br>  \"৳\"\n- `BGN` <br>  \"лв\"\n- `BHD` <br>  \".د.ب\"\n- `BIF` <br>  \"FBu\"\n- `BMD` <br>  \"$\"\n- `BND` <br>  \"$\"\n- `BOB` <br>  \"$b\"\n- `BOV` <br>  \"BOV\"\n- `BRL` <br>  \"R$\"\n- `BSD` <br>  \"$\"\n- `BTN` <br>  \"Nu.\"\n- `BWP` <br>  \"P\"\n- `BYN` <br>  \"Br\"\n- `BYR` <br>  \"Br\"\n- `BZD` <br>  \"BZ$\"\n- `CAD` <br>  \"$\"\n- `CDF` <br>  \"FC\"\n- `CHE` <br>  \"CHE\"\n- `CHF` <br>  \"CHF\"\n- `CHW` <br>  \"CHW\"\n- `CLF` <br>  \"CLF\"\n- `CLP` <br>  \"$\"\n- `CNY` <br>  \"¥\"\n- `COP` <br>  \"$\"\n- `COU` <br>  \"COU\"\n- `CRC` <br>  \"₡\"\n- `CUC` <br>  \"$\"\n- `CUP` <br>  \"₱\"\n- `CVE` <br>  \"$\"\n- `CZK` <br>  \"Kč\"\n- `DJF` <br>  \"Fdj\"\n- `DKK` <br>  \"kr\"\n- `DOP` <br>  \"RD$\"\n- `DZD` <br>  \"دج\"\n- `EGP` <br>  \"£\"\n- `ERN` <br>  \"Nfk\"\n- `ETB` <br>  \"Br\"\n- `EUR` <br>  \"€\"\n- `FJD` <br>  \"$\"\n- `FKP` <br>  \"£\"\n- `GBP` <br>  \"£\"\n- `GEL` <br>  \"₾\"\n- `GHS` <br>  \"GH₵\"\n- `GIP` <br>  \"£\"\n- `GMD` <br>  \"D\"\n- `GNF` <br>  \"FG\"\n- `GTQ` <br>  \"Q\"\n- `GYD` <br>  \"$\"\n- `HKD` <br>  \"$\"\n- `HNL` <br>  \"L\"\n- `HRK` <br>  \"kn\"\n- `HTG` <br>  \"G\"\n- `HUF` <br>  \"Ft\"\n- `IDR` <br>  \"Rp\"\n- `ILS` <br>  \"₪\"\n- `INR` <br>  \"₹\"\n- `IQD` <br>  \"ع.د\"\n- `IRR` <br>  \"﷼\"\n- `ISK` <br>  \"kr\"\n- `JMD` <br>  \"J$\"\n- `JOD` <br>  \"JD\"\n- `JPY` <br>  \"¥\"\n- `KES` <br>  \"KSh\"\n- `KGS` <br>  \"лв\"\n- `KHR` <br>  \"៛\"\n- `KMF` <br>  \"CF\"\n- `KPW` <br>  \"₩\"\n- `KRW` <br>  \"₩\"\n- `KWD` <br>  \"KD\"\n- `KYD` <br>  \"$\"\n- `KZT` <br>  \"₸\"\n- `LAK` <br>  \"₭\"\n- `LBP` <br>  \"£\"\n- `LKR` <br>  \"₨\"\n- `LRD` <br>  \"$\"\n- `LSL` <br>  \"M\"\n- `LYD` <br>  \"LD\"\n- `MAD` <br>  \"MAD\"\n- `MDL` <br>  \"lei\"\n- `MGA` <br>  \"Ar\"\n- `MKD` <br>  \"ден\"\n- `MMK` <br>  \"K\"\n- `MNT` <br>  \"₮\"\n- `MOP` <br>  \"MOP$\"\n- `MRO` <br>  \"UM\"\n- `MUR` <br>  \"₨\"\n- `MVR` <br>  \"Rf\"\n- `MWK` <br>  \"MK\"\n- `MXN` <br>  \"$\"\n- `MXV` <br>  \"MXV\"\n- `MYR` <br>  \"RM\"\n- `MZN` <br>  \"MT\"\n- `NAD` <br>  \"$\"\n- `NGN` <br>  \"₦\"\n- `NIO` <br>  \"C$\"\n- `NOK` <br>  \"kr\"\n- `NPR` <br>  \"₨\"\n- `NZD` <br>  \"$\"\n- `OMR` <br>  \"﷼\"\n- `PAB` <br>  \"B/.\"\n- `PEN` <br>  \"S/.\"\n- `PGK` <br>  \"K\"\n- `PHP` <br>  \"₱\"\n- `PKR` <br>  \"₨\"\n- `PLN` <br>  \"zł\"\n- `PYG` <br>  \"Gs\"\n- `QAR` <br>  \"﷼\"\n- `RON` <br>  \"lei\"\n- `RSD` <br>  \"Дин.\"\n- `RUB` <br>  \"₽\"\n- `RWF` <br>  \"R₣\"\n- `SAR` <br>  \"﷼\"\n- `SBD` <br>  \"$\"\n- `SCR` <br>  \"₨\"\n- `SDG` <br>  \"ج.س.\"\n- `SEK` <br>  \"kr\"\n- `SGD` <br>  \"S$\"\n- `SHP` <br>  \"£\"\n- `SLL` <br>  \"Le\"\n- `SOS` <br>  \"S\"\n- `SRD` <br>  \"$\"\n- `SSP` <br>  \"£\"\n- `STD` <br>  \"Db\"\n- `SVC` <br>  \"$\"\n- `SYP` <br>  \"£\"\n- `SZL` <br>  \"E\"\n- `THB` <br>  \"฿\"\n- `TJS` <br>  \"SM\"\n- `TMT` <br>  \"T\"\n- `TND` <br>  \"د.ت\"\n- `TOP` <br>  \"T$\"\n- `TRY` <br>  \"₺\"\n- `TTD` <br>  \"TT$\"\n- `TWD` <br>  \"NT$\"\n- `TZS` <br>  \"TSh\"\n- `UAH` <br>  \"₴\"\n- `UGX` <br>  \"USh\"\n- `USD` <br>  \"$\"\n- `USN` <br>  \"$\"\n- `UYI` <br>  \"UYI\"\n- `UYU` <br>  \"$U\"\n- `UZS` <br>  \"лв\"\n- `VEF` <br>  \"Bs\"\n- `VND` <br>  \"₫\"\n- `VUV` <br>  \"VT\"\n- `WST` <br>  \"WS$\"\n- `XAF` <br>  \"FCFA\"\n- `XAG` <br>  \"XAG\"  Silver\n- `XAU` <br>  \"XAU\"  Gold\n- `XBA` <br>  \"XBA\"  Bond Markets Units European Composite Unit (EURCO)\n- `XBB` <br>  \"XBB\"  European Monetary Unit (E.M.U.-6)\n- `XBC` <br>  \"XBC\"  European Unit of Account 9(E.U.A.-9)\n- `XBD` <br>  \"XBD\"  European Unit of Account 17(E.U.A.-17)\n- `XCD` <br>  \"$\"\n- `XDR` <br>  \"XDR\" }` <br>  // Special Drawing Rights (SDRs)` <br>  units of account for IMF\n- `XOF` <br>  \"CFA\"\n- `XPD` <br>  \"XPD\"  Palladium\n- `XPF` <br>  \"₣\"\n- `XPT` <br>  \"XPT\"  Platinum\n- `XSU` <br>  \"Sucre\"\n- `XTS` <br>  \"XTS\" Reserved for testing purposes\n- `XUA` <br>  \"XUA\"\n- `XXX` <br>  \"XXX\" Denotes transaction involving no currency\n- `YER` <br>  \"﷼\"\n- `ZAR` <br>  \"R\"\n- `ZMW` <br>  \"ZK\"\n- `ZWL` <br>  \"$\"\n",
                        "type": "string"
                    },
                    "perSeatPrice": {
                        "description": "The per-seat price associated with the plan.\n\nExample: `\"456.0000\"`",
                        "type": "string"
                    },
                    "supportedCardTypes": {
                        "$ref": "#/components/schemas/creditCardTypes"
                    },
                    "supportIncidentFee": {
                        "description": "The support incident fee charged for each support incident.\n\nExample: `\"$0.00\"`",
                        "type": "string"
                    },
                    "supportPlanFee": {
                        "description": "The support plan fee charged for this plan.\n\nExample: `\"$0.00\"`",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "currencyPlanPrice",
                "description": "",
                "x-ms-summary": ""
            },
            "customField": {
                "type": "object",
                "properties": {
                    "customFieldType": {
                        "description": "The type of custom field. Valid values are:\n\n- `text` (default)\n- `list`",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "fieldId": {
                        "description": "The ID of the custom field.",
                        "type": "string"
                    },
                    "listItems": {
                        "description": "For a list custom field, this is an array of strings that represent the items in a list. \n\nMaximum Length: 2,000 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "description": "The name of the custom field.",
                        "type": "string"
                    },
                    "required": {
                        "description": "When **true,** the signer must complete the custom field.",
                        "type": "string"
                    },
                    "show": {
                        "description": "When **true,** the custom field displays at the top of the Certificate of Completion.",
                        "type": "string"
                    },
                    "value": {
                        "description": "Specifies the value of the custom field. \n\nMaximum Length: 2,000 characters.",
                        "type": "string"
                    }
                },
                "description": "This object provides details about a custom field.",
                "x-ds-definition-name": "customField",
                "x-ms-summary": "This object provides details about a custom field."
            },
            "customFields": {
                "description": "Contains information about custom fields.",
                "type": "object",
                "properties": {
                    "listCustomFields": {
                        "description": "An array of list custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listCustomField"
                        }
                    },
                    "textCustomFields": {
                        "description": "An array of text custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/textCustomField"
                        }
                    }
                },
                "x-ds-definition-name": "customFields",
                "x-ms-summary": "Contains information about custom fields."
            },
            "customFieldsEnvelope": {
                "type": "object",
                "properties": {
                    "listCustomFields": {
                        "description": "An array of list custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listCustomField"
                        }
                    },
                    "textCustomFields": {
                        "description": "An array of text custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/textCustomField"
                        }
                    }
                },
                "x-ds-definition-name": "customFieldsEnvelope",
                "description": "",
                "x-ms-summary": ""
            },
            "customSettingsInformation": {
                "type": "object",
                "properties": {
                    "customSettings": {
                        "description": "The name/value pair information for the user custom setting.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    }
                },
                "x-ds-definition-name": "customSettingsInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "date": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderRequired": {
                        "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                        "type": "string"
                    },
                    "senderRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationMessageMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationPattern": {
                        "description": "A regular expression used to validate input for the tab.",
                        "type": "string"
                    },
                    "validationPatternMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n",
                "x-ds-definition-name": "date",
                "x-ms-summary": "A tab that allows the recipient to enter a date. Date tabs\nare one-line fields that allow date information to be\nentered in any format. The tooltip for this tab recommends\nentering the date as MM/DD/YYYY, but this is not enforced.\nThe format entered by the signer is retained. If you need a\nparticular date format enforced, DocuSign recommends using a\nText tab with a validation pattern and a validation message\nto enforce the format.\n"
            },
            "dateSigned": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "**Note:** Date Signed tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that displays the date that the recipient signed the\ndocument.\n",
                "x-ds-definition-name": "dateSigned",
                "x-ms-summary": "A tab that displays the date that the recipient signed the\ndocument.\n"
            },
            "dateStampProperties": {
                "type": "object",
                "properties": {
                    "dateAreaHeight": {
                        "description": "The height of the rectangle.",
                        "type": "string"
                    },
                    "dateAreaWidth": {
                        "description": "The width of the rectangle.",
                        "type": "string"
                    },
                    "dateAreaX": {
                        "description": "The X axis position of the top-left corner.",
                        "type": "string"
                    },
                    "dateAreaY": {
                        "description": "The Y axis position of the top-left corner.",
                        "type": "string"
                    }
                },
                "description": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle.",
                "x-ds-definition-name": "dateStampProperties",
                "x-ms-summary": "Specifies the area in which a date stamp is placed. This parameter uses pixel positioning to draw a rectangle at the center of the stamp area. The stamp is superimposed on top of this central area.\n\nThis property contains the following information about the central rectangle:\n\n- `DateAreaX`: The X axis position of the top-left corner.\n- `DateAreaY`: The Y axis position of the top-left corner.\n- `DateAreaWidth`: The width of the rectangle.\n- `DateAreaHeight`: The height of the rectangle."
            },
            "decline": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "buttonText": {
                        "description": " Specifies the decline text displayed in the tab.",
                        "type": "string"
                    },
                    "buttonTextMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "declineReason": {
                        "description": "The reason the recipient declined the document.",
                        "type": "string"
                    },
                    "declineReasonMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "**Note:** Decline tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n",
                "x-ds-definition-name": "decline",
                "x-ms-summary": "A tab that allows the recipient the option of declining an\nenvelope. If the recipient clicks the tab during the signing\nprocess, the envelope is voided.\n"
            },
            "delayedRouting": {
                "type": "object",
                "properties": {
                    "resumeDate": {
                        "description": "The ISO 8601 timestamp of when the envelope is scheduled to be sent to the recipients associated with the workflow step. This property is `null` if the workflow step has not been initiated.\n\nThis property is read-only.\n",
                        "type": "string"
                    },
                    "rules": {
                        "description": "User-specified rules indicating how and when the envelope should sent for the workflow step and its associated recipients. Only one rule may be specified.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDelayRule"
                        }
                    },
                    "status": {
                        "description": "Status of the delayed routing step. Valid values:\n\n* `pending`: The workflow step has not been reached and the delay has not been initiated.\n* `started`: The workflow step has begun and the delay is in progress. The envelope has not yet been sent to the workflow step's recipients.\n* `completed`: The delay has elapsed and the envelope has been sent to the workflow step's recipients.\n\nThis property is read-only.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "delayedRouting",
                "description": "A complex element that specifies the delayed routing settings for the workflow step.",
                "x-ms-summary": "A complex element that specifies the delayed routing settings for the workflow step."
            },
            "delegationInfo": {
                "type": "object",
                "properties": {
                    "Email": {
                        "description": "",
                        "type": "string"
                    },
                    "Name": {
                        "description": "",
                        "type": "string"
                    },
                    "UserAuthorizationId": {
                        "description": "",
                        "type": "string"
                    },
                    "UserId": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "delegationInfo",
                "description": "",
                "x-ms-summary": ""
            },
            "diagnosticsSettingsInformation": {
                "type": "object",
                "properties": {
                    "apiRequestLogging": {
                        "description": " When **true,** enables API request logging for the user. ",
                        "type": "string"
                    },
                    "apiRequestLogMaxEntries": {
                        "description": "Specifies the maximum number of API requests to log.",
                        "type": "string"
                    },
                    "apiRequestLogRemainingEntries": {
                        "description": "Indicates the remaining number of API requests that can be logged.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "diagnosticsSettingsInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "directDebitProcessorInformation": {
                "type": "object",
                "properties": {
                    "bankBranchCode": {
                        "description": "The branch code of the bank used for direct debit.\n\nMaximum Length: 10 characters.",
                        "type": "string"
                    },
                    "bankCheckDigit": {
                        "description": "The check digit or digits in the international bank account number. These digits are used to confirm the validity of the account.\n\nMaximum Length: 4 characters.",
                        "type": "string"
                    },
                    "bankCode": {
                        "description": "The code or number that identifies the bank. This is also known as the sort code.\n\nExample: `200000`\n\nMaximum Length: 18 characters.",
                        "type": "string"
                    },
                    "bankName": {
                        "description": "The name of the direct debit bank.\n\nMaximum Length: 80 characters.",
                        "type": "string"
                    },
                    "bankTransferAccountName": {
                        "description": "The name on the direct debit bank account. This field is required for POST and PUT requests.\n\nMaximum Length: 60 characters.",
                        "type": "string"
                    },
                    "bankTransferAccountNumber": {
                        "description": "The customer's bank account number. This value will be obfuscated. This field is required for POST and PUT requests.\n\nMaximum Length: 30 characters.",
                        "type": "string"
                    },
                    "bankTransferType": {
                        "description": "Specifies the type of direct debit transfer. The value of this field is dependent on the user's country. This field is required for POST and PUT requests. Possible values are:\n\n- `DirectDebitUK`\n- `DirectEntryAU`\n- `SEPA`",
                        "type": "string"
                    },
                    "country": {
                        "description": "The user's country. The system populates this value automatically.\n\n",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the user who is associated with the payment method. This field is required for POST and PUT requests.\n\nMaximum Length: 80 characters.",
                        "type": "string"
                    },
                    "firstName": {
                        "description": "The user's first name. This field is required for POST and PUT requests.\n\nMaximum Length: 30 characters.",
                        "type": "string"
                    },
                    "iBAN": {
                        "description": "The International Bank Account Number (IBAN). \n\nExample: `DE89370400440532013000`\n\nFor more information, see [PeopleSoft's guide to Setting Up Banks](https://docs.oracle.com/cd/E16365_01/fscm91pbr0/eng/psbooks/fsbk/chapter.htm?File=fsbk/htm/fsbk03.htm).\n\n**Note:** This number will be obfuscated.",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The user's last name. This field is required for POST and PUT requests.\n\nMaximum Length: 70 characters.",
                        "type": "string"
                    }
                },
                "description": "Contains information about a bank that processes a customer's direct debit payments.",
                "x-ds-definition-name": "directDebitProcessorInformation",
                "x-ms-summary": "Contains information about a bank that processes a customer's direct debit payments."
            },
            "dobInformationInput": {
                "description": "Complex type containing:\n\n* dateOfBirth\n* displayLevelCode\n* receiveInResponse",
                "type": "object",
                "properties": {
                    "dateOfBirth": {
                        "description": "Specifies the recipient's date, month, and year of birth.",
                        "type": "string"
                    },
                    "displayLevelCode": {
                        "description": "Specifies the display level for the recipient. Valid values are:\n* `ReadOnly`\n* `Editable`\n* `DoNotDisplay`",
                        "type": "string"
                    },
                    "receiveInResponse": {
                        "description": "A Boolean value that specifies whether the information must be returned in the response.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "dobInformationInput",
                "x-ms-summary": "Complex type containing:\n\n* dateOfBirth\n* displayLevelCode\n* receiveInResponse"
            },
            "docGenFormField": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "A sender-defined description of the line item.\n",
                        "type": "string"
                    },
                    "label": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the form field. The name must be unique to the document.\n\nRequired for PUT requests.",
                        "type": "string"
                    },
                    "options": {
                        "description": "An array of option strings supported by this setting.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/docGenFormFieldOption"
                        }
                    },
                    "predefinedValidation": {
                        "description": "",
                        "type": "string"
                    },
                    "required": {
                        "description": "When **true,** the field is required. This value comes from the the document.",
                        "type": "string"
                    },
                    "type": {
                        "description": "Always `TextBox`.  You do not need to provide this value.",
                        "type": "string"
                    },
                    "validation": {
                        "$ref": "#/components/schemas/docGenFormFieldValidation"
                    },
                    "value": {
                        "description": "The value of the form field.\n\nRequired for PUT requests.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "docGenFormField",
                "description": "The document fields available for document generation.\n\nThis object is used in reponses (GET) and requests (PUT).\nWhen used with [DocumentGeneration: updateEnvelopeDocGenFormFields](/docs/esign-rest-api/reference/envelopes/documentgeneration/updateenvelopedocgenformfields/)\n(PUT) the `name` and `value` properties are required,\nand any other values are ignored.",
                "x-ms-summary": "The document fields available for document generation.\n\nThis object is used in reponses (GET) and requests (PUT).\nWhen used with [DocumentGeneration: updateEnvelopeDocGenFormFields](/docs/esign-rest-api/reference/envelopes/documentgeneration/updateenvelopedocgenformfields/)\n(PUT) the `name` and `value` properties are required,\nand any other values are ignored."
            },
            "docGenFormFieldOption": {
                "type": "object",
                "properties": {
                    "description": {
                        "description": "A sender-defined description of the line item.\n",
                        "type": "string"
                    },
                    "label": {
                        "description": "",
                        "type": "string"
                    },
                    "selected": {
                        "description": "When **true,** the radio button is selected.",
                        "type": "string"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "docGenFormFieldOption",
                "description": "",
                "x-ms-summary": ""
            },
            "docGenFormFieldRequest": {
                "type": "object",
                "properties": {
                    "docGenFormFields": {
                        "description": "A list of `docGenFormFields` objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/docGenFormFields"
                        }
                    }
                },
                "x-ds-definition-name": "docGenFormFieldRequest",
                "description": "This object maps the document generation fields to their values.",
                "x-ms-summary": "This object maps the document generation fields to their values."
            },
            "docGenFormFieldResponse": {
                "type": "object",
                "properties": {
                    "docGenFormFields": {
                        "description": "A list of `docGenFormFields` objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/docGenFormFields"
                        }
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    }
                },
                "x-ds-definition-name": "docGenFormFieldResponse",
                "description": "An object for document generation responses.",
                "x-ms-summary": "An object for document generation responses."
            },
            "docGenFormFields": {
                "type": "object",
                "properties": {
                    "docGenDocumentStatus": {
                        "description": "The status of the document. This is a read-only property.\nValid values:\n\n- `mergesuceeded`\n- `created`\n- `hassyntaxerror`\n",
                        "type": "string"
                    },
                    "docGenErrors": {
                        "description": "A list of `docGenSyntaxError` objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/docGenSyntaxError"
                        }
                    },
                    "docGenFormFieldList": {
                        "description": "A list of `docGenFormField` objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/docGenFormField"
                        }
                    },
                    "documentId": {
                        "description": "The GUID of the document.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "docGenFormFields",
                "description": "A collection of document generation fields.",
                "x-ms-summary": "A collection of document generation fields."
            },
            "docGenFormFieldValidation": {
                "type": "object",
                "properties": {
                    "errorMessage": {
                        "description": "",
                        "type": "string"
                    },
                    "expression": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "docGenFormFieldValidation",
                "description": "",
                "x-ms-summary": ""
            },
            "docGenSyntaxError": {
                "type": "object",
                "properties": {
                    "errorCode": {
                        "description": "A code associated with the error condition.",
                        "type": "string"
                    },
                    "message": {
                        "description": "The error message.",
                        "type": "string"
                    },
                    "tagIdentifier": {
                        "description": "The tag that caused the syntax error.\nSee [Document Generation Syntax](https://support.docusign.com/s/document-item?bundleId=als1679428547895&topicId=ftc1679700030026.html)\nto learn more about document generation syntax rules.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "docGenSyntaxError",
                "description": "Describes document generation errors.",
                "x-ms-summary": "Describes document generation errors."
            },
            "document": {
                "type": "object",
                "properties": {
                    "applyAnchorTabs": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "assignTabsToRecipientId": {
                        "description": "",
                        "type": "string"
                    },
                    "authoritativeCopy": {
                        "description": "When **true,** this document is considered an authoritative copy.\n\nIf this property is not set, it gets its value from the envelope's `authoritativeCopyDefault` property if it's set, or the envelope's `authoritativeCopy` property.\n\nWhen **false,** this document is not an authoritative copy regardless of the envelope's `authoritativeCopyDefault` or `authoritativeCopy` property.",
                        "type": "boolean"
                    },
                    "display": {
                        "description": "This string sets the display and behavior properties of\nthe document during signing. Valid values:\n\n* `modal`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a modal window.\n  This is the recommended value for supplemental documents. \n\n* `inline`<br>\n  The document is shown in the normal signing window.\n  This value is not used with supplemental documents,\n  but is the default value for all other documents.\n",
                        "type": "string"
                    },
                    "docGenFormFields": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/docGenFormField"
                        }
                    },
                    "documentBase64": {
                        "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
                        "type": "string"
                    },
                    "documentFields": {
                        "description": "The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \n\n* `name`: A string that can be a maximum of 50 characters. \n* `value`: A string that can be a maximum of 200 characters.\n\nIf you are using XML, the name/value pair is contained in a `nameValue` element. \n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    },
                    "documentId": {
                        "description": "Specifies the document ID of this document. This value is used by tabs to determine which document they appear in.",
                        "type": "string"
                    },
                    "encryptedWithKeyManager": {
                        "description": "When **true,** the document has been encrypted by the sender for use with the DocuSign Key Manager Security Appliance.\n ",
                        "type": "string"
                    },
                    "fileExtension": {
                        "description": "The file extension type of the document. Non-PDF documents are converted to PDF.\n\nIf the document is not a PDF, `fileExtension` is required.\n\nIf you try to upload a non-PDF document without a `fileExtension`, you will receive an \"unable to load document\" error message.  \n ",
                        "type": "string"
                    },
                    "fileFormatHint": {
                        "description": "",
                        "type": "string"
                    },
                    "htmlDefinition": {
                        "$ref": "#/components/schemas/documentHtmlDefinition"
                    },
                    "includeInDownload": {
                        "description": "When **true,**\nthe document is included in the combined document download (`documentsCombinedUri`). \nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "isDocGenDocument": {
                        "description": "",
                        "type": "string"
                    },
                    "matchBoxes": {
                        "description": "Matchboxes define areas in a document for document matching when you are creating envelopes.\nThey are only used when you upload and edit a template.\n\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/matchBox"
                        }
                    },
                    "name": {
                        "description": "The name of the document.",
                        "type": "string"
                    },
                    "order": {
                        "description": "The order in which to sort the results.\n\nValid values are: \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. ",
                        "type": "string"
                    },
                    "pages": {
                        "description": "The number of pages in the document. This property is read-only.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "pdfFormFieldOption": {
                        "description": "",
                        "type": "string"
                    },
                    "remoteUrl": {
                        "description": "The file ID from the cloud storage service where\nthe document is located. This information is\nreturned using\n[CloudStorage: listFolders](/docs/esign-rest-api/reference/cloudstorage/cloudstorage/listfolders/) or\n[CloudStorage: list](/docs/esign-rest-api/reference/cloudstorage/cloudstorage/list/).\n",
                        "type": "string"
                    },
                    "signerMustAcknowledge": {
                        "description": "Sets how the signer interacts with the supplemental document.\nValid values:\n\n* `no_interaction`<br>\n  No recipient action is required.\n\n* `view`<br>\n  The recipient is required to view the document.\n\n* `accept`<br>\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.\n\n* `view_accept`<br>\n  The recipient is required to view and accept the document.\n\n",
                        "type": "string"
                    },
                    "signerMustAcknowledgeUseAccountDefault": {
                        "description": "When **true,** the account default setting for the required recipient option is used. If this property is set, `signerMustAcknowledge` cannot be set (and vice versa).",
                        "type": "boolean"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "transformPdfFields": {
                        "description": "When **true,** PDF form field data is transformed into document tab values when the PDF form field name matches the DocuSign custom tab tabLabel. The resulting PDF form data is also returned in the PDF meta data when requesting the document PDF.\n",
                        "type": "string"
                    },
                    "uri": {
                        "description": "A URI containing the user ID.",
                        "type": "string"
                    }
                },
                "description": "A document object.",
                "x-ds-definition-name": "document",
                "x-ms-summary": "A document object."
            },
            "documentFieldsInformation": {
                "type": "object",
                "properties": {
                    "documentFields": {
                        "description": "The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \n\n* `name`: A string that can be a maximum of 50 characters. \n* `value`: A string that can be a maximum of 200 characters.\n\nIf you are using XML, the name/value pair is contained in a `nameValue` element. \n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    }
                },
                "x-ds-definition-name": "documentFieldsInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "documentHtmlCollapsibleDisplaySettings": {
                "type": "object",
                "properties": {
                    "arrowClosed": {
                        "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the closed state.\n\nOne of the following:\n\n- `up`: In the closed state, the disclosure arrow points up.\n- `down`: In the closed state, the disclosure arrow points down.\n- `left`: In the closed state, the disclosure arrow points left.\n- `right`: In the closed state, the disclosure arrow points right.\n",
                        "type": "string"
                    },
                    "arrowColor": {
                        "description": "A CSS color value (such as `#DCF851`) that indicates the color of the arrow.\n",
                        "type": "string"
                    },
                    "arrowLocation": {
                        "description": "The location of the arrow relative to the collapsible section's label. Possible values are:\n\n- `right` (default)\n- `left`\n",
                        "type": "string"
                    },
                    "arrowOpen": {
                        "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the open state.\n\nOne of the following:\n\n- `up`: In the open state, the disclosure arrow points up.\n- `down`: In the open state, the disclosure arrow points down.\n- `left`: In the open state, the disclosure arrow points left.\n- `right`: In the open state, the disclosure arrow points right.\n",
                        "type": "string"
                    },
                    "arrowSize": {
                        "description": "Indicates the size of the collapsible arrows. Possible values are:\n\n- `small`\n- `large` (default)\n",
                        "type": "string"
                    },
                    "arrowStyle": {
                        "description": "The name of the CSS style to be used on collapsible arrow section.\n",
                        "type": "string"
                    },
                    "containerStyle": {
                        "description": "The name of the CSS style to be used for the collapsible container.\n",
                        "type": "string"
                    },
                    "labelStyle": {
                        "description": "The name of the CSS style to be used for the collapsible container's label.",
                        "type": "string"
                    },
                    "onlyArrowIsClickable": {
                        "description": "When **true,** only the arrow is clickable to expand or collapse the section.\nWhen **false** (the default), both the label and the arrow are clickable.\n\nIf no arrow is used, this setting is ignored.\n",
                        "type": "boolean"
                    },
                    "outerLabelAndArrowStyle": {
                        "description": "The name of the CSS style to be used for the collapsible container's outer label and arrow style.",
                        "type": "string"
                    }
                },
                "description": "Display settings for collapsible section.",
                "x-ds-definition-name": "documentHtmlCollapsibleDisplaySettings",
                "x-ms-summary": "Display settings for collapsible section."
            },
            "documentHtmlDefinition": {
                "type": "object",
                "properties": {
                    "displayAnchorPrefix": {
                        "description": "Contains text that all display anchors must start with. Using at least four characters will improve anchor processing performance.",
                        "type": "string"
                    },
                    "displayAnchors": {
                        "description": "An object that defines how to handle a section of the HTML in signing. This property enables an incoming request to make a section of the HTML collapsible and expandable or hidden from view.\n\nA start anchor, end anchor, or both are required.\nIf the anchors are not found, the display anchor will be ignored.\n\nFor a list of the available types, see the\n[`display` property](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_documents_htmldefinition_displayanchors_displaysettings_display)\nof the\n[`displaySettings` object.](/docs/esign-rest-api/reference/envelopes/envelopes/create/#schema__envelopedefinition_documents_htmldefinition_displayanchors_displaysettings)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentHtmlDisplayAnchor"
                        }
                    },
                    "displayOrder": {
                        "description": "The position on the page where the display section appears.",
                        "type": "string"
                    },
                    "displayPageNumber": {
                        "description": "The number of the page on which the display section appears.",
                        "type": "string"
                    },
                    "documentGuid": {
                        "description": "The GUID of the document.",
                        "type": "string"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "headerLabel": {
                        "description": "Header text or an HTML tag to place above the responsive HTML block.",
                        "type": "string"
                    },
                    "maxScreenWidth": {
                        "description": "If set, the responsive HTML version of the signing document will only display on screens with the specified pixel width or less. If the screen is larger than the value that you specify, the default PDF version of the content displays instead.\n\nThis setting can also be configured at the account level.\n",
                        "type": "string"
                    },
                    "removeEmptyTags": {
                        "description": "Holds a comma-separated list of HTML tags to remove if they have no text within their node (including child nodes).",
                        "type": "string"
                    },
                    "showMobileOptimizedToggle": {
                        "description": "When **true** (the default), the **Mobile-Friendly** toggle displays at the top of the screen on the user's mobile device. When **false,** the toggle will not be displayed.\n\nthe **Mobile-Friendly** toggle lets the user switch between the mobile-friendly and the PDF versions of a document. For example, the recipient can use this toggle to review the document using the PDF view before they finish signing.\n",
                        "type": "string"
                    },
                    "source": {
                        "description": "Specifies the type of responsive signing that will be used with the document.\n\nIf the value of this property is valid HTML,\nand the [smart sections feature][] is enabled,\nthe HTML code is used to display the signing page:\n\n```\nsource: \"<html> ... <body><p>hello world</p></body></html>\"\n```\n\nIf the value of this property is the string `document`,\nthe HTML signing page is generated from the provided document.\n\n```\nsource: \"document\"\n```\n\n**Related topics**\n\n- [How to create a signable HTML document](/docs/esign-rest-api/how-to/creating-signable-html/)\n- [How to convert a PDF file into a signable HTML document](/docs/esign-rest-api/how-to/converting-pdf/)\n- [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\n\n\n[smart sections feature]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=qlx1578456478178.html",
                        "type": "string"
                    }
                },
                "description": "Holds the properties that define how to generate the responsive-formatted HTML for the document.\nSee [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\nin the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/).",
                "x-ds-definition-name": "documentHtmlDefinition",
                "x-ms-summary": "Holds the properties that define how to generate the responsive-formatted HTML for the document.\nSee [Responsive signing](/docs/esign-rest-api/esign101/concepts/responsive/)\nin the [eSignature concepts guide](/docs/esign-rest-api/esign101/concepts/)."
            },
            "documentHtmlDefinitionOriginal": {
                "type": "object",
                "properties": {
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdGuid": {
                        "description": "The GUID of the document.",
                        "type": "string"
                    },
                    "htmlDefinition": {
                        "$ref": "#/components/schemas/documentHtmlDefinition"
                    }
                },
                "x-ds-definition-name": "documentHtmlDefinitionOriginal",
                "description": "",
                "x-ms-summary": ""
            },
            "documentHtmlDefinitionOriginals": {
                "type": "object",
                "properties": {
                    "htmlDefinitions": {
                        "description": "Holds the properties that define how to generate the responsive-formatted HTML for the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentHtmlDefinitionOriginal"
                        }
                    }
                },
                "x-ds-definition-name": "documentHtmlDefinitionOriginals",
                "description": "",
                "x-ms-summary": ""
            },
            "documentHtmlDefinitions": {
                "type": "object",
                "properties": {
                    "htmlDefinitions": {
                        "description": "Holds the properties that define how to generate the responsive-formatted HTML for the document.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-ds-definition-name": "documentHtmlDefinitions",
                "description": "",
                "x-ms-summary": ""
            },
            "documentHtmlDisplayAnchor": {
                "type": "object",
                "properties": {
                    "caseSensitive": {
                        "description": "When **true,** the start or end anchor strings must match the strings specified by the start and end anchor settings in case as well as in content.",
                        "type": "boolean"
                    },
                    "displaySettings": {
                        "$ref": "#/components/schemas/documentHtmlDisplaySettings"
                    },
                    "endAnchor": {
                        "description": "Specifies the end of the area in the HTML where the display settings will be applied. If you do not specify an end anchor, the end of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
                        "type": "string"
                    },
                    "removeEndAnchor": {
                        "description": "When **true,** removes the end anchor string for the Smart Section from the HTML, preventing it from displaying.",
                        "type": "boolean"
                    },
                    "removeStartAnchor": {
                        "description": "When **true,** removes the start anchor string for the Smart Section from the HTML, preventing it from displaying.",
                        "type": "boolean"
                    },
                    "startAnchor": {
                        "description": "Specifies the beginning of the area in the HTML where the display settings will be applied. If you do not specify a start anchor, the beginning of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "documentHtmlDisplayAnchor",
                "description": "",
                "x-ms-summary": ""
            },
            "documentHtmlDisplaySettings": {
                "type": "object",
                "properties": {
                    "cellStyle": {
                        "description": "Specifies the valid CSS-formatted styles to use on responsive table cells. Only valid in display sections of `responsive_table` or `responsive_table_single_column` types.",
                        "type": "string"
                    },
                    "collapsibleSettings": {
                        "$ref": "#/components/schemas/documentHtmlCollapsibleDisplaySettings"
                    },
                    "display": {
                        "description": "Sets the display and behavior properties. Possible  values are:\n\n- `inline`:\n  Leaves the HTML where it is in the document.\n  This property lets you add a label or present on a separate page.\n\n- `collapsible`:\n  The HTML in this section may be expanded or collapsed.\n  Initially this section is expanded.\n\n- `collapsed`:\n  The HTML in this section may be expanded or collapsed.\n  Initially this section is collapsed.\n\n- `continue_button`:\n  Creates a stop point in the document to draw the reader's\n  attention before proceeding to the next section.\n\n- `responsive_table`:\n  Turns this section into a responsive table.\n  Note that this is only used on HTML tables that fall within the anchor start and end positions.\n\n- `responsive_table_single_column`:\n  Turns this section into a responsive single-column table.\n  Note this is only used on HTML tables that fall within the anchor start and end positions.\n  The table will be converted to one single column where each current column will become a row, then stacked.\n\n- `print_only`:\n  Do not show this portion of the HTML in the responsive signing view.\n\n\n",
                        "type": "string"
                    },
                    "displayLabel": {
                        "description": "The label to add to this display section in the signing page.\n",
                        "type": "string"
                    },
                    "displayOrder": {
                        "format": "int32",
                        "description": "The position on the page where the display section appears.",
                        "type": "integer"
                    },
                    "displayPageNumber": {
                        "format": "int32",
                        "description": "The number of the page on which the display section appears.",
                        "type": "integer"
                    },
                    "hideLabelWhenOpened": {
                        "description": "When **true,** the `displayLabel` is hidden when the display section is expanded and the display section is no longer collapsible. This property is valid only when the value of the `display` property is `collapsed`.",
                        "type": "boolean"
                    },
                    "inlineOuterStyle": {
                        "description": "Specifies the valid CSS-formatted styles to use on inline display sections. This property is valid only when the value of the `display` property is `inline`.",
                        "type": "string"
                    },
                    "labelWhenOpened": {
                        "description": "The label for the display section when it is expanded from a collapsed state. This label displays only on the first opening and is only valid with the value of the `display` property is `collapsed`.",
                        "type": "string"
                    },
                    "preLabel": {
                        "description": "Enables you to add descriptive text that appears before a collapsed section or continue button.",
                        "type": "string"
                    },
                    "scrollToTopWhenOpened": {
                        "description": "When **true** and the section is expanded,\nthe position of the section-close control\nscrolls to the top of the screen. This property is only valid when the value of the `display` property is `collapsed`.\n",
                        "type": "boolean"
                    },
                    "tableStyle": {
                        "description": "Specifies the valid CSS-formatted styles to use on responsive tables. This property is valid only when the value of the `display` property is `responsive_table` or `responsive_table_single_column`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "documentHtmlDisplaySettings",
                "description": "This object defines how to display the HTML\nbetween the `startAnchor` and `endAnchor`.",
                "x-ms-summary": "This object defines how to display the HTML\nbetween the `startAnchor` and `endAnchor`."
            },
            "documentTemplate": {
                "type": "object",
                "properties": {
                    "documentEndPage": {
                        "description": "",
                        "type": "string"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentStartPage": {
                        "description": "",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "templateId": {
                        "description": "The unique identifier of the template. If this is not provided, DocuSign generates an error and the call fails.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "documentTemplate",
                "description": "",
                "x-ms-summary": ""
            },
            "documentTemplateList": {
                "type": "object",
                "properties": {
                    "documentTemplates": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentTemplate"
                        }
                    }
                },
                "x-ds-definition-name": "documentTemplateList",
                "description": "",
                "x-ms-summary": ""
            },
            "documentVisibility": {
                "type": "object",
                "properties": {
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the document visibility setting is applied. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "rights": {
                        "description": "Indicates whether the document is editable:\n\n- `editable`\n- `read_only`",
                        "type": "string"
                    },
                    "visible": {
                        "description": "When **true,** the document is visible to the recipient.",
                        "type": "string"
                    }
                },
                "description": "This object configures a recipient's read/write access to a document.",
                "x-ds-definition-name": "documentVisibility",
                "x-ms-summary": "This object configures a recipient's read/write access to a document."
            },
            "documentVisibilityList": {
                "type": "object",
                "properties": {
                    "documentVisibility": {
                        "description": "An array of `documentVisibility` objects that specifies which documents are visible to which recipients.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    }
                },
                "description": "A list of `documentVisibility` objects that specify whether documents are visible to recipients.",
                "x-ds-definition-name": "documentVisibilityList",
                "x-ms-summary": "A list of `documentVisibility` objects that specify whether documents are visible to recipients."
            },
            "downgradeBillingPlanInformation": {
                "type": "object",
                "properties": {
                    "downgradeEventType": {
                        "description": "",
                        "type": "string"
                    },
                    "planInformation": {
                        "$ref": "#/components/schemas/planInformation"
                    },
                    "promoCode": {
                        "description": "",
                        "type": "string"
                    },
                    "saleDiscount": {
                        "description": "",
                        "type": "string"
                    },
                    "saleDiscountPeriods": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountType": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "downgradeBillingPlanInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "downgradePlanUpdateResponse": {
                "type": "object",
                "properties": {
                    "accountPaymentMethod": {
                        "description": "The type of payment method used for the account. Valid values are:\n\n- `credit_card`\n- ",
                        "type": "string"
                    },
                    "discountApplied": {
                        "description": "",
                        "type": "string"
                    },
                    "downgradeEffectiveDate": {
                        "description": "",
                        "type": "string"
                    },
                    "downgradePaymentCycle": {
                        "description": "",
                        "type": "string"
                    },
                    "downgradePlanId": {
                        "description": "",
                        "type": "string"
                    },
                    "downgradePlanName": {
                        "description": "",
                        "type": "string"
                    },
                    "downgradeRequestStatus": {
                        "description": "",
                        "type": "string"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    },
                    "productId": {
                        "description": "The Product ID from the AppStore.",
                        "type": "string"
                    },
                    "promoCode": {
                        "description": "",
                        "type": "string"
                    },
                    "saleDiscount": {
                        "description": "",
                        "type": "string"
                    },
                    "saleDiscountPeriods": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountType": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "downgradePlanUpdateResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "downgradeRequestInformation": {
                "type": "object",
                "properties": {
                    "downgradeRequestCreation": {
                        "description": "",
                        "type": "string"
                    },
                    "downgradeRequestProductId": {
                        "description": "",
                        "type": "string"
                    },
                    "downgradeRequestStatus": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "downgradeRequestInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "downgradRequestBillingInfoResponse": {
                "type": "object",
                "properties": {
                    "downgradePlanInformation": {
                        "$ref": "#/components/schemas/downgradePlanUpdateResponse"
                    },
                    "paymentMethod": {
                        "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "downgradRequestBillingInfoResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "draw": {
                "type": "object",
                "properties": {
                    "allowSignerUpload": {
                        "description": "When **true,** the recipient can upload an image to use as the background of the drawing field. The default value is **false.**",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "useBackgroundAsCanvas": {
                        "description": "",
                        "type": "string"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to add a free-form drawing to the document.",
                "x-ds-definition-name": "draw",
                "x-ms-summary": "A tab that allows the recipient to add a free-form drawing to the document."
            },
            "editor": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "consentDetailsList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentDetails"
                        }
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The recipient's email address. Notification of the document to sign is sent to this email address. \n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "emailRecipientPostSigningURL": {
                        "description": "",
                        "type": "string"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "firstName": {
                        "description": "The recipient's first name. \n\nMaximum Length: 50 characters.",
                        "type": "string"
                    },
                    "firstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fullName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fullNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The recipient's last name.",
                        "type": "string"
                    },
                    "lastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.\n",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "The code associated with the recipient's status. This property is read-only.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "description": "A complex type defining the management and access rights of a recipient assigned as an editor on the envelope. Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and text tabs for the remaining recipients.",
                "x-ds-definition-name": "editor",
                "x-ms-summary": "A complex type defining the management and access rights of a recipient assigned as an editor on the envelope. Editors have the same management and access rights for the envelope as the sender. They can make changes to the envelope as if they were using the Correct feature. This recipient can add name and email information, add or change the routing order and set authentication options for the remaining recipients. Additionally, this recipient can edit signature/initial tabs and text tabs for the remaining recipients."
            },
            "email": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderRequired": {
                        "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                        "type": "string"
                    },
                    "senderRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationMessageMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationPattern": {
                        "description": "A regular expression used to validate input for the tab.",
                        "type": "string"
                    },
                    "validationPatternMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n",
                "x-ds-definition-name": "email",
                "x-ms-summary": "A tab that allows the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n"
            },
            "emailAddress": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "**Note:** Email Address tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that displays the recipient's email as entered in the\nrecipient information.\n",
                "x-ds-definition-name": "emailAddress",
                "x-ms-summary": "A tab that displays the recipient's email as entered in the\nrecipient information.\n"
            },
            "emailSettings": {
                "description": "A complex element that allows  the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent. \n\nWhen the emailSettings information is used for an envelope, it only applies to that envelope. \n\n**IMPORTANT:** The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings. \n\nEmailSettings consists of: \n\n* replyEmailAddressOverride - The Reply To email used for the envelope. DocuSign will verify that a correct email format is used, but does not verify that the email is active. Maximum Length: 100 characters.\n* replyEmailNameOverride - The name associated with the Reply To email address. Maximum Length: 100 characters.\n* bccEmailAddresses - An array of up to five email addresses to which the envelope is sent to as a BCC email. Only users with canManageAccount setting set to true can use this option. \nDocuSign verifies that the email format is correct, but does not verify that the email is active. Using this overrides the BCC for Email Archive information setting for this envelope. Maximum Length: 100 characters.\n*Example*: if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address.",
                "type": "object",
                "properties": {
                    "bccEmailAddresses": {
                        "description": "An array containing the email address that should receive a copy of all email communications related to an envelope for archiving purposes. Maximum Length: 100 characters.\n\nWhile this property is an array, note that it takes only a single email address.\n\n**Note:** Only users with the `canManageAccount` setting set to **true** can use this option. \n\nDocuSign verifies that the email format is correct, but does not verify that the email address is active. You can use this for archiving purposes. However, using this property overrides the BCC for Email Archive information setting for this envelope. \n\n**Example:** if your account has BCC for Email Archive set up for the email address archive@mycompany.com and you send an envelope using the BCC Email Override to send a BCC email to salesarchive@mycompany.com, then a copy of the envelope is only sent to the salesarchive@mycompany.com email address.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bccEmailAddress"
                        }
                    },
                    "replyEmailAddressOverride": {
                        "description": "The Reply To email address to use for email replies, instead of the one that is configured at the account level. DocuSign verifies that the email address is in a correct format, but does not verify that it is active. Maximum Length: 100 characters.",
                        "type": "string"
                    },
                    "replyEmailNameOverride": {
                        "description": "The name to associate with the Reply To email address, instead of the name that is configured at the account level. Maximum Length: 100 characters.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "emailSettings",
                "x-ms-summary": "A complex element that allows  the sender to override some envelope email setting information. This can be used to override the Reply To email address and name associated with the envelope and to override the BCC email addresses to which an envelope is sent. \n\nWhen the emailSettings information is used for an envelope, it only applies to that envelope. \n\n**IMPORTANT:** The emailSettings information is not returned in the GET for envelope status. Use GET /email_settings to return information about the emailSettings. \n\nEmailSettings consists of: \n\n* replyEmailAddressOverride - The Reply To email used for the envelope. DocuSign will verify that a correct email format is used, but does not verify that the email is active. Maximum Length: 100 characters.\n* replyEmailNameOverride - The name associated with the Reply To email address. Maximum Length: 100 characters.\n* bccEmailAddresses - An array of up to five email addresses to which the envelope is sent to as a BCC email. Only users with canManageAccount setting set to true can use this option. \nDocuSign verifies that the email format is correct, but does not verify that the email is active. Using this overrides the BCC for Email Archive information setting for this envelope. Maximum Length: 100 characters.\n*Example*: if your account has BCC for Email Archive set up for the email address 'archive@mycompany.com' and you send an envelope using the BCC Email Override to send a BCC email to 'salesarchive@mycompany.com', then a copy of the envelope is only sent to the 'salesarchive@mycompany.com' email address."
            },
            "eNoteConfiguration": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "description": "",
                        "type": "string"
                    },
                    "connectConfigured": {
                        "description": "When **false,** the user must configure Connect and eOriginal for the integration to work.",
                        "type": "string"
                    },
                    "eNoteConfigured": {
                        "description": "When **false,** the user must configure eNote for the feature to work.\n\n**Note:** In the account settings, `allowENoteEOriginal` must be **true**\nto make changes to the configuration.",
                        "type": "string"
                    },
                    "organization": {
                        "description": "The name of the organization.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The user's username.",
                        "type": "string"
                    }
                },
                "description": "This object contains information used to\nconfigure [eNote][eNote] functionality.\nTo use eNote, the Allow eNote for eOriginal account plan item must be on,\nand the Connect configuration for eOriginal must be set correctly.\n\n[eNote]: https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=tsn1583277394951.html\n",
                "x-ds-definition-name": "eNoteConfiguration",
                "x-ms-summary": "This object contains information used to\nconfigure [eNote][eNote] functionality.\nTo use eNote, the Allow eNote for eOriginal account plan item must be on,\nand the Connect configuration for eOriginal must be set correctly.\n\n[eNote]: https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=tsn1583277394951.html\n"
            },
            "envelope": {
                "type": "object",
                "properties": {
                    "accessControlListBase64": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "allowComments": {
                        "description": "When **true,** users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.",
                        "type": "string"
                    },
                    "allowMarkup": {
                        "description": "When **true,** the Document Markup feature is enabled.\n\n**Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.\n",
                        "type": "string"
                    },
                    "allowReassign": {
                        "description": "When **true,** the recipient can redirect an envelope to a more appropriate recipient.",
                        "type": "string"
                    },
                    "allowViewHistory": {
                        "description": "When **true,** recipients can view the history of the envelope.",
                        "type": "string"
                    },
                    "anySigner": {
                        "description": "Deprecated. This feature has been replaced by signing groups.",
                        "type": "string"
                    },
                    "asynchronous": {
                        "description": "When **true,** the envelope is queued for\nprocessing and the value of the `status` property\nis set to `Processing`. Additionally, GET status\ncalls return `Processing` until completed.\n\n\n**Note:** A `transactionId` is required for this\ncall to work correctly. When the envelope is\ncreated, the status is `Processing` and an\n`envelopeId` is not returned in the response. To\nget the `envelopeId`, use a GET envelope query by\nusing the\n[transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the\nConnect notification.",
                        "type": "string"
                    },
                    "attachmentsUri": {
                        "description": "Contains a URL for retrieving the attachments that are associated with the envelope.",
                        "type": "string"
                    },
                    "authoritativeCopy": {
                        "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
                        "type": "string"
                    },
                    "authoritativeCopyDefault": {
                        "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
                        "type": "string"
                    },
                    "autoNavigation": {
                        "description": "When **true,** autonavigation is set for the recipient.\n",
                        "type": "string"
                    },
                    "brandId": {
                        "description": "The ID of the brand.",
                        "type": "string"
                    },
                    "brandLock": {
                        "description": "When **true,** the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.",
                        "type": "string"
                    },
                    "burnDefaultTabData": {
                        "description": "",
                        "type": "string"
                    },
                    "certificateUri": {
                        "description": "The URI for retrieving certificate information.",
                        "type": "string"
                    },
                    "completedDateTime": {
                        "description": "Specifies the date and time this item was completed.",
                        "type": "string"
                    },
                    "copyRecipientData": {
                        "description": "",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "customFields": {
                        "$ref": "#/components/schemas/AccountCustomFields"
                    },
                    "customFieldsUri": {
                        "description": "The URI for retrieving custom fields.",
                        "type": "string"
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deletedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "disableResponsiveDocument": {
                        "description": "When **true,** responsive documents are disabled for the envelope.",
                        "type": "string"
                    },
                    "documentBase64": {
                        "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
                        "type": "string"
                    },
                    "documentsCombinedUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as a single PDF file.",
                        "type": "string"
                    },
                    "documentsUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as separate files.",
                        "type": "string"
                    },
                    "emailBlurb": {
                        "description": "This is the same as the email body. If specified it is included in email body for all envelope recipients.",
                        "type": "string"
                    },
                    "emailSettings": {
                        "$ref": "#/components/schemas/emailSettings"
                    },
                    "emailSubject": {
                        "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
                        "type": "string"
                    },
                    "enableWetSign": {
                        "description": "When **true,** the signer is allowed to print the document and sign it on paper.",
                        "type": "string"
                    },
                    "enforceSignerVisibility": {
                        "description": "When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.\n\n**Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**\n\n[docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/",
                        "type": "string"
                    },
                    "envelopeAttachments": {
                        "description": "An array of attachment objects that provide information about the attachments that are associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attachment"
                        }
                    },
                    "envelopeCustomMetadata": {
                        "$ref": "#/components/schemas/envelopeCustomMetadata"
                    },
                    "envelopeDocuments": {
                        "description": "An array containing information about the documents that are included in the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument"
                        }
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "envelopeIdStamping": {
                        "description": "When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.\nAfter a document or attachment is stamped with an Envelope ID,\nthe ID is seen by all recipients\nand becomes a permanent part of the document\nand cannot be removed.",
                        "type": "string"
                    },
                    "envelopeLocation": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "envelopeMetadata": {
                        "$ref": "#/components/schemas/envelopeMetadata"
                    },
                    "envelopeUri": {
                        "description": "The URI for retrieving the envelope or envelopes.",
                        "type": "string"
                    },
                    "expireAfter": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "expireDateTime": {
                        "description": "The date and time that the envelope is set to expire. This value is determined by the `InitialSentDateTime` of the envelope and the `expireAfter` property of the `notification` object. (Note that the `expireAfter` property of the envelope itself is not used.)\n",
                        "type": "string"
                    },
                    "expireEnabled": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "externalEnvelopeId": {
                        "description": "May contain an external identifier for the envelope.",
                        "type": "string"
                    },
                    "folders": {
                        "description": "A list of folder objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "hasComments": {
                        "description": "When **true,** indicates that users have added comments to the envelope.",
                        "type": "string"
                    },
                    "hasFormDataChanged": {
                        "description": "When **true,** indicates that the data collected through form fields on a document has changed.",
                        "type": "string"
                    },
                    "hasWavFile": {
                        "description": "When **true,** indicates that a .wav file used for voice authentication is included in the envelope. ",
                        "type": "string"
                    },
                    "holder": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "initialSentDateTime": {
                        "description": "The date and time the envelope was initially sent.",
                        "type": "string"
                    },
                    "is21CFRPart11": {
                        "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
                        "type": "string"
                    },
                    "isDynamicEnvelope": {
                        "description": "When **true,** indicates that the envelope is a dynamic envelope.",
                        "type": "string"
                    },
                    "isSignatureProviderEnvelope": {
                        "description": "When **true,** indicates that the envelope is a signature-provided envelope.",
                        "type": "string"
                    },
                    "lastModifiedDateTime": {
                        "description": "The date and time that the item was last modified.",
                        "type": "string"
                    },
                    "location": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockInformation": {
                        "$ref": "#/components/schemas/EnvelopeLocks"
                    },
                    "messageLock": {
                        "description": "When **true,** prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
                        "type": "string"
                    },
                    "notification": {
                        "$ref": "#/components/schemas/notification"
                    },
                    "notificationUri": {
                        "description": "The URI for retrieving notifications.",
                        "type": "string"
                    },
                    "powerForm": {
                        "$ref": "#/components/schemas/powerForm"
                    },
                    "purgeCompletedDate": {
                        "description": "The date that a purge was completed.",
                        "type": "string"
                    },
                    "purgeRequestDate": {
                        "description": "The date that a purge was requested.",
                        "type": "string"
                    },
                    "purgeState": {
                        "description": "Shows the current purge state for the envelope. Valid values:\n\n- `unpurged`: There has been no successful request to purge documents.\n- `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n- `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n- `documents_purged`: The envelope documents have been successfully purged.\n- `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n- `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n- `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.\n- `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.\n\n**Related topics**\n\n- [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)\n- [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)\n\n",
                        "type": "string"
                    },
                    "recipients": {
                        "$ref": "#/components/schemas/EnvelopeRecipients"
                    },
                    "recipientsLock": {
                        "description": "When **true,** prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
                        "type": "string"
                    },
                    "recipientsUri": {
                        "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                        "type": "string"
                    },
                    "sender": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signerCanSignOnMobile": {
                        "description": "When **true,** recipients can sign on a mobile device.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signingLocation": {
                        "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.\n* `created`: The envelope is created as a draft. It can be modified and sent later.\n* `declined`: The envelope has been declined by the recipients.\n* `delivered`: The envelope has been delivered to the recipients.\n* `sent`: The envelope will be sent to the recipients after the envelope is created.\n* `signed`: The envelope has been signed by the recipients.\n* `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
                        "type": "string"
                    },
                    "statusChangedDateTime": {
                        "description": "The data and time that the status changed.",
                        "type": "string"
                    },
                    "statusDateTime": {
                        "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
                        "type": "string"
                    },
                    "templatesUri": {
                        "description": "The URI for retrieving the templates.",
                        "type": "string"
                    },
                    "transactionId": {
                        "description": " Used to identify an envelope.\n\n The ID is a sender-generated value and is valid in the DocuSign system for 7 days.\n It is recommended that a transaction ID is used for offline\n signing to ensure that an envelope is not sent multiple times.\n The `transactionId` property can be used determine an envelope's\n status (i.e. was it created or not) in cases where the internet c\n onnection was lost before the envelope status was returned.",
                        "type": "string"
                    },
                    "useDisclosure": {
                        "description": "When **true,** the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When **false,** the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
                        "type": "string"
                    },
                    "voidedDateTime": {
                        "description": "The date and time the envelope or template was voided.",
                        "type": "string"
                    },
                    "voidedReason": {
                        "description": "The reason the envelope or template was voided.\n\n**Note:** The string is truncated to the first 200 characters.\n",
                        "type": "string"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/workflow"
                    }
                },
                "x-ds-definition-name": "envelope",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeAttachment": {
                "type": "object",
                "properties": {
                    "accessControl": {
                        "description": "Valid values are `sender` and `senderAndAllRecipients`.",
                        "type": "string"
                    },
                    "attachmentId": {
                        "description": "The unique identifier for the attachment.",
                        "type": "string"
                    },
                    "attachmentType": {
                        "description": "Specifies the type of the attachment for the recipient. Possible values are:\n\n- `.htm`\n- `.xml`",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "label": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "envelopeAttachment",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeAttachmentsRequest": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "description": "An object that contains information about the attachment.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attachment"
                        }
                    }
                },
                "x-ds-definition-name": "envelopeAttachmentsRequest",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeAttachmentsResult": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "description": "An array of attachment objects that contain information about the attachments.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeAttachment"
                        }
                    }
                },
                "x-ds-definition-name": "envelopeAttachmentsResult",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeAuditEvent": {
                "type": "object",
                "properties": {
                    "eventFields": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    }
                },
                "x-ds-definition-name": "envelopeAuditEvent",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeAuditEventResponse": {
                "type": "object",
                "properties": {
                    "auditEvents": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeAuditEvent"
                        }
                    }
                },
                "x-ds-definition-name": "envelopeAuditEventResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeCustomMetadata": {
                "type": "object",
                "properties": {
                    "envelopeCustomMetadataDetails": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    }
                },
                "x-ds-definition-name": "envelopeCustomMetadata",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeDefinition": {
                "type": "object",
                "properties": {
                    "accessControlListBase64": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "accessibility": {
                        "description": "Sets the document reading zones for screen reader applications.  This element can only be used if Document Accessibility is enabled for the account.\n\n**Note:** This information is currently generated from the DocuSign web console by setting the reading zones when creating a template, exporting the reading zone string information, and adding it here.",
                        "type": "string"
                    },
                    "allowComments": {
                        "description": "When **true,** comments are allowed on the envelope.",
                        "type": "string"
                    },
                    "allowMarkup": {
                        "description": "When **true,** the Document Markup feature is enabled.\n\n**Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.\n",
                        "type": "string"
                    },
                    "allowReassign": {
                        "description": "When **true,** the recipient can redirect an envelope to a more appropriate recipient.",
                        "type": "string"
                    },
                    "allowRecipientRecursion": {
                        "description": "When **true,** this enables the Recursive Recipients feature and allows a recipient to appear more than once in the routing order.",
                        "type": "string"
                    },
                    "allowViewHistory": {
                        "description": "When **true,** users can view the history of the envelope.",
                        "type": "string"
                    },
                    "anySigner": {
                        "description": "Deprecated. This feature has been replaced by signing groups.",
                        "type": "string"
                    },
                    "asynchronous": {
                        "description": "When **true,** the envelope is queued for\nprocessing and the value of the `status` property\nis set to `Processing`. Additionally, GET status\ncalls return `Processing` until completed.\n\n\n**Note:** A `transactionId` is required for this\ncall to work correctly. When the envelope is\ncreated, the status is `Processing` and an\n`envelopeId` is not returned in the response. To\nget the `envelopeId`, use a GET envelope query by\nusing the\n[transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the\nConnect notification.",
                        "type": "string"
                    },
                    "attachments": {
                        "description": "An array of attachment objects containing details about any envelope attachments.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attachment"
                        }
                    },
                    "attachmentsUri": {
                        "description": "The URI for retrieving the envelope attachments.",
                        "type": "string"
                    },
                    "authoritativeCopy": {
                        "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
                        "type": "string"
                    },
                    "authoritativeCopyDefault": {
                        "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
                        "type": "string"
                    },
                    "autoNavigation": {
                        "description": "When **true,** autonavigation is set for the recipient.\n",
                        "type": "string"
                    },
                    "brandId": {
                        "description": "The ID of the brand, or text and formatting, to use for the envelope. To use brands, account branding must be enabled for the account.\n\n**Note:** When creating an envelope using a branded template, include this value to ensure that the brand is applied.",
                        "type": "string"
                    },
                    "brandLock": {
                        "description": "When **true,** the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.",
                        "type": "string"
                    },
                    "burnDefaultTabData": {
                        "description": "",
                        "type": "string"
                    },
                    "certificateUri": {
                        "description": "The URI for retrieving certificate information.",
                        "type": "string"
                    },
                    "completedDateTime": {
                        "description": "The date and time that the envelope was completed.",
                        "type": "string"
                    },
                    "compositeTemplates": {
                        "description": "A complex type that can be added to create envelopes from a combination of DocuSign templates and PDF forms. The basic envelope remains the same, while the Composite Template adds new document and template overlays into the envelope. There can be any number of Composite Template structures in the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/compositeTemplate"
                        }
                    },
                    "copyRecipientData": {
                        "description": "This value is only applicable when copying an existing envelope. Provide the ID of the envelope to clone in `envelopeId`.\n\nWhen **true,** the recipient field values of the existing envelope are included. Only values from data entry fields, like checkboxes and radio buttons, will be copied. Fields that require an action, like signatures and initials, will not be included.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The date and time that the envelope was created.",
                        "type": "string"
                    },
                    "customFields": {
                        "$ref": "#/components/schemas/AccountCustomFields"
                    },
                    "customFieldsUri": {
                        "description": "The URI for retrieving custom fields.",
                        "type": "string"
                    },
                    "declinedDateTime": {
                        "description": "The date and time that the recipient declined the envelope.",
                        "type": "string"
                    },
                    "deletedDateTime": {
                        "description": "The date and time that the envelope was deleted.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "disableResponsiveDocument": {
                        "description": "When **true,** the responsive document feature is turned off for the envelope.",
                        "type": "string"
                    },
                    "documentBase64": {
                        "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
                        "type": "string"
                    },
                    "documents": {
                        "description": "A complex element that contains details about the documents associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/document"
                        }
                    },
                    "documentsCombinedUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as a single PDF file.",
                        "type": "string"
                    },
                    "documentsUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as separate files.",
                        "type": "string"
                    },
                    "emailBlurb": {
                        "description": "This optional element holds the body of the email message that is sent to all envelope recipients. \n\nMaximum Length: 10000 characters.",
                        "type": "string"
                    },
                    "emailSettings": {
                        "$ref": "#/components/schemas/emailSettings"
                    },
                    "emailSubject": {
                        "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
                        "type": "string"
                    },
                    "enableWetSign": {
                        "description": "When **true,** the signer is allowed to print the document and sign it on paper.",
                        "type": "string"
                    },
                    "enforceSignerVisibility": {
                        "description": "When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.\n\n**Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**\n\n[docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/",
                        "type": "string"
                    },
                    "envelopeAttachments": {
                        "description": "An array of attachment objects that provide information about the attachments that are associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attachment"
                        }
                    },
                    "envelopeCustomMetadata": {
                        "$ref": "#/components/schemas/envelopeCustomMetadata"
                    },
                    "envelopeDocuments": {
                        "description": "An array containing information about the documents that are included in the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument"
                        }
                    },
                    "envelopeId": {
                        "description": "The envelope ID.\n\nWhen used as a request body in [Envelopes: create](/docs/esign-rest-api/reference/envelopes/envelopes/create/), this is the ID of the envelope to clone.",
                        "type": "string"
                    },
                    "envelopeIdStamping": {
                        "description": "When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.\nAfter a document or attachment is stamped with an Envelope ID,\nthe ID is seen by all recipients\nand becomes a permanent part of the document\nand cannot be removed.",
                        "type": "string"
                    },
                    "envelopeLocation": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "envelopeMetadata": {
                        "$ref": "#/components/schemas/envelopeMetadata"
                    },
                    "envelopeUri": {
                        "description": "The URI for retrieving the envelope or envelopes.",
                        "type": "string"
                    },
                    "eventNotification": {
                        "$ref": "#/components/schemas/eventNotification"
                    },
                    "expireAfter": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "expireDateTime": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "expireEnabled": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "externalEnvelopeId": {
                        "description": "May contain an external identifier for the envelope.",
                        "type": "string"
                    },
                    "folders": {
                        "description": "An array of folders that the envelope belongs to.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "hasComments": {
                        "description": "When **true,** indicates that users have added comments to the envelope.",
                        "type": "string"
                    },
                    "hasFormDataChanged": {
                        "description": "When **true,** indicates that the form data associated with the envelope has changed since it was sent. When **false,** this property does not appear in the response.",
                        "type": "string"
                    },
                    "hasWavFile": {
                        "description": "When **true,** indicates that a wave file (voice recording) is part of the envelope.",
                        "type": "string"
                    },
                    "holder": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "initialSentDateTime": {
                        "description": "The date and time that the envelope was first sent.",
                        "type": "string"
                    },
                    "is21CFRPart11": {
                        "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
                        "type": "string"
                    },
                    "isDynamicEnvelope": {
                        "description": "When **true,** indicates that the envelope is a dynamic envelope.",
                        "type": "string"
                    },
                    "isSignatureProviderEnvelope": {
                        "description": "When **true,** indicates that the envelope is a signature-provided envelope.",
                        "type": "string"
                    },
                    "lastModifiedDateTime": {
                        "description": "The date and time that the item was last modified.",
                        "type": "string"
                    },
                    "location": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockInformation": {
                        "$ref": "#/components/schemas/EnvelopeLocks"
                    },
                    "messageLock": {
                        "description": "When **true,** prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
                        "type": "string"
                    },
                    "notification": {
                        "$ref": "#/components/schemas/notification"
                    },
                    "notificationUri": {
                        "description": "The URI for retrieving notifications.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "powerForm": {
                        "$ref": "#/components/schemas/powerForm"
                    },
                    "purgeCompletedDate": {
                        "description": "The date that a purge was completed.",
                        "type": "string"
                    },
                    "purgeRequestDate": {
                        "description": "The date that a purge was requested.",
                        "type": "string"
                    },
                    "purgeState": {
                        "description": "Initiates a purge request. Valid values are:\n\n- `documents_queued`: Places envelope documents in the purge queue.\n- `documents_and_metadata_queued`: Places envelope documents\n   and metadata in the purge queue.\n- `documents_and_metadata_and_redact_queued`: Places envelope documents\n   and metadata in the purge queue and redacts personal information.\n\n**Related topics**\n\n- [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)\n- [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)\n",
                        "type": "string"
                    },
                    "recipients": {
                        "$ref": "#/components/schemas/EnvelopeRecipients"
                    },
                    "recipientsLock": {
                        "description": "When **true,** prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
                        "type": "string"
                    },
                    "recipientsUri": {
                        "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                        "type": "string"
                    },
                    "recipientViewRequest": {
                        "$ref": "#/components/schemas/recipientViewRequest"
                    },
                    "sender": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signerCanSignOnMobile": {
                        "description": "When **true,** recipients can sign on a mobile device.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signingLocation": {
                        "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values when creating an envelope are: \n\n* `created`: The envelope is created as a draft. It can be modified and sent later.\n* `sent`: The envelope will be sent to the recipients after the envelope is created.\n\nYou can query these additional statuses once the recipients have interacted with the envelope.\n\n* `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.\n* `declined`: The envelope has been declined by the recipients.\n* `delivered`: The envelope has been delivered to the recipients.\n* `signed`: The envelope has been signed by the recipients.\n* `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
                        "type": "string"
                    },
                    "statusChangedDateTime": {
                        "description": "The data and time that the status changed.",
                        "type": "string"
                    },
                    "statusDateTime": {
                        "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
                        "type": "string"
                    },
                    "templateId": {
                        "description": "The ID of the template. If a value is not provided, DocuSign generates a value. ",
                        "type": "string"
                    },
                    "templateRoles": {
                        "description": "This object specifies the template recipients. Each `roleName` in the template must have a recipient assigned to it. This object is comprised of the following elements:\n\n* `email`: The recipient's email address.\n* `name`: The recipient's name.\n* `roleName`: The template roleName associated with the recipient.\n* `clientUserId`: An optional property that specifies whether the recipient is embedded or remote. If the `clientUserId` is not null, then the recipient is embedded. Note that if a `clientUserId` is used and the account settings `signerMustHaveAccount` or `signerMustLoginToSign` are **true,** an error is generated on sending.\n* `defaultRecipient`: Optional, When **true,** this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient.\n* `routingOrder`: This specifies the routing order of the recipient in the envelope.\n* `accessCode`: This optional element specifies the access code a recipient has to enter to validate the identity. Maximum Length: 50 characters.\n* `inPersonSignerName`: Optional. If the template role is an in-person signer, this is the full legal name of the signer. Maximum Length: 100 characters.\n* `emailNotification`: This is an optional complex element that has a role-specific `emailSubject`, `emailBody`, and `language`. It follows the same format as the `emailNotification` property for recipients.\n* `tabs`: This property enables the tab values to be specified for matching to tabs in the template.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templateRole"
                        }
                    },
                    "templatesUri": {
                        "description": "The URI for retrieving any templates associated with the envelope.",
                        "type": "string"
                    },
                    "transactionId": {
                        "description": " Used to identify an envelope. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. DocuSign recommends that you use a transaction ID for offline signing to ensure that an envelope is not sent multiple times. You can use the `transactionId` property to determine an envelope's status (i.e. was it created or not) in cases where the Internet connection was lost before the envelope status was returned.",
                        "type": "string"
                    },
                    "useDisclosure": {
                        "description": "When **true,** the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When **false,** the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
                        "type": "string"
                    },
                    "voidedDateTime": {
                        "description": "The date and time the envelope or template was voided.",
                        "type": "string"
                    },
                    "voidedReason": {
                        "description": "The reason the envelope or template was voided.\n\n**Note:** The string is truncated to the first 200 characters.\n",
                        "type": "string"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/workflow"
                    }
                },
                "description": "Envelope object definition.",
                "x-ds-definition-name": "envelopeDefinition",
                "x-ms-summary": "Envelope object definition."
            },
            "envelopeDelayRule": {
                "description": "A user-specified object that describes the envelope delay.\n\nTo indicate a relative delay, use `delay`. To indicate the exact datetime the envelope should be sent, use `resumeDate`. Only one of the two properties can be used.",
                "type": "object",
                "properties": {
                    "delay": {
                        "description": "A string timespan representing the duration of the sending delay. The timespan is in the format `d.hh:mm:ss` where `d` is the number of days, `hh` is the number of hours (measured on a 24-hour clock), `mm` is minutes, and `ss` is seconds. The maximum delay is 30 days.",
                        "type": "string"
                    },
                    "resumeDate": {
                        "description": "An ISO 8601 formatted datetime string indicating the date and time that the envelope will be sent. The specified datetime must occur in the future. It must not exceed 30 days from the time that the request is made.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "envelopeDelayRule",
                "x-ms-summary": "A user-specified object that describes the envelope delay.\n\nTo indicate a relative delay, use `delay`. To indicate the exact datetime the envelope should be sent, use `resumeDate`. Only one of the two properties can be used."
            },
            "envelopeDocument": {
                "type": "object",
                "properties": {
                    "addedRecipientIds": {
                        "description": "If recipients were added by converting form fields into tabs, their IDs appear here. This property is read-only.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "attachmentTabId": {
                        "description": "If this document is an attachment to another document in the envelope, this is the ID of the attachment tab it is associated with on the other document.",
                        "type": "string"
                    },
                    "authoritativeCopy": {
                        "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
                        "type": "string"
                    },
                    "authoritativeCopyMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "availableDocumentTypes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signatureType"
                        }
                    },
                    "containsPdfFormFields": {
                        "description": "When **true,** the document has editable form fields that are made available through a PDF format.",
                        "type": "string"
                    },
                    "display": {
                        "description": "This string sets the display and behavior properties of\nthe document during signing. Valid values:\n\n* `modal`<br>\n  The document is shown as a supplement action strip\n  and can be viewed, downloaded, or printed in a modal window.\n  This is the recommended value for supplemental documents. \n\n* `inline`<br>\n  The document is shown in the normal signing window.\n  This value is not used with supplemental documents,\n  but is the default value for all other documents.\n",
                        "type": "string"
                    },
                    "displayMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "docGenDocumentStatus": {
                        "description": "",
                        "type": "string"
                    },
                    "docGenErrors": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/docGenSyntaxError"
                        }
                    },
                    "docGenFormFields": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/docGenFormField"
                        }
                    },
                    "documentBase64": {
                        "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
                        "type": "string"
                    },
                    "documentFields": {
                        "description": "An object containing information about the custom fields on the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    },
                    "documentId": {
                        "description": "The ID of the document that the tab is placed on. This value must refer to the ID of an existing document.",
                        "type": "string"
                    },
                    "documentIdGuid": {
                        "description": "The GUID of the document.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "includeInDownload": {
                        "description": "When **true,**\nthe document is included in the combined document download (`documentsCombinedUri`). \nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "includeInDownloadMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "isAceGenDocument": {
                        "description": "",
                        "type": "string"
                    },
                    "isDocGenDocument": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "The document's file name. \n\nExample: `Q1-Report.docx`",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "order": {
                        "description": "The order in which to sort the results.\n\nValid values are: \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. ",
                        "type": "string"
                    },
                    "pages": {
                        "description": "An array of page objects that contain information about the pages in the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/page"
                        }
                    },
                    "signerMustAcknowledge": {
                        "description": "Sets how the signer interacts with the supplemental document.\nValid values:\n\n* `no_interaction`<br>\n  No recipient action is required.\n\n* `view`<br>\n  The recipient is required to view the document.\n\n* `accept`<br>\n  The recipient is required to accept the document by selecting accept during signing, but is not required to view the document.\n\n* `view_accept`<br>\n  The recipient is required to view and accept the document.\n\n",
                        "type": "string"
                    },
                    "signerMustAcknowledgeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sizeBytes": {
                        "description": "",
                        "type": "string"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of this tab. Values are:\n\n- `Approve`\n- `CheckBox`\n- `Company`\n- `Date`\n- `DateSigned`\n- `Decline`\n- `Email`\n- `EmailAddress`\n- `EnvelopeId`\n- `FirstName`\n- `Formula`\n- `FullName`\n- `InitialHere`\n- `InitialHereOptional`\n- `LastName`\n- `List`\n- `Note`\n- `Number`\n- `Radio`\n- `SignerAttachment`\n- `SignHere`\n- `SignHereOptional`\n- `Ssn`\n- `Text`\n- `Title`\n- `Zip5`\n- `Zip5Dash4`\n",
                        "type": "string"
                    },
                    "uri": {
                        "description": "The URI for retrieving the document.",
                        "type": "string"
                    }
                },
                "description": "This object contains details about the envelope document.",
                "x-ds-definition-name": "envelopeDocument",
                "x-ms-summary": "This object contains details about the envelope document."
            },
            "envelopeDocumentsResult": {
                "type": "object",
                "properties": {
                    "envelopeDocuments": {
                        "description": "An array containing information about the documents that are included in the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument"
                        }
                    },
                    "envelopeId": {
                        "description": "The envelope ID.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "envelopeDocumentsResult",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeEvent": {
                "type": "object",
                "properties": {
                    "envelopeEventStatusCode": {
                        "description": "An envelope status for which your webhook should be called. Valid values:\n\n* `Sent` \n* `Delivered`\n* `Completed`\n* `Declined`\n* `Voided`",
                        "type": "string"
                    },
                    "includeDocuments": {
                        "description": "When **true,**\nthe Connect webhook messages\nwill include the envelope's PDF documents.\nIncluding the PDF documents\ngreatly increases the size of the notification messages.\nEnsure that your listener can handle\nincoming messages that are 25MB or larger.",
                        "type": "string"
                    }
                },
                "description": "For which envelope events should your webhook be called?",
                "x-ds-definition-name": "envelopeEvent",
                "x-ms-summary": "For which envelope events should your webhook be called?"
            },
            "envelopeFormData": {
                "type": "object",
                "properties": {
                    "emailSubject": {
                        "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
                        "type": "string"
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "formData": {
                        "description": "An array of `formDataItem` objects. \n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/formDataItem"
                        }
                    },
                    "prefillFormData": {
                        "$ref": "#/components/schemas/prefillFormData"
                    },
                    "recipientFormData": {
                        "description": "An array of form data for each recipient of the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientFormData"
                        }
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    }
                },
                "description": "Describes the form data of the envelope.",
                "x-ds-definition-name": "envelopeFormData",
                "x-ms-summary": "Describes the form data of the envelope."
            },
            "envelopeId": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located.\nFor supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that displays the envelope ID.\n\n**Note:**  The eSignature API uses the name `envelopeId` two ways:\n\n- As a _property_ of type `string` used to identify an envelope  by its GUID.\n- As an _object_ used to represent an envelope tab that displays\n  the envelope's GUID.\n",
                "x-ds-definition-name": "envelopeId",
                "x-ms-summary": "A tab that displays the envelope ID.\n\n**Note:**  The eSignature API uses the name `envelopeId` two ways:\n\n- As a _property_ of type `string` used to identify an envelope  by its GUID.\n- As an _object_ used to represent an envelope tab that displays\n  the envelope's GUID.\n"
            },
            "envelopeIdsRequest": {
                "type": "object",
                "properties": {
                    "envelopeIds": {
                        "description": "A comma-separated list of envelope IDs to include in the results.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "transactionIds": {
                        "description": "A comma-separated list of transaction IDs to include in the results. Note that transaction IDs are valid for seven days.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "Lists of envelope and transaction IDs to use in the results.\n\nIf you use this request body with Envelopes: listStatus,\nyou must set one or both of the following query parameters\nto the special value `request_body`:\n\n- `envelope_ids=request_body`\n- `transaction_ids=request_body`\n",
                "x-ds-definition-name": "envelopeIdsRequest",
                "x-ms-summary": "Lists of envelope and transaction IDs to use in the results.\n\nIf you use this request body with Envelopes: listStatus,\nyou must set one or both of the following query parameters\nto the special value `request_body`:\n\n- `envelope_ids=request_body`\n- `transaction_ids=request_body`\n"
            },
            "envelopeMetadata": {
                "type": "object",
                "properties": {
                    "allowAdvancedCorrect": {
                        "description": "Specifies if the Advanced Correct feature is enabled for the envelope. This feature enables you to correct the details of in process envelopes that you sent or are shared with you. It offers more functionality than the Correct feature.",
                        "type": "string"
                    },
                    "allowCorrect": {
                        "description": "Specifies if the Correct feature is enabled for the envelope. This feature enables you to correct the details of in process envelopes that you sent or are shared with you, including the recipient, envelope, and document information.",
                        "type": "string"
                    },
                    "enableSignWithNotary": {
                        "description": "Specifies if DocuSign eNotary service is enabled for the envelope.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "envelopeMetadata",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeNotificationRequest": {
                "type": "object",
                "properties": {
                    "expirations": {
                        "$ref": "#/components/schemas/expirations"
                    },
                    "reminders": {
                        "$ref": "#/components/schemas/reminders"
                    },
                    "useAccountDefaults": {
                        "description": "When **true,** the account default notification settings are used for the envelope, overriding the reminders and expirations settings. When **false,** the reminders and expirations settings specified in this request are used. The default value is **false.**",
                        "type": "string"
                    }
                },
                "description": "A complex element that specifies the notification settings for the envelope.",
                "x-ds-definition-name": "envelopeNotificationRequest",
                "x-ms-summary": "A complex element that specifies the notification settings for the envelope."
            },
            "envelopePublishTransaction": {
                "type": "object",
                "properties": {
                    "applyConnectSettings": {
                        "description": "",
                        "type": "string"
                    },
                    "envelopeCount": {
                        "description": "",
                        "type": "string"
                    },
                    "envelopeLevelErrorRollups": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopePublishTransactionErrorRollup"
                        }
                    },
                    "envelopePublishTransactionId": {
                        "description": "The ID of the publish transaction.",
                        "type": "string"
                    },
                    "errorCount": {
                        "description": "",
                        "type": "string"
                    },
                    "fileLevelErrors": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "noActionRequiredEnvelopeCount": {
                        "description": "",
                        "type": "string"
                    },
                    "processedEnvelopeCount": {
                        "description": "",
                        "type": "string"
                    },
                    "processingStatus": {
                        "description": "The status of the transaction. Valid values:\n\n* `unprocessed`\n* `processing`\n* `complete`\n* `fatal_error`\n",
                        "type": "string"
                    },
                    "resultsUri": {
                        "description": "",
                        "type": "string"
                    },
                    "submissionDate": {
                        "description": "",
                        "type": "string"
                    },
                    "submittedByUserInfo": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "submittedForPublishingEnvelopeCount": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "envelopePublishTransaction",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopePublishTransactionErrorRollup": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "The maximum number of results to return.",
                        "type": "string"
                    },
                    "errorType": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "envelopePublishTransactionErrorRollup",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopePurgeConfiguration": {
                "type": "object",
                "properties": {
                    "purgeEnvelopes": {
                        "description": "When **true,** purging is enabled.",
                        "type": "string"
                    },
                    "redactPII": {
                        "description": "When **true,** the system also redacts personally identifiable information (PII).\n\n**Note:** To redact PII, you must also set the property `removeTabsAndEnvelopeAttachments` to **true.**",
                        "type": "string"
                    },
                    "removeTabsAndEnvelopeAttachments": {
                        "description": "When **true,** the system also purges the tabs and attachments associated with the envelopes. ",
                        "type": "string"
                    },
                    "retentionDays": {
                        "description": "The number of days to retain envelope documents before purging them. This value must be a number between `0` and `999`.",
                        "type": "string"
                    }
                },
                "description": "Contains information about the current envelope purge configuration for an account, which enables account administrators to purge documents from completed and voided envelopes after a set number of days (`retentionDays`). ",
                "x-ds-definition-name": "envelopePurgeConfiguration",
                "x-ms-summary": "Contains information about the current envelope purge configuration for an account, which enables account administrators to purge documents from completed and voided envelopes after a set number of days (`retentionDays`). "
            },
            "envelopesInformation": {
                "type": "object",
                "properties": {
                    "continuationToken": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "envelopes": {
                        "description": "Array of envelope information.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelope"
                        }
                    },
                    "envelopeSearchSource": {
                        "description": "",
                        "type": "string"
                    },
                    "envelopeTransactionStatuses": {
                        "description": "Array of envelope statuses and transaction IDs in the result set.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeTransactionStatus"
                        }
                    },
                    "folders": {
                        "description": "A list of folder objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "lastQueriedDateTime": {
                        "description": "The last time that a query was performed.",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "description": "Result set for the Envelopes: listStatusChanges method",
                "x-ds-definition-name": "envelopesInformation",
                "x-ms-summary": "Result set for the Envelopes: listStatusChanges method"
            },
            "envelopeSummary": {
                "type": "object",
                "properties": {
                    "bulkEnvelopeStatus": {
                        "$ref": "#/components/schemas/bulkEnvelopeStatus"
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "recipientSigningUri": {
                        "description": "",
                        "type": "string"
                    },
                    "recipientSigningUriError": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are: \n\n* `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.\n* `created`: The envelope is created as a draft. It can be modified and sent later.\n* `declined`: The envelope has been declined by the recipients.\n* `delivered`: The envelope has been delivered to the recipients.\n* `sent`: The envelope will be sent to the recipients after the envelope is created.\n* `signed`: The envelope has been signed by the recipients.\n* `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
                        "type": "string"
                    },
                    "statusDateTime": {
                        "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
                        "type": "string"
                    },
                    "uri": {
                        "description": "A URI containing the user ID.",
                        "type": "string"
                    }
                },
                "description": " This object describes an envelope.",
                "x-ds-definition-name": "envelopeSummary",
                "x-ms-summary": " This object describes an envelope."
            },
            "envelopeTemplate": {
                "type": "object",
                "properties": {
                    "accessControlListBase64": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "allowComments": {
                        "description": "When **true,** users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.",
                        "type": "string"
                    },
                    "allowMarkup": {
                        "description": "When **true,** the Document Markup feature is enabled.\n\n**Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.\n",
                        "type": "string"
                    },
                    "allowReassign": {
                        "description": "When **true,** the recipient can redirect an envelope to a more appropriate recipient.",
                        "type": "string"
                    },
                    "allowViewHistory": {
                        "description": "When **true,** recipients can view the history of the envelope.",
                        "type": "string"
                    },
                    "anySigner": {
                        "description": "Deprecated. This feature has been replaced by signing groups.",
                        "type": "string"
                    },
                    "asynchronous": {
                        "description": "When **true,** the envelope is queued for\nprocessing and the value of the `status` property\nis set to `Processing`. Additionally, GET status\ncalls return `Processing` until completed.\n\n\n**Note:** A `transactionId` is required for this\ncall to work correctly. When the envelope is\ncreated, the status is `Processing` and an\n`envelopeId` is not returned in the response. To\nget the `envelopeId`, use a GET envelope query by\nusing the\n[transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the\nConnect notification.",
                        "type": "string"
                    },
                    "attachmentsUri": {
                        "description": "Contains a URL for retrieving the attachments that are associated with the envelope.",
                        "type": "string"
                    },
                    "authoritativeCopy": {
                        "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
                        "type": "string"
                    },
                    "authoritativeCopyDefault": {
                        "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
                        "type": "string"
                    },
                    "autoMatch": {
                        "description": "By default, templates that have been used within\nthe last 60 days are included in auto-matching.\n\nBy explicitly setting `autoMatch`,\nyou can permanently include or exclude the template\nin auto matching.\n\nWhen **true** the template is included in auto-matching\nregardless of when it was last used.\n\nWhen **false** the template is never included in auto-matching.",
                        "type": "string"
                    },
                    "autoMatchSpecifiedByUser": {
                        "description": "When **true,** the template has been explicitly included in or excluded from auto-matching. The default is false.\nThis is a read-only property.",
                        "type": "string"
                    },
                    "autoNavigation": {
                        "description": "When **true,** autonavigation is set for the recipient.\n",
                        "type": "string"
                    },
                    "brandId": {
                        "description": "The ID of the brand.",
                        "type": "string"
                    },
                    "brandLock": {
                        "description": "When **true,** the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.",
                        "type": "string"
                    },
                    "burnDefaultTabData": {
                        "description": "",
                        "type": "string"
                    },
                    "certificateUri": {
                        "description": "The URI for retrieving certificate information.",
                        "type": "string"
                    },
                    "completedDateTime": {
                        "description": "Specifies the date and time this item was completed.",
                        "type": "string"
                    },
                    "copyRecipientData": {
                        "description": "",
                        "type": "string"
                    },
                    "created": {
                        "description": "The UTC DateTime when the workspace user authorization was created.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "customFields": {
                        "$ref": "#/components/schemas/AccountCustomFields"
                    },
                    "customFieldsUri": {
                        "description": "The URI for retrieving custom fields.",
                        "type": "string"
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deletedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "description": {
                        "description": "A sender-defined description of the line item.\n",
                        "type": "string"
                    },
                    "disableResponsiveDocument": {
                        "description": "When **true,** responsive documents are disabled for the envelope.",
                        "type": "string"
                    },
                    "documentBase64": {
                        "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
                        "type": "string"
                    },
                    "documents": {
                        "description": "A complex element that contains details about the documents associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/document"
                        }
                    },
                    "documentsCombinedUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as a single PDF file.",
                        "type": "string"
                    },
                    "documentsUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as separate files.",
                        "type": "string"
                    },
                    "emailBlurb": {
                        "description": "This is the same as the email body. If the sender enters an email blurb, it is included in the email body for all envelope recipients.",
                        "type": "string"
                    },
                    "emailSettings": {
                        "$ref": "#/components/schemas/emailSettings"
                    },
                    "emailSubject": {
                        "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
                        "type": "string"
                    },
                    "enableWetSign": {
                        "description": "When **true,** the signer is allowed to print the document and sign it on paper.",
                        "type": "string"
                    },
                    "enforceSignerVisibility": {
                        "description": "When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.\n\n**Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**\n\n[docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/",
                        "type": "string"
                    },
                    "envelopeAttachments": {
                        "description": "An array of attachment objects that provide information about the attachments that are associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attachment"
                        }
                    },
                    "envelopeCustomMetadata": {
                        "$ref": "#/components/schemas/envelopeCustomMetadata"
                    },
                    "envelopeDocuments": {
                        "description": "An array containing information about the documents that are included in the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument"
                        }
                    },
                    "envelopeId": {
                        "description": "The envelope ID of an envelope that you want to use as\nthe basis for the template. The state of the envelope\ncan be `draft`, `sent`, or `completed`.\n\n",
                        "type": "string"
                    },
                    "envelopeIdStamping": {
                        "description": "When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.\nAfter a document or attachment is stamped with an Envelope ID,\nthe ID is seen by all recipients\nand becomes a permanent part of the document\nand cannot be removed.",
                        "type": "string"
                    },
                    "envelopeLocation": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "envelopeMetadata": {
                        "$ref": "#/components/schemas/envelopeMetadata"
                    },
                    "envelopeUri": {
                        "description": "The URI for retrieving the envelope or envelopes.",
                        "type": "string"
                    },
                    "expireAfter": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "expireDateTime": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "expireEnabled": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "externalEnvelopeId": {
                        "description": "May contain an external identifier for the envelope.",
                        "type": "string"
                    },
                    "favoritedByMe": {
                        "description": "",
                        "type": "string"
                    },
                    "folderId": {
                        "description": "The ID of the folder.",
                        "type": "string"
                    },
                    "folderIds": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "folderName": {
                        "description": "",
                        "type": "string"
                    },
                    "folders": {
                        "description": "A list of folder objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "hasComments": {
                        "description": "When **true,** indicates that users have added comments to the envelope.",
                        "type": "string"
                    },
                    "hasFormDataChanged": {
                        "description": "When **true,** indicates that the data collected through form fields on a document has changed.",
                        "type": "string"
                    },
                    "hasWavFile": {
                        "description": "When **true,** indicates that a .wav file used for voice authentication is included in the envelope. ",
                        "type": "string"
                    },
                    "holder": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "initialSentDateTime": {
                        "description": "The date and time the envelope was initially sent.",
                        "type": "string"
                    },
                    "is21CFRPart11": {
                        "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
                        "type": "string"
                    },
                    "isAceGenTemplate": {
                        "description": "",
                        "type": "string"
                    },
                    "isDocGenTemplate": {
                        "description": "",
                        "type": "string"
                    },
                    "isDynamicEnvelope": {
                        "description": "When **true,** indicates that the envelope is a dynamic envelope.",
                        "type": "string"
                    },
                    "isSignatureProviderEnvelope": {
                        "description": "When **true,** indicates that the envelope is a signature-provided envelope.",
                        "type": "string"
                    },
                    "lastModified": {
                        "description": "The UTC date and time that the comment was last updated.\n\n**Note:** This can only be done by the creator.",
                        "type": "string"
                    },
                    "lastModifiedBy": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "lastModifiedDateTime": {
                        "description": "The date and time that the item was last modified.",
                        "type": "string"
                    },
                    "lastUsed": {
                        "description": "",
                        "type": "string"
                    },
                    "location": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockInformation": {
                        "$ref": "#/components/schemas/EnvelopeLocks"
                    },
                    "messageLock": {
                        "description": "When **true,** prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "newPassword": {
                        "description": "The user's new password.",
                        "type": "string"
                    },
                    "notification": {
                        "$ref": "#/components/schemas/notification"
                    },
                    "notificationUri": {
                        "description": "The URI for retrieving notifications.",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "pageCount": {
                        "description": "An integer value specifying the number of document pages in the template. ",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "passwordProtected": {
                        "description": "",
                        "type": "string"
                    },
                    "powerForm": {
                        "$ref": "#/components/schemas/powerForm"
                    },
                    "powerForms": {
                        "description": "An array of PowerForm objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/powerForm"
                        }
                    },
                    "purgeCompletedDate": {
                        "description": "The date that a purge was completed.",
                        "type": "string"
                    },
                    "purgeRequestDate": {
                        "description": "The date that a purge was requested.",
                        "type": "string"
                    },
                    "purgeState": {
                        "description": "Shows the current purge state for the envelope. Valid values:\n\n- `unpurged`: There has been no successful request to purge documents.\n- `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n- `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n- `documents_purged`: The envelope documents have been successfully purged.\n- `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n- `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n- `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.\n- `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.\n\n**Related topics**\n\n- [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)\n- [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)\n\n",
                        "type": "string"
                    },
                    "recipients": {
                        "$ref": "#/components/schemas/EnvelopeRecipients"
                    },
                    "recipientsLock": {
                        "description": "When **true,** prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
                        "type": "string"
                    },
                    "recipientsUri": {
                        "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                        "type": "string"
                    },
                    "sender": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "shared": {
                        "description": "When **true,** indicates the template is shared with the **Everyone** group,\nwhich includes all users on the account.\n\nWhen **false,** the template is shared only with the groups you specify.\n",
                        "type": "string"
                    },
                    "signerCanSignOnMobile": {
                        "description": "When **true,** recipients can sign on a mobile device.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signingLocation": {
                        "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.\n* `created`: The envelope is created as a draft. It can be modified and sent later.\n* `declined`: The envelope has been declined by the recipients.\n* `delivered`: The envelope has been delivered to the recipients.\n* `sent`: The envelope will be sent to the recipients after the envelope is created.\n* `signed`: The envelope has been signed by the recipients.\n* `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
                        "type": "string"
                    },
                    "statusChangedDateTime": {
                        "description": "The data and time that the status changed.",
                        "type": "string"
                    },
                    "statusDateTime": {
                        "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
                        "type": "string"
                    },
                    "templateId": {
                        "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                        "type": "string"
                    },
                    "templatesUri": {
                        "description": "The URI for retrieving the templates.",
                        "type": "string"
                    },
                    "transactionId": {
                        "description": " Used to identify an envelope.\n\n The ID is a sender-generated value and is valid in the DocuSign system for 7 days.\n It is recommended that a transaction ID is used for offline\n signing to ensure that an envelope is not sent multiple times.\n The `transactionId` property can be used determine an envelope's\n status (i.e. was it created or not) in cases where the internet c\n onnection was lost before the envelope status was returned.",
                        "type": "string"
                    },
                    "uri": {
                        "description": "A URI containing the user ID.",
                        "type": "string"
                    },
                    "useDisclosure": {
                        "description": "When **true,** the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When **false,** the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
                        "type": "string"
                    },
                    "voidedDateTime": {
                        "description": "The date and time the envelope or template was voided.",
                        "type": "string"
                    },
                    "voidedReason": {
                        "description": "The reason the envelope or template was voided.\n\n**Note:** The string is truncated to the first 200 characters.\n",
                        "type": "string"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/workflow"
                    }
                },
                "x-ds-definition-name": "envelopeTemplate",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeTemplateResults": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "envelopeTemplates": {
                        "description": "The list of requested templates.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeTemplate"
                        }
                    },
                    "folders": {
                        "description": "A list of folder objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "description": "Information about templates.",
                "x-ds-definition-name": "envelopeTemplateResults",
                "x-ms-summary": "Information about templates."
            },
            "envelopeTransactionStatus": {
                "type": "object",
                "properties": {
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.\n* `created`: The envelope is created as a draft. It can be modified and sent later.\n* `declined`: The envelope has been declined by the recipients.\n* `delivered`: The envelope has been delivered to the recipients.\n* `sent`: The envelope will be sent to the recipients after the envelope is created.\n* `signed`: The envelope has been signed by the recipients.\n* `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
                        "type": "string"
                    },
                    "transactionId": {
                        "description": " Used to identify an envelope. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "envelopeTransactionStatus",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeTransferRule": {
                "type": "object",
                "properties": {
                    "carbonCopyOriginalOwner": {
                        "description": "When **true,** the original owner is added as a carbon copy recipient after envelope transfer. The default value is **false.**",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "When **true,** the envelope transfer rule is active.",
                        "type": "string"
                    },
                    "envelopeTransferRuleId": {
                        "description": "The ID of the envelope transfer rule. The system generates this ID when the rule is first created.",
                        "type": "string"
                    },
                    "eventType": {
                        "description": "The type of envelope event that triggers the transfer. Valid values are:\n\n- `sent`\n- `before sent` \n- `completed`",
                        "type": "string"
                    },
                    "fromGroup": {
                        "$ref": "#/components/schemas/group"
                    },
                    "fromUser": {
                        "$ref": "#/components/schemas/userInformation"
                    },
                    "modifiedDate": {
                        "description": "The UTC DateTime when the envelope transfer rule was last modified. This property is read-only.",
                        "type": "string"
                    },
                    "modifiedUser": {
                        "$ref": "#/components/schemas/userInformation"
                    },
                    "toFolder": {
                        "$ref": "#/components/schemas/folder"
                    },
                    "toUser": {
                        "$ref": "#/components/schemas/userInformation"
                    }
                },
                "description": "This object contains details about an envelope transfer rule.",
                "x-ds-definition-name": "envelopeTransferRule",
                "x-ms-summary": "This object contains details about an envelope transfer rule."
            },
            "envelopeTransferRuleInformation": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "envelopeTransferRules": {
                        "description": "Contains information about a specific envelope transfer rule.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeTransferRule"
                        }
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "envelopeTransferRuleInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "envelopeTransferRuleRequest": {
                "type": "object",
                "properties": {
                    "carbonCopyOriginalOwner": {
                        "description": "When **true,** the original owner is added as a carbon copy recipient after envelope transfer. The default value is **false.**",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "When **true,** the envelope transfer rule is active.",
                        "type": "string"
                    },
                    "envelopeTransferRuleId": {
                        "description": "The ID of the envelope transfer rule. The system generates this ID when the rule is first created.",
                        "type": "string"
                    },
                    "eventType": {
                        "description": "The type of envelope event that triggers the transfer. Valid values are:\n\n- `sent`\n- `before sent` \n- `completed`",
                        "type": "string"
                    },
                    "fromGroups": {
                        "description": "Information about the group that triggers the transfer.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/group"
                        }
                    },
                    "fromUsers": {
                        "description": "Information about the user who triggers the transfer.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInformation"
                        }
                    },
                    "modifiedDate": {
                        "description": "The UTC DateTime when the envelope transfer rule was last modified. This property is read-only.",
                        "type": "string"
                    },
                    "modifiedUser": {
                        "$ref": "#/components/schemas/userInformation"
                    },
                    "toFolder": {
                        "$ref": "#/components/schemas/folder"
                    },
                    "toUser": {
                        "$ref": "#/components/schemas/userInformation"
                    }
                },
                "description": "This object contains details about the envelope transfer rule that you want to create.",
                "x-ds-definition-name": "envelopeTransferRuleRequest",
                "x-ms-summary": "This object contains details about the envelope transfer rule that you want to create."
            },
            "envelopeUpdateSummary": {
                "type": "object",
                "properties": {
                    "bulkEnvelopeStatus": {
                        "$ref": "#/components/schemas/bulkEnvelopeStatus"
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "listCustomFieldUpdateResults": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listCustomField"
                        }
                    },
                    "lockInformation": {
                        "$ref": "#/components/schemas/EnvelopeLocks"
                    },
                    "purgeState": {
                        "description": "Shows the current purge state for the envelope. Valid values:\n\n- `unpurged`: There has been no successful request to purge documents.\n- `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n- `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n- `documents_purged`: The envelope documents have been successfully purged.\n- `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n- `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n- `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.\n- `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.\n\n**Related topics**\n\n- [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)\n- [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)\n\n",
                        "type": "string"
                    },
                    "recipientUpdateResults": {
                        "description": "An array of `recipientUpdateResults` objects that contain details about the recipients.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientUpdateResponse"
                        }
                    },
                    "tabUpdateResults": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "textCustomFieldUpdateResults": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/textCustomField"
                        }
                    }
                },
                "x-ds-definition-name": "envelopeUpdateSummary",
                "description": "",
                "x-ms-summary": ""
            },
            "errorDetails": {
                "description": "This object describes errors that occur. It is only valid for responses and ignored in requests.",
                "type": "object",
                "properties": {
                    "errorCode": {
                        "description": "The code associated with the error condition.",
                        "type": "string"
                    },
                    "message": {
                        "description": "A brief message describing the error condition.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "errorDetails",
                "x-ms-summary": "This object describes errors that occur. It is only valid for responses and ignored in requests."
            },
            "eventNotification": {
                "description": "Use this object to configure a [DocuSign Connect webhook](/platform/webhooks/connect/).",
                "type": "object",
                "properties": {
                    "deliveryMode": {
                        "description": "",
                        "type": "string"
                    },
                    "envelopeEvents": {
                        "description": "A list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `url` property. \n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeEvent"
                        }
                    },
                    "eventData": {
                        "$ref": "#/components/schemas/connectEventData"
                    },
                    "events": {
                        "description": "A comma-separated list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `urlToPublishTo` property.\n\nSet this property when you are using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/). If you are instead using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), set either the `envelopeEvents` property or the `recipientEvents` property.\n\nThe [possible event statuses](/platform/webhooks/connect/improved-json-sim-event-model/#eventreference) are:\n\n* `envelope-created`\n* `envelope-sent`\n* `envelope-resent`\n* `envelope-delivered`\n* `envelope-completed`\n* `envelope-declined`\n* `envelope-voided`\n* `recipient-authenticationfailed`\n* `recipient-autoresponded`\n* `recipient-declined`\n* `recipient-delivered`\n* `recipient-completed`\n* `recipient-sent`\n* `recipient-resent`\n* `template-created`\n* `template-modified`\n* `template-deleted`\n* `envelope-corrected`\n* `envelope-purge`\n* `envelope-deleted`\n* `envelope-discard`\n* `recipient-reassign`\n* `recipient-delegate`\n* `recipient-finish-later`\n* `click-agreed`\n* `click-declined`\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "includeCertificateOfCompletion": {
                        "description": "When **true,** the Connect Service includes the Certificate of Completion with completed envelopes. ",
                        "type": "string"
                    },
                    "includeCertificateWithSoap": {
                        "description": "When **true,**\nthe Connect service will digitally sign\nthe data.\nThe signature will be included in the message.",
                        "type": "string"
                    },
                    "includeDocumentFields": {
                        "description": "When **true,** the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. ",
                        "type": "string"
                    },
                    "includeDocuments": {
                        "description": "When **true,**\nthe Connect webhook messages\nwill include the envelope's PDF documents.\nIncluding the PDF documents\ngreatly increases the size of the notification messages.\nEnsure that your listener can handle\nincoming messages that are 25MB or larger.",
                        "type": "string"
                    },
                    "includeEnvelopeVoidReason": {
                        "description": "When **true,** this tells the Connect Service to include the void reason, as entered by the person that voided the envelope, in the message. ",
                        "type": "string"
                    },
                    "includeHMAC": {
                        "description": "When **true,** HMAC headers will be included with the webhook notifications.\n\n**Note:** [HMAC must enabled](/platform/webhooks/connect/hmac/) at the account level with [one or more HMAC secrets](/platform/webhooks/connect/setting-up-hmac/).",
                        "type": "string"
                    },
                    "includeOAuth": {
                        "description": "",
                        "type": "string"
                    },
                    "includeSenderAccountAsCustomField": {
                        "description": "When **true,** Connect will include the sender account as Custom Field in the data.",
                        "type": "string"
                    },
                    "includeTimeZone": {
                        "description": "When **true,** the envelope's time zone information is included in the webhook messages. ",
                        "type": "string"
                    },
                    "integratorManaged": {
                        "description": "",
                        "type": "string"
                    },
                    "loggingEnabled": {
                        "description": "When **true,** the webhook messages are logged. They can be viewed on the DocuSign Administration Web Tool in the Connect section. Logged messages can also be downloaded via the [ConnectEvents resource](/docs/esign-rest-api/reference/connect/connectevents/).",
                        "type": "string"
                    },
                    "recipientEvents": {
                        "description": "A list of recipient event statuses that will trigger Connect to send updates to   the endpoint specified in the URL property.\n\nTo receive notifications, you must include either an `envelopeEvents` node or a `recipientEvents` node. You do not need to specify both.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientEvent"
                        }
                    },
                    "requireAcknowledgment": {
                        "description": "When **true,** the DocuSign Connect service checks that the message was received and retries on failures. ",
                        "type": "string"
                    },
                    "signMessageWithX509Cert": {
                        "description": "When **true,** Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol. ",
                        "type": "string"
                    },
                    "soapNameSpace": {
                        "description": "The namespace of the SOAP interface.\n\nThe namespace value must be set if useSoapInterface is set to true.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The endpoint to which Connect should send webhook notification messages via an HTTPS POST request. The URL must start with `https`. The customer's web server must use an SSL/TLS certificate whose CA is in the Microsoft list of trusted CAs. Self-signed certificates are not acceptable, but you can use free certificates from Let's Encrypt.\n\nThe maximum length of this property is 4096 bytes.\n",
                        "type": "string"
                    },
                    "useSoapInterface": {
                        "description": "When **true,** this tells the Connect service that the user's endpoint has implemented a SOAP interface. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "eventNotification",
                "x-ms-summary": "Use this object to configure a [DocuSign Connect webhook](/platform/webhooks/connect/)."
            },
            "eventResult": {
                "type": "object",
                "properties": {
                    "eventTimestamp": {
                        "description": "Date/time of the event.",
                        "type": "string"
                    },
                    "failureDescription": {
                        "description": "Reason for failure, if the event failed.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Event status.",
                        "type": "string"
                    },
                    "vendorFailureStatusCode": {
                        "description": "Failure status code, if the event failed.",
                        "type": "string"
                    }
                },
                "description": "Information about the result of an event.",
                "x-ds-definition-name": "eventResult",
                "x-ms-summary": "Information about the result of an event."
            },
            "expirations": {
                "description": "A complex element that specifies the expiration settings for the envelope. When an envelope expires, it is voided and no longer available for signing. **Note:** there is a short delay between when the envelope expires and when it is voided.\n",
                "type": "object",
                "properties": {
                    "expireAfter": {
                        "description": "An integer that sets the number of days the envelope is active. For this value to be used, `expireEnabled` must be explicitly set to **true.**",
                        "type": "string"
                    },
                    "expireEnabled": {
                        "description": "When **true,** the envelope expires in the number of days set by `expireAfter`. When **false** or not set, the envelope expires in the number of days specified by the [default expiration account setting](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=rra1583277381176.html).",
                        "type": "string"
                    },
                    "expireWarn": {
                        "description": "An integer that specifying the number of days before the envelope expires that an expiration warning email is sent to the recipient. When 0 (zero), no warning email is sent.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "expirations",
                "x-ms-summary": "A complex element that specifies the expiration settings for the envelope. When an envelope expires, it is voided and no longer available for signing. **Note:** there is a short delay between when the envelope expires and when it is voided.\n"
            },
            "externalDocServiceErrorDetails": {
                "type": "object",
                "properties": {
                    "authenticationUrl": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "errorCode": {
                        "description": "A code associated with the error condition.",
                        "type": "string"
                    },
                    "message": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "externalDocServiceErrorDetails",
                "description": "",
                "x-ms-summary": ""
            },
            "externalDocumentSources": {
                "type": "object",
                "properties": {
                    "boxnetEnabled": {
                        "description": "The account is enabled to allow external documents to be attached from BoxNet.",
                        "type": "string"
                    },
                    "boxnetMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "dropboxEnabled": {
                        "description": "The account is enabled to allow external documents to be attached from DropBox.",
                        "type": "string"
                    },
                    "dropboxMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "googleDriveEnabled": {
                        "description": "The account is enabled to allow external documents to be attached from Google Drive.",
                        "type": "string"
                    },
                    "googleDriveMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "oneDriveEnabled": {
                        "description": "The account is enabled to allow external documents to be attached from OneDrive.",
                        "type": "string"
                    },
                    "oneDriveMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "salesforceEnabled": {
                        "description": "The account is enabled to allow external documents to be attached from Salesforce.",
                        "type": "string"
                    },
                    "salesforceMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    }
                },
                "description": "A complex object specifying the external document sources.",
                "x-ds-definition-name": "externalDocumentSources",
                "x-ms-summary": "A complex object specifying the external document sources."
            },
            "externalFile": {
                "type": "object",
                "properties": {
                    "date": {
                        "description": "The UTC date and time that the file or folder was last modified.",
                        "type": "string"
                    },
                    "hasCompositeTemplate": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "The storage provider's ID for the file or folder.",
                        "type": "string"
                    },
                    "img": {
                        "description": "The file extension for a file.\n\n**Note:** If the item is a folder, this value is null.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full name of a file.",
                        "type": "string"
                    },
                    "ownerName": {
                        "description": "",
                        "type": "string"
                    },
                    "size": {
                        "description": "The size of the file. The file size limit varies based on the cloud storage provider.",
                        "type": "string"
                    },
                    "supported": {
                        "description": "When **true,** DocuSign supports the file type for upload.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of cloud storage item. Valid values are:\n\n- `file`\n- `folder`",
                        "type": "string"
                    },
                    "uri": {
                        "description": "The URI for the file or folder.",
                        "type": "string"
                    }
                },
                "description": "This object contains information about a file or folder in cloud storage.",
                "x-ds-definition-name": "externalFile",
                "x-ms-summary": "This object contains information about a file or folder in cloud storage."
            },
            "externalFolder": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/externalDocServiceErrorDetails"
                    },
                    "id": {
                        "description": "A unique ID for the Salesforce object.",
                        "type": "string"
                    },
                    "items": {
                        "description": "If the tab is a list, this represents the values that are possible for the tab.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/externalFile"
                        }
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "externalFolder",
                "description": "",
                "x-ms-summary": ""
            },
            "externalPrimaryAccountRecipientAuthRequirements": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "idVerification": {
                        "description": "",
                        "type": "string"
                    },
                    "kba": {
                        "description": "",
                        "type": "string"
                    },
                    "phone": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "externalPrimaryAccountRecipientAuthRequirements",
                "description": "",
                "x-ms-summary": ""
            },
            "favoriteTemplatesContentItem": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "favoritedDate": {
                        "description": "Time at which the template was marked as favorite.",
                        "type": "string"
                    },
                    "templateId": {
                        "description": "The ID of the template.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "favoriteTemplatesContentItem",
                "description": "",
                "x-ms-summary": ""
            },
            "favoriteTemplatesInfo": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "favoriteTemplates": {
                        "description": "The favorite templates acted upon by the call.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/favoriteTemplatesContentItem"
                        }
                    },
                    "templatesUpdatedCount": {
                        "format": "int32",
                        "description": "The number of templates successfully updated by the call. This property is read-only.",
                        "type": "integer"
                    }
                },
                "x-ds-definition-name": "favoriteTemplatesInfo",
                "description": "",
                "x-ms-summary": ""
            },
            "featureAvailableMetadata": {
                "type": "object",
                "properties": {
                    "availabilty": {
                        "description": "",
                        "type": "string"
                    },
                    "featureName": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "featureAvailableMetadata",
                "description": "",
                "x-ms-summary": ""
            },
            "featureSet": {
                "type": "object",
                "properties": {
                    "currencyFeatureSetPrices": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/currencyFeatureSetPrice"
                        }
                    },
                    "envelopeFee": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "featureSetId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fixedFee": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "is21CFRPart11": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "isActive": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "isEnabled": {
                        "description": "When **true,** the feature set is actively enabled as part of the plan.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "seatFee": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "description": "This object provides details about a feature set, or add-on product that is associated with an account. It is reserved for DocuSign internal use only.",
                "x-ds-definition-name": "featureSet",
                "x-ms-summary": "This object provides details about a feature set, or add-on product that is associated with an account. It is reserved for DocuSign internal use only."
            },
            "fileType": {
                "type": "object",
                "properties": {
                    "fileExtension": {
                        "description": "",
                        "type": "string"
                    },
                    "mimeType": {
                        "description": "The mime-type of a file type listed in a fileTypes collection.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "fileType",
                "description": "",
                "x-ms-summary": ""
            },
            "fileTypeList": {
                "type": "object",
                "properties": {
                    "fileTypes": {
                        "description": "A collection of file types.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/fileType"
                        }
                    }
                },
                "x-ds-definition-name": "fileTypeList",
                "description": "",
                "x-ms-summary": ""
            },
            "filter": {
                "type": "object",
                "properties": {
                    "actionRequired": {
                        "description": "When **true,** the current user needs to take action on the item.",
                        "type": "string"
                    },
                    "expires": {
                        "description": "The number of days a sent envelope remains active before it expires.",
                        "type": "string"
                    },
                    "folderIds": {
                        "description": "Filters for any combination of folder IDs and folder types. The possible folder types are:\n\n- `awaiting_my_signature`\n- `completed`\n- `draft`\n- `drafts`\n- `expiring_soon`\n- `inbox`\n- `out_for_signature`\n- `recyclebin`\n- `sentitems`\n- `waiting_for_others`",
                        "type": "string"
                    },
                    "fromDateTime": {
                        "description": "The UTC DateTime of the beginning of a date range. If no value is provided, the default search is the previous 30 days.",
                        "type": "string"
                    },
                    "isTemplate": {
                        "description": "When **true,** the item is a template.",
                        "type": "string"
                    },
                    "order": {
                        "description": "The order in which to sort the results.\n\nValid values are: \n\n\n* `asc`: Ascending order.\n* `desc`: Descending order. ",
                        "type": "string"
                    },
                    "orderBy": {
                        "description": "The field used to sort the results.\n\nExample: `Created`",
                        "type": "string"
                    },
                    "searchTarget": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "searchText": {
                        "description": "A free text search field for searching across the items in a folder. The search looks for the text that you enter in the recipient names and emails, envelope custom fields, sender name, and subject.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the envelope. By default, all statuses are returned.\n\nFor details, see [Envelope Status Code Descriptions](/docs/esign-rest-api/esign101/rules-and-limits/responses/).",
                        "type": "string"
                    },
                    "toDateTime": {
                        "description": "The UTC DateTime of the end of a date range. If no value is provided, the default search is to the current date.",
                        "type": "string"
                    }
                },
                "description": "Use this object to create a filtered view of the items in a folder.",
                "x-ds-definition-name": "filter",
                "x-ms-summary": "Use this object to create a filtered view of the items in a folder."
            },
            "firstName": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that displays the recipient's first name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n",
                "x-ds-definition-name": "firstName",
                "x-ms-summary": "A tab that displays the recipient's first name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the first section as the first name.\n"
            },
            "folder": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "filter": {
                        "$ref": "#/components/schemas/filter"
                    },
                    "folderId": {
                        "description": "The ID of the folder.",
                        "type": "string"
                    },
                    "folderItems": {
                        "description": "A list of envelopes and templates that the folder contains.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folderItem_v2"
                        }
                    },
                    "folders": {
                        "description": "A collection of folder objects returned in a response.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "hasAccess": {
                        "description": "When **true,** the current user has access to the folder.",
                        "type": "string"
                    },
                    "hasSubFolders": {
                        "description": "When **true,** the folder has subfolders.",
                        "type": "string"
                    },
                    "itemCount": {
                        "description": "The number of items in the folder.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the folder.",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "parentFolderId": {
                        "description": "The ID of the parent folder, or the special value `root` for the root folder.",
                        "type": "string"
                    },
                    "parentFolderUri": {
                        "description": "The URI of the parent folder.",
                        "type": "string"
                    },
                    "subFolderCount": {
                        "description": "The number of subfolders.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of folder. Possible values include:\n\n- `draft`\n- `inbox`\n- `normal` (a system-generated folder)\n- `recyclebin`\n- `sentitems`\n- `custom` (a custom folder created by a user)",
                        "type": "string"
                    },
                    "uri": {
                        "description": "The URI for the folder.",
                        "type": "string"
                    }
                },
                "description": "This object contains details about a folder.",
                "x-ds-definition-name": "folder",
                "x-ms-summary": "This object contains details about a folder."
            },
            "folderItem_v2": {
                "type": "object",
                "properties": {
                    "completedDateTime": {
                        "description": "If the item is an envelope, this is the UTC DateTime when the envelope was completed.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "envelopeId": {
                        "description": "If the item is an envelope, this is the ID of the envelope.",
                        "type": "string"
                    },
                    "envelopeUri": {
                        "description": "If the item is an envelope, this is the URI for retrieving it.",
                        "type": "string"
                    },
                    "expireDateTime": {
                        "description": "The date and time the envelope is set to expire.",
                        "type": "string"
                    },
                    "folderId": {
                        "description": "The ID of the folder.",
                        "type": "string"
                    },
                    "folderUri": {
                        "description": "If the item is a subfolder, this is the URI for retrieving it.",
                        "type": "string"
                    },
                    "is21CFRPart11": {
                        "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
                        "type": "string"
                    },
                    "lastModifiedDateTime": {
                        "description": "The date and time that the item was last modified.",
                        "type": "string"
                    },
                    "ownerName": {
                        "description": "The name of the user who owns the folder.",
                        "type": "string"
                    },
                    "recipients": {
                        "$ref": "#/components/schemas/EnvelopeRecipients"
                    },
                    "recipientsUri": {
                        "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                        "type": "string"
                    },
                    "senderCompany": {
                        "description": "The name of the sender's company.",
                        "type": "string"
                    },
                    "senderEmail": {
                        "description": "The sender's email address.",
                        "type": "string"
                    },
                    "senderName": {
                        "description": "The sender's name.",
                        "type": "string"
                    },
                    "senderUserId": {
                        "description": "The sender's id.",
                        "type": "string"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "subject": {
                        "description": "The subject of the envelope.",
                        "type": "string"
                    },
                    "templateId": {
                        "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                        "type": "string"
                    },
                    "templateUri": {
                        "description": "The URI for retrieving the template.",
                        "type": "string"
                    }
                },
                "description": "Information about folder item results.",
                "x-ds-definition-name": "folderItem_v2",
                "x-ms-summary": "Information about folder item results."
            },
            "folderItemResponse": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "folderItems": {
                        "description": "A list of the envelopes in the specified folder or folders. ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folderItem_v2"
                        }
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalRows": {
                        "description": "The total number of items in the result.",
                        "type": "string"
                    }
                },
                "description": "Results from a folder item request.",
                "x-ds-definition-name": "folderItemResponse",
                "x-ms-summary": "Results from a folder item request."
            },
            "folderItemsResponse": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "envelopes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeSummary"
                        }
                    },
                    "folders": {
                        "description": "A list of folder objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "folderItemsResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "folderSharedItem": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "folderId": {
                        "description": "The ID of the folder.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the folder.",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "parentFolderId": {
                        "description": "The ID of the parent folder.",
                        "type": "string"
                    },
                    "parentFolderUri": {
                        "description": "The URI for the parent folder.",
                        "type": "string"
                    },
                    "shared": {
                        "description": "Indicates how the folder is shared. Valid values are:\n\n- `not_shared`\n- `shared_to`",
                        "type": "string"
                    },
                    "sharedGroups": {
                        "description": "A list of groups that share the folder.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/memberGroupSharedItem"
                        }
                    },
                    "sharedUsers": {
                        "description": "A list of users that share the folder.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userSharedItem"
                        }
                    },
                    "uri": {
                        "description": "A URI containing the user ID.",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/userInfo"
                    }
                },
                "x-ds-definition-name": "folderSharedItem",
                "description": "",
                "x-ms-summary": ""
            },
            "foldersRequest": {
                "type": "object",
                "properties": {
                    "envelopeIds": {
                        "description": "An array of envelope ID GUIDs.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "folders": {
                        "description": "Not used.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "fromFolderId": {
                        "description": " The ID of the folder that the envelope is being moved from.",
                        "type": "string"
                    }
                },
                "description": "Information for a folder request.",
                "x-ds-definition-name": "foldersRequest",
                "x-ms-summary": "Information for a folder request."
            },
            "foldersResponse": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "envelopes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeSummary"
                        }
                    },
                    "folders": {
                        "description": "A list of folder objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "foldersResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "forgottenPasswordInformation": {
                "description": "A complex element that has up to four Question/Answer pairs for forgotten password information.",
                "type": "object",
                "properties": {
                    "forgottenPasswordAnswer1": {
                        "description": "The answer to the first forgotten password challenge question.",
                        "type": "string"
                    },
                    "forgottenPasswordAnswer2": {
                        "description": "The answer to the second forgotten password challenge question.",
                        "type": "string"
                    },
                    "forgottenPasswordAnswer3": {
                        "description": "The answer to the third forgotten password challenge question.",
                        "type": "string"
                    },
                    "forgottenPasswordAnswer4": {
                        "description": "The answer to the fourth forgotten password challenge question.",
                        "type": "string"
                    },
                    "forgottenPasswordQuestion1": {
                        "description": "The first challenge question presented to a user who has forgotten their password.",
                        "type": "string"
                    },
                    "forgottenPasswordQuestion2": {
                        "description": "The second challenge question presented to a user who has forgotten their password.",
                        "type": "string"
                    },
                    "forgottenPasswordQuestion3": {
                        "description": "The third challenge question presented to a user who has forgotten their password.",
                        "type": "string"
                    },
                    "forgottenPasswordQuestion4": {
                        "description": "The fourth challenge question presented to a user who has forgotten their password.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "forgottenPasswordInformation",
                "x-ms-summary": "A complex element that has up to four Question/Answer pairs for forgotten password information."
            },
            "formDataItem": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "listSelectedValue": {
                        "description": "The selected value in a list.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the form field.",
                        "type": "string"
                    },
                    "numericalValue": {
                        "description": "",
                        "type": "string"
                    },
                    "originalNumericalValue": {
                        "description": "",
                        "type": "string"
                    },
                    "originalValue": {
                        "description": "The initial value associated with the form field.",
                        "type": "string"
                    },
                    "value": {
                        "description": "The current value associated with the form field.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "formDataItem",
                "description": "",
                "x-ms-summary": ""
            },
            "formulaTab": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formula": {
                        "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n",
                        "type": "string"
                    },
                    "formulaMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "hidden": {
                        "description": "If this is a regular formula (no `paymentDetails` property is present):\n\n* **true:** The tab is hidden.\n* **false:** The tab is shown.\n\nIf the formula is payment item (a `paymentDetails` property is present):\n\n* **true:** The tab is displayed as a payment.\n* **false:** The tab is displayed as a regular formula.\n",
                        "type": "string"
                    },
                    "hiddenMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "isPaymentAmountMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "paymentDetails": {
                        "$ref": "#/components/schemas/paymentDetails"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "roundDecimalPlaces": {
                        "description": "The number of decimal places to round to.",
                        "type": "string"
                    },
                    "roundDecimalPlacesMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderRequired": {
                        "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                        "type": "string"
                    },
                    "senderRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationMessageMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationPattern": {
                        "description": "A regular expression used to validate input for the tab.",
                        "type": "string"
                    },
                    "validationPatternMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+35, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+35, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "The value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n",
                "x-ds-definition-name": "formulaTab",
                "x-ms-summary": "The value of a formula tab is calculated\nfrom the values of other\nnumber or date tabs in the document.\nWhen the recipient completes the underlying fields,\nthe formula tab calculates and displays the result.\n\nThe `formula` property of the tab\ncontains the references\nto the underlying tabs.\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nIf a formula tab contains\na `paymentDetails` property,\nthe tab is considered a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n"
            },
            "fullName": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that displays the recipient's full name.\n",
                "x-ds-definition-name": "fullName",
                "x-ms-summary": "A tab that displays the recipient's full name.\n"
            },
            "graphicsContext": {
                "type": "object",
                "properties": {
                    "fillColor": {
                        "description": "The fill color to use for the overlay. Colors are typically specified by their RGB hex values, but you can also use a [friendly CSS color name](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).",
                        "type": "string"
                    },
                    "lineColor": {
                        "description": "The line color to use for the overlay. Colors are typically specified by their RGB hex values, but you can also use a [friendly CSS color name](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).",
                        "type": "string"
                    },
                    "lineWeight": {
                        "description": "The line weight or thickness to use for the overlay.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "graphicsContext",
                "description": "",
                "x-ms-summary": ""
            },
            "group": {
                "type": "object",
                "properties": {
                    "dsGroupId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "groupId": {
                        "description": "The DocuSign group ID for the group.\nThis is a read-only property.",
                        "type": "string"
                    },
                    "groupName": {
                        "description": "The name of the group.",
                        "type": "string"
                    },
                    "groupType": {
                        "description": "The group type.",
                        "type": "string"
                    },
                    "permissionProfileId": {
                        "description": "The ID of the permission profile associated with the group.\n\nUse [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)\nto get a list of permission profiles and their IDs.",
                        "type": "string"
                    },
                    "users": {
                        "description": "A list of the users in the group. This property is not used by [Groups: list](/docs/esign-rest-api/reference/usergroups/groups/list/). To get a list of users see [GroupUsers: list](/docs/esign-rest-api/reference/usergroups/groupusers/list/)\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "usersCount": {
                        "description": "The total number of users in the group.",
                        "type": "string"
                    }
                },
                "description": "This object contains information about a group.",
                "x-ds-definition-name": "group",
                "x-ms-summary": "This object contains information about a group."
            },
            "groupInformation": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "groups": {
                        "description": "A collection group objects containing information about the groups.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/group"
                        }
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "groupInformation",
                "description": "This object is used for both requests and responses. Some properties (such as `endPosition`) only apply to the response of [Groups: list](/docs/esign-rest-api/reference/usergroups/groups/list/).\n",
                "x-ms-summary": "This object is used for both requests and responses. Some properties (such as `endPosition`) only apply to the response of [Groups: list](/docs/esign-rest-api/reference/usergroups/groups/list/).\n"
            },
            "idCheckConfiguration": {
                "type": "object",
                "properties": {
                    "authSteps": {
                        "description": "A list of ID check security steps, each specifying an authorization type.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/idCheckSecurityStep"
                        }
                    },
                    "isDefault": {
                        "description": "Boolean that specifies whether the signature is the default signature for the user.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the signature.",
                        "type": "string"
                    }
                },
                "description": "A complex object specifying ID check configuration.",
                "x-ds-definition-name": "idCheckConfiguration",
                "x-ms-summary": "A complex object specifying ID check configuration."
            },
            "idCheckInformationInput": {
                "description": "A complex element that contains input information related to a recipient ID check.",
                "type": "object",
                "properties": {
                    "addressInformationInput": {
                        "$ref": "#/components/schemas/addressInformationInput"
                    },
                    "dobInformationInput": {
                        "$ref": "#/components/schemas/dobInformationInput"
                    },
                    "ssn4InformationInput": {
                        "$ref": "#/components/schemas/ssn4InformationInput"
                    },
                    "ssn9InformationInput": {
                        "$ref": "#/components/schemas/ssn9InformationInput"
                    }
                },
                "x-ds-definition-name": "idCheckInformationInput",
                "x-ms-summary": "A complex element that contains input information related to a recipient ID check."
            },
            "idCheckSecurityStep": {
                "type": "object",
                "properties": {
                    "authType": {
                        "description": "Type of authorization used for the security check.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "idCheckSecurityStep",
                "description": "",
                "x-ms-summary": ""
            },
            "idEvidenceResourceToken": {
                "type": "object",
                "properties": {
                    "proofBaseURI": {
                        "description": "",
                        "type": "string"
                    },
                    "resourceToken": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "idEvidenceResourceToken",
                "description": "",
                "x-ms-summary": ""
            },
            "idEvidenceViewLink": {
                "type": "object",
                "properties": {
                    "viewLink": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "idEvidenceViewLink",
                "description": "",
                "x-ms-summary": ""
            },
            "initialHere": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "handDrawRequired": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "optional": {
                        "description": "When **true,** the recipient does not need to complete this tab to complete the signing process.",
                        "type": "string"
                    },
                    "optionalMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "scaleValue": {
                        "description": " Sets the size for the InitialHere tab. It can be value from 0.5 to 1.0, where 1.0 represents full size and 0.5 is 50% size.",
                        "type": "string"
                    },
                    "scaleValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -7)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+2, -7)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to initial the document. May\nbe optional.\n",
                "x-ds-definition-name": "initialHere",
                "x-ms-summary": "A tab that allows the recipient to initial the document. May\nbe optional.\n"
            },
            "inlineTemplate": {
                "type": "object",
                "properties": {
                    "customFields": {
                        "$ref": "#/components/schemas/AccountCustomFields"
                    },
                    "documents": {
                        "description": "A complex element that contains details about the documents associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/document"
                        }
                    },
                    "envelope": {
                        "$ref": "#/components/schemas/envelope"
                    },
                    "recipients": {
                        "$ref": "#/components/schemas/EnvelopeRecipients"
                    },
                    "sequence": {
                        "description": "Specifies the order in which templates are overlaid.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "inlineTemplate",
                "description": "",
                "x-ms-summary": ""
            },
            "inPersonSigner": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoNavigation": {
                        "description": "When **true,** autonavigation is set for the recipient.\n",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "canSignOffline": {
                        "description": "When **true,** specifies that the signer can perform the signing ceremony offline.",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion. \n\nIf this number is greater than `0` for a signing group, only the user who previously completed may sign again.",
                        "type": "string"
                    },
                    "creationReason": {
                        "description": "The reason why the recipient was created (for example, `sender`). This property is read-only.",
                        "type": "string"
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "defaultRecipient": {
                        "description": "When **true,**\nthis is the default recipient for the envelope.\nThis option is used when creating an envelope from a template.\n",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The signer's email address in an eNotary flow.\n\nUse only when `inPersonSigningType` is `notary`.\nFor regular in-person-signer flow, use `signerEmail` instead.\n",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "excludedDocuments": {
                        "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "hostEmail": {
                        "description": "The email address of the signing host.\nThis is the DocuSign user that is hosting the in-person signing session.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `email` instead.\n\nMaximum Length: 100 characters.\n",
                        "type": "string"
                    },
                    "hostEmailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "hostName": {
                        "description": "The name of the signing host.\nThis is the DocuSign user that is hosting the in-person signing session.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `name` instead.\n\nMaximum Length: 100 characters.\n",
                        "type": "string"
                    },
                    "hostNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "inPersonSigningType": {
                        "description": "Specifies whether the envelope uses the eNotary feature.\nValid values:\n\n* `inPersonSigner`: The envelope uses the normal in-person signing flow.\n* `notary`: The envelope uses the eNotary in-person signing flow.\n",
                        "type": "string"
                    },
                    "inPersonSigningTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The signer's full legal name in an eNotary flow.\n\nRequired when `inPersonSigningType` is `notary`.\nFor a regular in-person-signer flow, use `signerName` instead.\n\nMaximum Length: 100 characters.\n",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "notaryHost": {
                        "$ref": "#/components/schemas/notaryHost"
                    },
                    "notaryId": {
                        "description": "",
                        "type": "string"
                    },
                    "note": {
                        "description": "A note sent to the in-person signer in the signing email.\nThis note is visible only to this recipient.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "offlineAttributes": {
                        "$ref": "#/components/schemas/offlineAttributes"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientSignatureProviders": {
                        "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientSignatureProvider"
                        }
                    },
                    "recipientSuppliesTabs": {
                        "description": "When **true,** specifies that the recipient creates the tabs.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireSignerCertificate": {
                        "description": "By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\n\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.",
                        "type": "string"
                    },
                    "requireSignOnPaper": {
                        "description": "When **true,** the signer must print, sign, and upload or fax the signed documents to DocuSign.",
                        "type": "string"
                    },
                    "requireUploadSignature": {
                        "description": "When **true,** the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.",
                        "type": "string"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signatureInfo": {
                        "$ref": "#/components/schemas/recipientSignatureInformation"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signerEmail": {
                        "description": "The in-person signer's email address.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `email` instead.\n\nMaximum Length: 100 characters.\n\n",
                        "type": "string"
                    },
                    "signerEmailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signerFirstName": {
                        "description": "The signer's first name.",
                        "type": "string"
                    },
                    "signerFirstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signerLastName": {
                        "description": "The signer's last name.",
                        "type": "string"
                    },
                    "signerLastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signerName": {
                        "description": "Required. The full legal name of a signer for the envelope. \n\nMaximum Length: 100 characters.\n\n\n",
                        "type": "string"
                    },
                    "signerNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signInEachLocation": {
                        "description": "When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
                        "type": "string"
                    },
                    "signInEachLocationMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupId": {
                        "description": "Not applicable. You cannot use a signing group for an in-person signer.",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "Not applicable.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "The code associated with the recipient's status. This property is read-only.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "description": "Contains information about an in-person recipient. This is a DocuSign user,\nacting as a Signing Host,\nwho is in the same physical location as the signer.\nTo learn about the fields used\nfor the eNotary feature,\nsee the [EnvelopeRecipients resource][resource].\n\n[resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient\n",
                "x-ds-definition-name": "inPersonSigner",
                "x-ms-summary": "Contains information about an in-person recipient. This is a DocuSign user,\nacting as a Signing Host,\nwho is in the same physical location as the signer.\nTo learn about the fields used\nfor the eNotary feature,\nsee the [EnvelopeRecipients resource][resource].\n\n[resource]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#in-person-signer-recipient\n"
            },
            "integratedConnectUserInfoList": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    },
                    "users": {
                        "description": "User management information.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectUserInfo"
                        }
                    }
                },
                "x-ds-definition-name": "integratedConnectUserInfoList",
                "description": "",
                "x-ms-summary": ""
            },
            "integratedUserInfoList": {
                "type": "object",
                "properties": {
                    "allUsersSelected": {
                        "description": "",
                        "type": "string"
                    },
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    },
                    "users": {
                        "description": "User management information.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    }
                },
                "x-ds-definition-name": "integratedUserInfoList",
                "description": "",
                "x-ms-summary": ""
            },
            "intermediary": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "consentDetailsList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentDetails"
                        }
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The recipient's email address. Notification of the document to sign is sent to this email address. \n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "emailRecipientPostSigningURL": {
                        "description": "",
                        "type": "string"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "excludedDocuments": {
                        "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "firstName": {
                        "description": "The recipient's first name. Maximum Length: 50 characters.",
                        "type": "string"
                    },
                    "firstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fullName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fullNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The recipient's last name.",
                        "type": "string"
                    },
                    "lastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipientÃ¢ÂÂs email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.\n",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "The code associated with the recipient's status. This property is read-only.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "description": "Contains information about an intermediary recipient. An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added.",
                "x-ds-definition-name": "intermediary",
                "x-ms-summary": "Contains information about an intermediary recipient. An intermediary is a recipient who can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order, unless subsequent agents, editors or intermediaries are added."
            },
            "jurisdiction": {
                "type": "object",
                "properties": {
                    "allowSystemCreatedSeal": {
                        "description": "When **true,** the seal can be generated by the platform.",
                        "type": "string"
                    },
                    "allowUserUploadedSeal": {
                        "description": "When **true,** the seal can be uploaded by the user.",
                        "type": "string"
                    },
                    "commissionIdInSeal": {
                        "description": "When **true,** the notary's `comissionId` appears in the seal.",
                        "type": "string"
                    },
                    "county": {
                        "description": "The county of the jurisdiction.",
                        "type": "string"
                    },
                    "countyInSeal": {
                        "description": "When **true,** the county name appears in the seal.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "When **true,** this jurisdiction is enabled.",
                        "type": "string"
                    },
                    "jurisdictionId": {
                        "description": "The ID of the jurisdiction.\nThe following jurisdictions\nare supported:\n\n-  `5 - California`\n-  `6 - Colorado`\n-  `9 - Florida`\n-  `10 - Georgia`\n-  `12 - Idaho`\n-  `13 - Illinois`\n-  `14 - Indiana`\n-  `15 - Iowa`\n-  `17 - Kentucky`\n-  `23 - Minnesota`\n-  `25 - Missouri`\n-  `30 - New Jersey`\n-  `32 - New York`\n-  `33 - North Carolina`\n-  `35 - Ohio`\n-  `37 - Oregon`\n-  `38 - Pennsylvania`\n-  `40 - South Carolina`\n-  `43 - Texas`\n-  `44 - Utah`\n-  `47 - Washington`\n-  `48 - West Virginia`\n-  `49 - Wisconsin`\n-  `62 - Florida Commissioner of Deeds`\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the jurisdiction. Typically the state name.",
                        "type": "string"
                    },
                    "notaryPublicInSeal": {
                        "description": "When **true,** the name of the notary appears in the seal.",
                        "type": "string"
                    },
                    "stateNameInSeal": {
                        "description": "When **true,** the name of the state appears in the seal.",
                        "type": "string"
                    }
                },
                "description": "Describes the jurisdiction of a notary.\nThis is read-only object.",
                "x-ds-definition-name": "jurisdiction",
                "x-ms-summary": "Describes the jurisdiction of a notary.\nThis is read-only object."
            },
            "jurisdictionSummary": {
                "type": "object",
                "properties": {
                    "authorizedForIPen": {
                        "description": "",
                        "type": "string"
                    },
                    "authorizedForRon": {
                        "description": "",
                        "type": "string"
                    },
                    "jurisdictionId": {
                        "description": "The ID of the jurisdiction.\nThe following jurisdictions\nare supported:\n\n-  `5 - California`\n-  `6 - Colorado`\n-  `9 - Florida`\n-  `10 - Georgia`\n-  `12 - Idaho`\n-  `13 - Illinois`\n-  `14 - Indiana`\n-  `15 - Iowa`\n-  `17 - Kentucky`\n-  `23 - Minnesota`\n-  `25 - Missouri`\n-  `30 - New Jersey`\n-  `32 - New York`\n-  `33 - North Carolina`\n-  `35 - Ohio`\n-  `37 - Oregon`\n-  `38 - Pennsylvania`\n-  `40 - South Carolina`\n-  `43 - Texas`\n-  `44 - Utah`\n-  `47 - Washington`\n-  `48 - West Virginia`\n-  `49 - Wisconsin`\n-  `62 - Florida Commissioner of Deeds`\n",
                        "type": "string"
                    },
                    "jurisdictionName": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "jurisdictionSummary",
                "description": "",
                "x-ms-summary": ""
            },
            "lastName": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that displays the recipient's last name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n",
                "x-ds-definition-name": "lastName",
                "x-ms-summary": "A tab that displays the recipient's last name. This tab\ntakes the recipient's name as entered in the recipient\ninformation, splits it into sections based on spaces and\nuses the last section as the last name.\n"
            },
            "linkedExternalPrimaryAccount": {
                "type": "object",
                "properties": {
                    "accountName": {
                        "description": "The name on the account.",
                        "type": "string"
                    },
                    "configurationId": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "linkId": {
                        "description": "",
                        "type": "string"
                    },
                    "pdfFieldHandlingOption": {
                        "description": "",
                        "type": "string"
                    },
                    "recipientAuthRequirements": {
                        "$ref": "#/components/schemas/externalPrimaryAccountRecipientAuthRequirements"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* `sent` - The envelope is sent to the recipients. \n* `created` - The envelope is saved as a draft and can be modified to be sent later.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "linkedExternalPrimaryAccount",
                "description": "",
                "x-ms-summary": ""
            },
            "list": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "listItems": {
                        "description": "The list of values that can be selected by senders. The list values are separated by semi-colons. Example: [one;two;three;four]\n\nMaximum Length of listItems:  2048 characters.\nMaximum Length of items in the list: 100 characters. \n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listItem"
                        }
                    },
                    "listSelectedValue": {
                        "description": "The value in the list that is selected by default.",
                        "type": "string"
                    },
                    "listSelectedValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderRequired": {
                        "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                        "type": "string"
                    },
                    "senderRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "The value to use when the item is selected.",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "This tab offers a list of options to choose from.\nThe `listItems`\nproperty contains a list of\n[`listItem`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/)\nobjects to specify the selectable options.\n",
                "x-ds-definition-name": "list",
                "x-ms-summary": "This tab offers a list of options to choose from.\nThe `listItems`\nproperty contains a list of\n[`listItem`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/)\nobjects to specify the selectable options.\n"
            },
            "listCustomField": {
                "type": "object",
                "properties": {
                    "configurationType": {
                        "description": "If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "fieldId": {
                        "description": "The ID of the custom field.",
                        "type": "string"
                    },
                    "listItems": {
                        "description": "An array of strings that represents the options in a list.\n\nMaximum length: 2048 characters, but each individual option string can only be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "description": "The name of the custom field.",
                        "type": "string"
                    },
                    "required": {
                        "description": "When **true,** senders are required to select an option from the list before they can send the envelope.",
                        "type": "string"
                    },
                    "show": {
                        "description": "When **true,** the field displays in the **Envelope Custom Fields** section when a user creates or sends an envelope.",
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of the custom field. This is the value that the user who creates or sends the envelope selects from the list.",
                        "type": "string"
                    }
                },
                "description": "This object represents a list custom field from which envelope creators and senders can select custom data.",
                "x-ds-definition-name": "listCustomField",
                "x-ms-summary": "This object represents a list custom field from which envelope creators and senders can select custom data."
            },
            "listItem": {
                "type": "object",
                "properties": {
                    "selected": {
                        "description": "When **true,** indicates that this item is the default selection shown to a signer. \n\nOnly one selection can be set as the default.",
                        "type": "string"
                    },
                    "selectedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "text": {
                        "description": "Specifies the text that is shown in the dropdown list. ",
                        "type": "string"
                    },
                    "textMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value that is used when the list item is selected.",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "One of the selectable items\nin the `listItems` property\nof a [`list`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/) tab.",
                "x-ds-definition-name": "listItem",
                "x-ms-summary": "One of the selectable items\nin the `listItems` property\nof a [`list`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/) tab."
            },
            "localePolicy": {
                "type": "object",
                "properties": {
                    "addressFormat": {
                        "description": "Specifies the address format. Valid values:\n\n- `en_us`\n- `ja_jp`\n- `zh_cn_tw`\n",
                        "type": "string"
                    },
                    "addressFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowRegion": {
                        "description": "",
                        "type": "string"
                    },
                    "calendarType": {
                        "description": "Specifies the type of calendar. Valid values:\n\n- `gregorian`\n- `japanese`\n- `buddhist`\n",
                        "type": "string"
                    },
                    "calendarTypeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "cultureName": {
                        "description": "The two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code.",
                        "type": "string"
                    },
                    "cultureNameMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "currencyCode": {
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.\n",
                        "type": "string"
                    },
                    "currencyCodeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "currencyNegativeFormat": {
                        "description": "Determines how negative currency values\nare displayed.\n\nIn most cases, you should not need to change\nthis value. See [Explicitly define formatting](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#explicitly-define-formatting).\n\nValid values:\n\n- `Default`<br>\n  `0`\n- `OPar_CSym_1_Comma_234_Comma_567_Period_89_CPar`<br>\n  `($1,234,567.89)`\n- `Minus_CSym_1_Comma_234_Comma_567_Period_89`<br>\n  `-$1,234,567.89`\n- `Minus_CSym_Space_1_Period_234_Period_567_Comma_89`<br>\n  `-$ 1.234.567,89`\n- `CSym_Space_Minus_1_Period_234_Period_567_Comma_89`<br>\n  `$ -1.234.567,89`\n- `Minus_1_Period_234_Period_567_Comma_89_Space_CSym`<br>\n  `-1.234.567,89 $`\n- `OPar_1_Space_234_Space_567_Comma_89_Space_CSym_CPar`<br>\n  `(1 234 567,89 $)`\n- `Minus_1_Space_234_Space_567_Comma_89_Space_CSym`<br>\n  `-1 234 567,89 $`\n- `CSym_Minus_1_Quote_234_Quote_567_Period_89`<br>\n  `$-1'234'567.89`\n- `Minus_CSym_1_Period_234_Period_567_Comma_89`<br>\n  `-$1.234.567,89`\n- `Minus_CSym_1_Comma_234_Comma_567`<br>\n  `-$1,234,567`\n- `Minus_CSym_12_Comma_34_Comma_567_Period_89`<br>\n  `-$12,34,567.89`\n- `OPar_CSym_Space_1234_Comma_567_Period_89_CPar`<br>\n  `($ 1234,567.89)`\n- `CSym_Space_Minus_12_Comma_34_Comma_567_Period_89`<br>\n  `$ -12,34,567.89`\n- `CSym_Minus_12_Comma_34_Comma_567_Period_89`<br>\n  `$-1,234,567.89`\n- `CSym_Space_Minus_1_Space_234_Space_567_Comma_89`<br>\n  `$ -1 234 567,89`\n- `CSym_Space_Minus_1_Space_234_Space_567_Period_89`<br>\n  `$ -1 234 567.89`\n- `Minus_CSym_Space_1_Space_234_Space_567_Comma_89`<br>\n  `-$ 1 234 567,89`\n- `Minus_1_Space_234_Space_567_Comma_89_CSym`<br>\n  `-1 234 567,89$`\n- `Minus_1_Space_234_Space_567_Period_89_Space_CSym`<br>\n  `-1 234 567.89 $`\n- `OPar_CSym_1_Period_234_Period_567_CPar`<br>\n  `(1.234.567)`\n- `OPar_CSym_1_Comma_234_Comma_567_CPar`<br>\n  `($1,234,567)`\n- `Minus_1_Comma_234_Comma_567_Period_89_Space_CSym`<br>\n  `-1,234,567.89 $`\n- `Minus_CSym_Space_1_Comma_234_Comma_567_Period_89`<br>\n  `-$ 1,234,567.89`\n- `OPar_CSym_Space_1_Period_234_Period_567_Comma_89_CPar`<br>\n  `($ 1.234.567,89)`\n- `OPar_CSym_Space_1_Quote_234_Quote_567_Period_89_CPar`<br>\n  `($ 1'234'567.89)`\n- `OPar_CSym_Space_1_Space_234_Space_567_Comma_89_CPar`<br>\n  `($ 1 234 567,89)`\n- `OPar_CSym_Space_1_Space_234_Space_567_Period_89_CPar`<br>\n  `($ 1 234 567.89)`\n- `OPar_CSym_12_Comma_34_Comma_567_Period_89_CPar`<br>\n  `($12,34,567.89)`\n- `OPar_CSym_Space_12_Comma_34_Comma_567_Period_89_CPar`<br>\n  `($ 12,34,567.89)`\n- `OPar_1_Comma_234_Comma_567_Period_89_Space_CSym_CPar`<br>\n  `(1,234,567.89 $)`\n- `OPar_1_Period_234_Period_567_Comma_89_Space_CSym_CPar`<br>\n  `(1.234.567,89 $)`\n- `OPar_1_Space_234_Space_567_Comma_89_CSym_CPar`<br>\n  `(1 234 567,89$)`\n- `OPar_1_Space_234_Space_567_Period_89_Space_CSym_CPar`<br>\n  `(1 234 567.89 $)`\n- `OPar_CSym_Space_1_Comma_234_Comma_567_Period_89_CPar`<br>\n  `($ 1,234,567.89)`\n- `Minus_CSym_1_Period_234_Period_567`<br>\n  `-$ 1.234.567`\n- `Minus_CSym_Space_1_Quote_234_Quote_567_Period_89`<br>\n  `-$ 1'234'567.89`\n- `Minus_CSym_Space_1_Space_234_Space_567_Period_89`<br>\n  `-$ 1 234 567.89`\n- `CSym_Minus_1_Comma_234_Comma_567`<br>\n  `$-1,234,567`\n- `CSym_Minus_1_Period_234_Period_567`<br>\n  `$-1.234.567`\n- `CSym_Space_Minus_1_Quote_234_Quote_567_Period_89`<br>\n  `$ -1'234'567.89`\n- `CSym_Space_Minus_1_Comma_234_Comma_567_Period_89`<br>\n  `$ -1,234,567.89`\n- `Minus_CSym_Space_12_Comma_34_Comma_567_Period_89`<br>\n  `-$ 12,34,567.89`\n- `Minus_1_Period_234_Period_567_Space_CSym`<br>\n  `-123.456.789 $`\n- `CSym_Minus_1_Space_234_Space_567_Comma_89`<br>\n  `$-123 456 789,00`\n- `Minus_1_Quote_234_Quote_567_Period_89_Space_CSym`<br>\n  `-123'456'789.00 $`\n- `CSym_1_Comma_234_Comma_567_Period_89_Minus`<br>\n  `$123,456,789.00-`\n- `CSym_Minus_1_Period_234_Period_567_Comma_89`<br>\n  `$-123.456.789,00`\n- `OPar_CSym_1_Period_234_Period_567_Comma_89_CPar`<br>\n  `($123.456.789,00)`\n- `Minus_CSym_1234_Comma_567_Period_89`<br>\n  `-$123456,789.00`\n- `Minus_CSym_1_Space_234_Space_567_Comma_89`<br>\n  `-$123 456 789,00`\n",
                        "type": "string"
                    },
                    "currencyNegativeFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "currencyPositiveFormat": {
                        "description": "Determines how positive currency values\nare displayed.\n\nIn most cases, you should not need to change\nthis value. See [Explicitly define formatting](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#explicitly-define-formatting).\n\nValid values:\n\n\n- `Default`<br>\n  Uses the current locale.\n- `CSym_1_Comma_234_Comma_567_Period_89`<br>\n  `$1,234,567.89`\n- `CSym_Space_1_Period_234_Period_567_Comma_89`<br>\n  `$ 1.234.567,89`\n- `Leading_1_Period_234_Period_567_Comma_89_Space_CSym`<br>\n  `1.234.567,89 $`\n- `Leading_1_Space_234_Space_567_Comma_89_Space_CSym`<br>\n  `1 234 567,89 $`\n- `CSym_Space_1_Quote_234_Quote_567_Period_89`<br>\n  `$ 1'234'567.89`\n- `CSym_1_Comma_234_Comma_567`<br>\n  `$1,234,567`\n- `CSym_Space_12_Comma_34_Comma_567_Period_89`<br>\n  `$ 12,34,567.89`\n- `CSym_12_Comma_34_Comma_567_Period_89`<br>\n  `$12,34,567.89`\n- `CSym_Space_1234_Comma_567_Period_89`<br>\n  `$ 1234,567.89`\n- `Leading_1_Space_234_Space_567_Period_89_Space_CSym`<br>\n  `1 234 567.89 $`\n- `CSym_Space_1_Space_234_Space_567_Comma_89`<br>\n  `$ 1 234 567,89`\n- `CSym_Space_1_Space_234_Space_567_Period_89`<br>\n  `$ 1 234 567.89`\n- `Leading_1_Space_234_Space_567_Comma_89_CSym`<br>\n  `1 234 567,89$`\n- `CSym_1_Period_234_Period_567`<br>\n  `$1.234.567`\n- `Leading_1_Comma_234_Comma_567_Period_89_Space_CSym`<br>\n  `1,234,567. $` (New Armenian)\n- `CSym_Space_1_Comma_234_Comma_567_Period_89`<br>\n  `$ 1,234,567.89` (Persian)\n- `CSym_1_Period_234_Period_567_Comma_89`<br>\n  `$123.456.789,00` (es-CO)\n- `Leading_1_Quote_234_Quote_567_Period_89_Space_CSym`<br>\n  `123'456'789.00 $` (fr-ch)\n- `CSym_1234_Comma_567_Period_89`<br>\n  `$123456,789.00` (es-PR)\n- `Leading_1_Period_234_Period_567_Space_CSym`<br>\n  `123.456.789 $`\n- `CSym_1_Space_234_Space_567_Comma_89`<br>\n  `$123 456 789,00` (en-ZA, es-CR)\n",
                        "type": "string"
                    },
                    "currencyPositiveFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "customDateFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "customSignDateFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "customSignTimeFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "customTimeFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "dateFormat": {
                        "description": "Specifies the date format. Valid values:\n\n- `default` <br> used the UI's \n- `longformat` <br> use the UI's long format\n- `dd_mm_yy` <br> dd-MM-yy\n- `dd_mmm_yy` <br> dd-MMM-yy\n- `dd_mm_yyyy` <br> dd-MM-yyyy\n- `dd_mmm_yyyy` <br> dd-MMM-yyyy\n- `ddmmmmyyyy` <br> dd MMMM yyyy\n- `ddmmyyyy` <br> dd/MM/yyyy\n- `ddmmyyyy_de` <br> dd.MM.yyyy\n- `dmyyyy` <br> d/M/yyyy\n- `d_m_yyyy` <br> d-M-yyyy\n- `mmmd_yyyy` <br> MMM d, yyyy\n- `mmm_dd_yyyy` <br> MMM-dd-yyyy\n- `mmmmd_yyyy` <br> MMMM d, yyyy\n- `mm_dd_yyyy` <br> MM-dd-yyyy\n- `mdyyyy` <br> M/d/yyyy\n- `yyyy_mmm_dd` <br> yyyy-MMM-dd\n- `yyyy_mm_dd` <br> yyyy-MM-dd\n- `yyyymmdd` <br> yyyy/MM/dd\n- `yyyymd` <br> yyyy/M/d\n- `custom` <br> Customer set own value\n- `mmddyyyy` <br> MM/dd/yyyy\n- `mmddyy` <br> MM/dd/yy\n- `yyyy_mmmm_d` <br> yyyy MMMM d\n",
                        "type": "string"
                    },
                    "dateFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "effectiveAddressFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveCalendarType": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveCurrencyCode": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveCurrencyNegativeFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveCurrencyPositiveFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveCustomDateFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveCustomTimeFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveDateFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveInitialFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveNameFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveTimeFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "effectiveTimeZone": {
                        "description": "",
                        "type": "string"
                    },
                    "initialFormat": {
                        "description": "When a user is required to enter their initials,\nthis property\nspecifies how initials are rendered.\nThe examples show the\ninitials for \"William Henry Gates\".\n\n\n- `first1last1`<br> \"WG\"\n- `last2`<br> \"GA\"\n- `first2`<br> \"WI\"\n- `last2_cjk`<br> first two characters from last name in CJK characters.\n\n<!-- Components/BusinessObjects/Models/ConcealedApiRestModels/localePolicyEnums.cs -->\n",
                        "type": "string"
                    },
                    "initialFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "nameFormat": {
                        "description": "Describes how names are displayed. Valid values:\n\n- `first_middle_last`<br>William Henry Gates\n- `full`<br>Mr William Henry Gates III\n- `last_first`<br>Gates William\n- `lastfirst`<br>GatesWilliam\n- `last_first_cjk`<br>Gates William only with CJK characters\n- `lastfirst_cjk`<br>GatesWilliam only with CJK characters\n\n<!-- Web/RestApi/Models/v2_1/localePolicy.cs#L341-L366 -->\n",
                        "type": "string"
                    },
                    "nameFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signDateFormat": {
                        "description": "The format for the signature date. Valid values are:\n\n- `d/M/yyyy`\n- `dd-MM-yy`\n- `dd-MMM-yy`\n- `dd-MM-yyyy`\n- `dd.MM.yyyy`\n- `dd-MMM-yyyy`\n- `dd MMMM yyyy`\n- `M/d/yyyy`\n- `MM-dd-yyyy`\n- `MM/dd/yyyy`\n- `MM/dd/yy`\n- `MMM-dd-yyyy`\n- `MMM d, yyyy`\n- `MMMM d, yyyy`\n- `yyyy-MM-dd`\n- `yyyy-MMM-dd`\n- `yyyy/MM/dd`\n- `yyyy MMMM d`\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signDateFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "signTimeFormat": {
                        "description": "The format for the signature time. Valid values are:\n\n- `none`\n- `HH:mm`\n- `h:mm`\n- `HH:mm:ss`\n- `h:mm:ss`\n",
                        "type": "string"
                    },
                    "signTimeFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "timeFormat": {
                        "description": "Specifies the time format. Valid values:\n\n- `none`      <br>None\n- `hh_mm`     <br>hh:mm \n- `hhmm`      <br>HH:mm\n- `hhmmss`    <br>HH:mm:ss\n- `hhmmsstt`  <br>HH:mm:ss tt\n- `hhmmtt`    <br> HH:mm tt\n- `hmm`       <br>h:mm\n- `hmmss`     <br>h:mm:ss\n- `hmmsstt`   <br>h:mm:ss tt\n- `hmmtt`     <br>h:mm tt\n- `custom`    <br>Customer-set format\n\n<!-- Web/RestApi/Models/v2_1/localePolicy.cs#L501-L546 -->",
                        "type": "string"
                    },
                    "timeFormatMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "timeZone": {
                        "description": "Specifies the time zone. Valid values:\n\n- `TZ_01_AfghanistanStandardTime`\n- `TZ_02_AlaskanStandardTime`\n- `TZ_03_ArabStandardTime`\n- `TZ_04_ArabianStandardTime`\n- `TZ_05_ArabicStandardTime`\n- `TZ_06_ArgentinaStandardTime`\n- `TZ_07_AtlanticStandardTime`\n- `TZ_08_AUS_CentralStandardTime`\n- `TZ_09_AUS_EasternStandardTime`\n- `TZ_10_AzerbaijanStandardTime`\n- `TZ_11_AzoresStandardTime`\n- `TZ_12_BangladeshStandardTime`\n- `TZ_13_CanadaCentralStandardTime`\n- `TZ_14_CapeVerdeStandardTime`\n- `TZ_15_CaucasusStandardTime`\n- `TZ_16_CentralAustraliaStandardTime`\n- `TZ_17_CentralAmericaStandardTime`\n- `TZ_18_CentralAsiaStandardTime`\n- `TZ_19_CentralBrazilianStandardTime`\n- `TZ_20_CentralEuropeStandardTime`\n- `TZ_21_CentralEuropeanStandardTime`\n- `TZ_22_CentralPacificStandardTime`\n- `TZ_23_CentralStandardTime`\n- `TZ_24_CentralStandardTimeMexico`\n- `TZ_25_ChinaStandardTime`\n- `TZ_26_DatelineStandardTime`\n- `TZ_27_E_AfricaStandardTime`\n- `TZ_28_E_AustraliaStandardTime`\n- `TZ_29_E_EuropeStandardTime`\n- `TZ_30_E_SouthAmericaStandardTime`\n- `TZ_31_EasternStandardTime`\n- `TZ_32_EgyptStandardTime`\n- `TZ_33_EkaterinburgStandardTime`\n- `TZ_34_FijiStandardTime`\n- `TZ_35_FLE_StandardTime`\n- `TZ_36_GeorgianStandardTime`\n- `TZ_37_GMT_StandardTime`\n- `TZ_38_GreenlandStandardTime`\n- `TZ_39_GreenwichStandardTime`\n- `TZ_40_GTB_StandardTime`\n- `TZ_41_HawaiianStandardTime`\n- `TZ_42_IndiaStandardTime`\n- `TZ_43_IranStandardTime`\n- `TZ_44_IsraelStandardTime`\n- `TZ_45_JordanStandardTime`\n- `TZ_46_KaliningradStandardTime`\n- `TZ_47_KamchatkaStandardTime`\n- `TZ_48_KoreaStandardTime`\n- `TZ_49_MagadanStandardTime`\n- `TZ_50_MauritiusStandardTime`\n- `TZ_51_MidAtlanticStandardTime`\n- `TZ_52_MiddleEastStandardTime`\n- `TZ_53_MontevideoStandardTime`\n- `TZ_54_MoroccoStandardTime`\n- `TZ_55_MountainStandardTime`\n- `TZ_56_MountainStandardTimeMMexico`\n- `TZ_57_MyanmarStandardTime`\n- `TZ_58_N_CentralAsiaStandardTime`\n- `TZ_59_NamibiaStandardTime`\n- `TZ_60_NepalStandardTime`\n- `TZ_61_NewZealandStandardTime`\n- `TZ_62_NewfoundlandStandardTime`\n- `TZ_63_NorthAsiaEastStandardTime`\n- `TZ_64_NorthAsiaStandardTime`\n- `TZ_65_PacificSAStandardTime`\n- `TZ_66_PacificStandardTime`\n- `TZ_67_PacificStandardTimeMexico`\n- `TZ_68_PakistanStandardTime`\n- `TZ_69_ParaguayStandardTime`\n- `TZ_70_RomanceStandardTime`\n- `TZ_71_RussianStandardTime`\n- `TZ_72_SAEasternStandardTime`\n- `TZ_73_SAPacificStandardTime`\n- `TZ_74_SAWesternStandardTime`\n- `TZ_75_SamoaStandardTime`\n- `TZ_76_SE_AsiaStandardTime`\n- `TZ_77_SingaporeStandardTime`\n- `TZ_78_SouthAfricaStandardTime`\n- `TZ_79_SriLankaStandardTime`\n- `TZ_80_SyriaStandardTime`\n- `TZ_81_TaipeiStandardTime`\n- `TZ_82_TasmaniaStandardTime`\n- `TZ_83_TokyoStandardTime`\n- `TZ_84_TongaStandardTime`\n- `TZ_85_TurkeyStandardTime`\n- `TZ_86_UlaanbaatarStandardTime`\n- `TZ_87_US_EasternStandardTime`\n- `TZ_88_USMountainStandardTime`\n- `TZ_89_VenezuelaStandardTime`\n- `TZ_90_VladivostokStandardTime`\n- `TZ_91_W_AustraliaStandardTime`\n- `TZ_92_W_CentralAfricaStandardTime`\n- `TZ_93_W_EuropeStandardTime`\n- `TZ_94_WestAsiaStandardTime`\n- `TZ_95_WestPacificStandardTime`\n- `TZ_96_YakutskStandardTime`\n",
                        "type": "string"
                    },
                    "timeZoneMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    }
                },
                "x-ds-definition-name": "localePolicy",
                "description": "",
                "x-ms-summary": ""
            },
            "localePolicyTab": {
                "type": "object",
                "properties": {
                    "addressFormat": {
                        "description": "Specifies the address format. Valid values:\n\n- `en_us`\n- `ja_jp`\n- `zh_cn_tw`\n",
                        "type": "string"
                    },
                    "calendarType": {
                        "description": "Specifies the type of calendar. Valid values:\n\n- `gregorian`\n- `japanese`\n- `buddhist`\n",
                        "type": "string"
                    },
                    "cultureName": {
                        "description": "The two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code.",
                        "type": "string"
                    },
                    "currencyCode": {
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.\n\nSupported formats:\n\n- `AED`\n- `AFN`\n- `ALL`\n- `AMD`\n- `ANG`\n- `AOA`\n- `ARS`\n- `AUD`\n- `AWG`\n- `AZN`\n- `BAM`\n- `BBD`\n- `BDT`\n- `BGN`\n- `BHD`\n- `BIF`\n- `BMD`\n- `BND`\n- `BOB`\n- `BOV`\n- `BRL`\n- `BSD`\n- `BTN`\n- `BWP`\n- `BYN`\n- `BYR`\n- `BZD`\n- `CAD`\n- `CDF`\n- `CHE`\n- `CHF`\n- `CHW`\n- `CLF`\n- `CLP`\n- `CNY`\n- `COP`\n- `COU`\n- `CRC`\n- `CUC`\n- `CUP`\n- `CVE`\n- `CZK`\n- `DJF`\n- `DKK`\n- `DOP`\n- `DZD`\n- `EGP`\n- `ERN`\n- `ETB`\n- `EUR`\n- `FJD`\n- `FKP`\n- `GBP`\n- `GEL`\n- `GHS`\n- `GIP`\n- `GMD`\n- `GNF`\n- `GTQ`\n- `GYD`\n- `HKD`\n- `HNL`\n- `HRK`\n- `HTG`\n- `HUF`\n- `IDR`\n- `ILS`\n- `INR`\n- `IQD`\n- `IRR`\n- `ISK`\n- `JMD`\n- `JOD`\n- `JPY`\n- `KES`\n- `KGS`\n- `KHR`\n- `KMF`\n- `KPW`\n- `KRW`\n- `KWD`\n- `KYD`\n- `KZT`\n- `LAK`\n- `LBP`\n- `LKR`\n- `LRD`\n- `LSL`\n- `LYD`\n- `MAD`\n- `MDL`\n- `MGA`\n- `MKD`\n- `MMK`\n- `MNT`\n- `MOP`\n- `MRO`\n- `MUR`\n- `MVR`\n- `MWK`\n- `MXN`\n- `MXV`\n- `MYR`\n- `MZN`\n- `NAD`\n- `NGN`\n- `NIO`\n- `NOK`\n- `NPR`\n- `NZD`\n- `OMR`\n- `PAB`\n- `PEN`\n- `PGK`\n- `PHP`\n- `PKR`\n- `PLN`\n- `PYG`\n- `QAR`\n- `RON`\n- `RSD`\n- `RUB`\n- `RWF`\n- `SAR`\n- `SBD`\n- `SCR`\n- `SDG`\n- `SEK`\n- `SGD`\n- `SHP`\n- `SLL`\n- `SOS`\n- `SRD`\n- `SSP`\n- `STD`\n- `SVC`\n- `SYP`\n- `SZL`\n- `THB`\n- `TJS`\n- `TMT`\n- `TND`\n- `TOP`\n- `TRY`\n- `TTD`\n- `TWD`\n- `TZS`\n- `UAH`\n- `UGX`\n- `USD`\n- `USN`\n- `UYI`\n- `UYU`\n- `UZS`\n- `VEF`\n- `VND`\n- `VUV`\n- `WST`\n- `XAF`\n- `XAG`\n- `XAU`\n- `XBA`\n- `XBB`\n- `XBC`\n- `XBD`\n- `XCD`\n- `XDR`\n- `XOF`\n- `XPD`\n- `XPF`\n- `XPT`\n- `XSU`\n- `XTS`\n- `XUA`\n- `XXX`\n- `YER`\n- `ZAR`\n- `ZMW`\n- `ZWL`\n",
                        "type": "string"
                    },
                    "currencyNegativeFormat": {
                        "description": "Determines how negative currency values\nare displayed.\n\nIn most cases, you should not need to change\nthis value. See [Explicitly define formatting](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#explicitly-define-formatting).\n\nValid values:\n\n- `Default`<br>\n  `0`\n- `OPar_CSym_1_Comma_234_Comma_567_Period_89_CPar`<br>\n  `($1,234,567.89)`\n- `Minus_CSym_1_Comma_234_Comma_567_Period_89`<br>\n  `-$1,234,567.89`\n- `Minus_CSym_Space_1_Period_234_Period_567_Comma_89`<br>\n  `-$ 1.234.567,89`\n- `CSym_Space_Minus_1_Period_234_Period_567_Comma_89`<br>\n  `$ -1.234.567,89`\n- `Minus_1_Period_234_Period_567_Comma_89_Space_CSym`<br>\n  `-1.234.567,89 $`\n- `OPar_1_Space_234_Space_567_Comma_89_Space_CSym_CPar`<br>\n  `(1 234 567,89 $)`\n- `Minus_1_Space_234_Space_567_Comma_89_Space_CSym`<br>\n  `-1 234 567,89 $`\n- `CSym_Minus_1_Quote_234_Quote_567_Period_89`<br>\n  `$-1'234'567.89`\n- `Minus_CSym_1_Period_234_Period_567_Comma_89`<br>\n  `-$1.234.567,89`\n- `Minus_CSym_1_Comma_234_Comma_567`<br>\n  `-$1,234,567`\n- `Minus_CSym_12_Comma_34_Comma_567_Period_89`<br>\n  `-$12,34,567.89`\n- `OPar_CSym_Space_1234_Comma_567_Period_89_CPar`<br>\n  `($ 1234,567.89)`\n- `CSym_Space_Minus_12_Comma_34_Comma_567_Period_89`<br>\n  `$ -12,34,567.89`\n- `CSym_Minus_12_Comma_34_Comma_567_Period_89`<br>\n  `$-1,234,567.89`\n- `CSym_Space_Minus_1_Space_234_Space_567_Comma_89`<br>\n  `$ -1 234 567,89`\n- `CSym_Space_Minus_1_Space_234_Space_567_Period_89`<br>\n  `$ -1 234 567.89`\n- `Minus_CSym_Space_1_Space_234_Space_567_Comma_89`<br>\n  `-$ 1 234 567,89`\n- `Minus_1_Space_234_Space_567_Comma_89_CSym`<br>\n  `-1 234 567,89$`\n- `Minus_1_Space_234_Space_567_Period_89_Space_CSym`<br>\n  `-1 234 567.89 $`\n- `OPar_CSym_1_Period_234_Period_567_CPar`<br>\n  `(1.234.567)`\n- `OPar_CSym_1_Comma_234_Comma_567_CPar`<br>\n  `($1,234,567)`\n- `Minus_1_Comma_234_Comma_567_Period_89_Space_CSym`<br>\n  `-1,234,567.89 $`\n- `Minus_CSym_Space_1_Comma_234_Comma_567_Period_89`<br>\n  `-$ 1,234,567.89`\n- `OPar_CSym_Space_1_Period_234_Period_567_Comma_89_CPar`<br>\n  `($ 1.234.567,89)`\n- `OPar_CSym_Space_1_Quote_234_Quote_567_Period_89_CPar`<br>\n  `($ 1'234'567.89)`\n- `OPar_CSym_Space_1_Space_234_Space_567_Comma_89_CPar`<br>\n  `($ 1 234 567,89)`\n- `OPar_CSym_Space_1_Space_234_Space_567_Period_89_CPar`<br>\n  `($ 1 234 567.89)`\n- `OPar_CSym_12_Comma_34_Comma_567_Period_89_CPar`<br>\n  `($12,34,567.89)`\n- `OPar_CSym_Space_12_Comma_34_Comma_567_Period_89_CPar`<br>\n  `($ 12,34,567.89)`\n- `OPar_1_Comma_234_Comma_567_Period_89_Space_CSym_CPar`<br>\n  `(1,234,567.89 $)`\n- `OPar_1_Period_234_Period_567_Comma_89_Space_CSym_CPar`<br>\n  `(1.234.567,89 $)`\n- `OPar_1_Space_234_Space_567_Comma_89_CSym_CPar`<br>\n  `(1 234 567,89$)`\n- `OPar_1_Space_234_Space_567_Period_89_Space_CSym_CPar`<br>\n  `(1 234 567.89 $)`\n- `OPar_CSym_Space_1_Comma_234_Comma_567_Period_89_CPar`<br>\n  `($ 1,234,567.89)`\n- `Minus_CSym_1_Period_234_Period_567`<br>\n  `-$ 1.234.567`\n- `Minus_CSym_Space_1_Quote_234_Quote_567_Period_89`<br>\n  `-$ 1'234'567.89`\n- `Minus_CSym_Space_1_Space_234_Space_567_Period_89`<br>\n  `-$ 1 234 567.89`\n- `CSym_Minus_1_Comma_234_Comma_567`<br>\n  `$-1,234,567`\n- `CSym_Minus_1_Period_234_Period_567`<br>\n  `$-1.234.567`\n- `CSym_Space_Minus_1_Quote_234_Quote_567_Period_89`<br>\n  `$ -1'234'567.89`\n- `CSym_Space_Minus_1_Comma_234_Comma_567_Period_89`<br>\n  `$ -1,234,567.89`\n- `Minus_CSym_Space_12_Comma_34_Comma_567_Period_89`<br>\n  `-$ 12,34,567.89`\n- `Minus_1_Period_234_Period_567_Space_CSym`<br>\n  `-123.456.789 $`\n- `CSym_Minus_1_Space_234_Space_567_Comma_89`<br>\n  `$-123 456 789,00`\n- `Minus_1_Quote_234_Quote_567_Period_89_Space_CSym`<br>\n  `-123'456'789.00 $`\n- `CSym_1_Comma_234_Comma_567_Period_89_Minus`<br>\n  `$123,456,789.00-`\n- `CSym_Minus_1_Period_234_Period_567_Comma_89`<br>\n  `$-123.456.789,00`\n- `OPar_CSym_1_Period_234_Period_567_Comma_89_CPar`<br>\n  `($123.456.789,00)`\n- `Minus_CSym_1234_Comma_567_Period_89`<br>\n  `-$123456,789.00`\n- `Minus_CSym_1_Space_234_Space_567_Comma_89`<br>\n  `-$123 456 789,00`\n",
                        "type": "string"
                    },
                    "currencyPositiveFormat": {
                        "description": "Determines how positive currency values\nare displayed.\n\nIn most cases, you should not need to change\nthis value. See [Explicitly define formatting](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#explicitly-define-formatting).\n\nValid values:\n\n\n- `Default`<br>\n  Uses the current locale.\n- `CSym_1_Comma_234_Comma_567_Period_89`<br>\n  `$1,234,567.89`\n- `CSym_Space_1_Period_234_Period_567_Comma_89`<br>\n  `$ 1.234.567,89`\n- `Leading_1_Period_234_Period_567_Comma_89_Space_CSym`<br>\n  `1.234.567,89 $`\n- `Leading_1_Space_234_Space_567_Comma_89_Space_CSym`<br>\n  `1 234 567,89 $`\n- `CSym_Space_1_Quote_234_Quote_567_Period_89`<br>\n  `$ 1'234'567.89`\n- `CSym_1_Comma_234_Comma_567`<br>\n  `$1,234,567`\n- `CSym_Space_12_Comma_34_Comma_567_Period_89`<br>\n  `$ 12,34,567.89`\n- `CSym_12_Comma_34_Comma_567_Period_89`<br>\n  `$12,34,567.89`\n- `CSym_Space_1234_Comma_567_Period_89`<br>\n  `$ 1234,567.89`\n- `Leading_1_Space_234_Space_567_Period_89_Space_CSym`<br>\n  `1 234 567.89 $`\n- `CSym_Space_1_Space_234_Space_567_Comma_89`<br>\n  `$ 1 234 567,89`\n- `CSym_Space_1_Space_234_Space_567_Period_89`<br>\n  `$ 1 234 567.89`\n- `Leading_1_Space_234_Space_567_Comma_89_CSym`<br>\n  `1 234 567,89$`\n- `CSym_1_Period_234_Period_567`<br>\n  `$1.234.567`\n- `Leading_1_Comma_234_Comma_567_Period_89_Space_CSym`<br>\n  `1,234,567. $` (New Armenian)\n- `CSym_Space_1_Comma_234_Comma_567_Period_89`<br>\n  `$ 1,234,567.89` (Persian)\n- `CSym_1_Period_234_Period_567_Comma_89`<br>\n  `$123.456.789,00` (es-CO)\n- `Leading_1_Quote_234_Quote_567_Period_89_Space_CSym`<br>\n  `123'456'789.00 $` (fr-ch)\n- `CSym_1234_Comma_567_Period_89`<br>\n  `$123456,789.00` (es-PR)\n- `Leading_1_Period_234_Period_567_Space_CSym`<br>\n  `123.456.789 $`\n- `CSym_1_Space_234_Space_567_Comma_89`<br>\n  `$123 456 789,00` (en-ZA, es-CR)\n",
                        "type": "string"
                    },
                    "customDateFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "customTimeFormat": {
                        "description": "",
                        "type": "string"
                    },
                    "dateFormat": {
                        "description": "Specifies the date format. Valid values:\n\n- `default` <br> used the UI's \n- `longformat` <br> use the UI's long format\n- `dd_mm_yy` <br> dd-MM-yy\n- `dd_mmm_yy` <br> dd-MMM-yy\n- `dd_mm_yyyy` <br> dd-MM-yyyy\n- `dd_mmm_yyyy` <br> dd-MMM-yyyy\n- `ddmmmmyyyy` <br> dd MMMM yyyy\n- `ddmmyyyy` <br> dd/MM/yyyy\n- `ddmmyyyy_de` <br> dd.MM.yyyy\n- `dmyyyy` <br> d/M/yyyy\n- `d_m_yyyy` <br> d-M-yyyy\n- `mmmd_yyyy` <br> MMM d, yyyy\n- `mmm_dd_yyyy` <br> MMM-dd-yyyy\n- `mmmmd_yyyy` <br> MMMM d, yyyy\n- `mm_dd_yyyy` <br> MM-dd-yyyy\n- `mdyyyy` <br> M/d/yyyy\n- `yyyy_mmm_dd` <br> yyyy-MMM-dd\n- `yyyy_mm_dd` <br> yyyy-MM-dd\n- `yyyymmdd` <br> yyyy/MM/dd\n- `yyyymd` <br> yyyy/M/d\n- `custom` <br> Customer set own value\n- `mmddyyyy` <br> MM/dd/yyyy\n- `mmddyy` <br> MM/dd/yy\n- `yyyy_mmmm_d` <br> yyyy MMMM d\n",
                        "type": "string"
                    },
                    "initialFormat": {
                        "description": "When a user is required to enter their initials,\nthis property\nspecifies how initials are rendered.\nThe examples show the\ninitials for \"William Henry Gates\".\n\n\n- `first1last1`<br> \"WG\"\n- `last2`<br> \"GA\"\n- `first2`<br> \"WI\"\n- `last2_cjk`<br> first two characters from last name in CJK characters.\n\n<!-- Components/BusinessObjects/Models/ConcealedApiRestModels/localePolicyEnums.cs -->\n",
                        "type": "string"
                    },
                    "nameFormat": {
                        "description": "Describes how names are displayed. Valid values:\n\n- `first_middle_last`<br>William Henry Gates\n- `full`<br>Mr William Henry Gates III\n- `last_first`<br>Gates William\n- `lastfirst`<br>GatesWilliam\n- `last_first_cjk`<br>Gates William only with CJK characters\n- `lastfirst_cjk`<br>GatesWilliam only with CJK characters\n\n<!-- Web/RestApi/Models/v2_1/localePolicy.cs#L341-L366 -->\n",
                        "type": "string"
                    },
                    "timeFormat": {
                        "description": "Specifies the time format. Valid values:\n\n- `none`      <br>None\n- `hh_mm`     <br>hh:mm \n- `hhmm`      <br>HH:mm\n- `hhmmss`    <br>HH:mm:ss\n- `hhmmsstt`  <br>HH:mm:ss tt\n- `hhmmtt`    <br> HH:mm tt\n- `hmm`       <br>h:mm\n- `hmmss`     <br>h:mm:ss\n- `hmmsstt`   <br>h:mm:ss tt\n- `hmmtt`     <br>h:mm tt\n- `custom`    <br>Customer-set format\n\n<!-- Web/RestApi/Models/v2_1/localePolicy.cs#L501-L546 -->",
                        "type": "string"
                    },
                    "timeZone": {
                        "description": "Specifies the time zone. Valid values:\n\n- `TZ_01_AfghanistanStandardTime`\n- `TZ_02_AlaskanStandardTime`\n- `TZ_03_ArabStandardTime`\n- `TZ_04_ArabianStandardTime`\n- `TZ_05_ArabicStandardTime`\n- `TZ_06_ArgentinaStandardTime`\n- `TZ_07_AtlanticStandardTime`\n- `TZ_08_AUS_CentralStandardTime`\n- `TZ_09_AUS_EasternStandardTime`\n- `TZ_10_AzerbaijanStandardTime`\n- `TZ_11_AzoresStandardTime`\n- `TZ_12_BangladeshStandardTime`\n- `TZ_13_CanadaCentralStandardTime`\n- `TZ_14_CapeVerdeStandardTime`\n- `TZ_15_CaucasusStandardTime`\n- `TZ_16_CentralAustraliaStandardTime`\n- `TZ_17_CentralAmericaStandardTime`\n- `TZ_18_CentralAsiaStandardTime`\n- `TZ_19_CentralBrazilianStandardTime`\n- `TZ_20_CentralEuropeStandardTime`\n- `TZ_21_CentralEuropeanStandardTime`\n- `TZ_22_CentralPacificStandardTime`\n- `TZ_23_CentralStandardTime`\n- `TZ_24_CentralStandardTimeMexico`\n- `TZ_25_ChinaStandardTime`\n- `TZ_26_DatelineStandardTime`\n- `TZ_27_E_AfricaStandardTime`\n- `TZ_28_E_AustraliaStandardTime`\n- `TZ_29_E_EuropeStandardTime`\n- `TZ_30_E_SouthAmericaStandardTime`\n- `TZ_31_EasternStandardTime`\n- `TZ_32_EgyptStandardTime`\n- `TZ_33_EkaterinburgStandardTime`\n- `TZ_34_FijiStandardTime`\n- `TZ_35_FLE_StandardTime`\n- `TZ_36_GeorgianStandardTime`\n- `TZ_37_GMT_StandardTime`\n- `TZ_38_GreenlandStandardTime`\n- `TZ_39_GreenwichStandardTime`\n- `TZ_40_GTB_StandardTime`\n- `TZ_41_HawaiianStandardTime`\n- `TZ_42_IndiaStandardTime`\n- `TZ_43_IranStandardTime`\n- `TZ_44_IsraelStandardTime`\n- `TZ_45_JordanStandardTime`\n- `TZ_46_KaliningradStandardTime`\n- `TZ_47_KamchatkaStandardTime`\n- `TZ_48_KoreaStandardTime`\n- `TZ_49_MagadanStandardTime`\n- `TZ_50_MauritiusStandardTime`\n- `TZ_51_MidAtlanticStandardTime`\n- `TZ_52_MiddleEastStandardTime`\n- `TZ_53_MontevideoStandardTime`\n- `TZ_54_MoroccoStandardTime`\n- `TZ_55_MountainStandardTime`\n- `TZ_56_MountainStandardTimeMMexico`\n- `TZ_57_MyanmarStandardTime`\n- `TZ_58_N_CentralAsiaStandardTime`\n- `TZ_59_NamibiaStandardTime`\n- `TZ_60_NepalStandardTime`\n- `TZ_61_NewZealandStandardTime`\n- `TZ_62_NewfoundlandStandardTime`\n- `TZ_63_NorthAsiaEastStandardTime`\n- `TZ_64_NorthAsiaStandardTime`\n- `TZ_65_PacificSAStandardTime`\n- `TZ_66_PacificStandardTime`\n- `TZ_67_PacificStandardTimeMexico`\n- `TZ_68_PakistanStandardTime`\n- `TZ_69_ParaguayStandardTime`\n- `TZ_70_RomanceStandardTime`\n- `TZ_71_RussianStandardTime`\n- `TZ_72_SAEasternStandardTime`\n- `TZ_73_SAPacificStandardTime`\n- `TZ_74_SAWesternStandardTime`\n- `TZ_75_SamoaStandardTime`\n- `TZ_76_SE_AsiaStandardTime`\n- `TZ_77_SingaporeStandardTime`\n- `TZ_78_SouthAfricaStandardTime`\n- `TZ_79_SriLankaStandardTime`\n- `TZ_80_SyriaStandardTime`\n- `TZ_81_TaipeiStandardTime`\n- `TZ_82_TasmaniaStandardTime`\n- `TZ_83_TokyoStandardTime`\n- `TZ_84_TongaStandardTime`\n- `TZ_85_TurkeyStandardTime`\n- `TZ_86_UlaanbaatarStandardTime`\n- `TZ_87_US_EasternStandardTime`\n- `TZ_88_USMountainStandardTime`\n- `TZ_89_VenezuelaStandardTime`\n- `TZ_90_VladivostokStandardTime`\n- `TZ_91_W_AustraliaStandardTime`\n- `TZ_92_W_CentralAfricaStandardTime`\n- `TZ_93_W_EuropeStandardTime`\n- `TZ_94_WestAsiaStandardTime`\n- `TZ_95_WestPacificStandardTime`\n- `TZ_96_YakutskStandardTime`\n",
                        "type": "string"
                    },
                    "useLongCurrencyFormat": {
                        "description": "When **true,** use the long currency format for the locale.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "localePolicyTab",
                "description": "Allows you to customize locale settings.",
                "x-ms-summary": "Allows you to customize locale settings."
            },
            "lockInformation": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "lockDurationInSeconds": {
                        "description": "The number of seconds to lock the envelope for editing.  This value must be greater than `0` seconds.",
                        "type": "string"
                    },
                    "lockedByApp": {
                        "description": "The human-readable name of the application that is locking the envelope or template. This value displays to the user in error messages when lock conflicts occur.",
                        "type": "string"
                    },
                    "lockedByUser": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "lockedUntilDateTime": {
                        "description": "The date and time that the lock expires.",
                        "type": "string"
                    },
                    "lockToken": {
                        "description": "A unique identifier provided to the owner of the lock. You must use this token with subsequent calls to prove ownership of the lock.",
                        "type": "string"
                    },
                    "lockType": {
                        "description": "The type of lock.  Currently `edit` is the only supported type.",
                        "type": "string"
                    },
                    "useScratchPad": {
                        "description": "When **true,** a scratchpad is used to edit information.\n ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "lockInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "lockRequest": {
                "type": "object",
                "properties": {
                    "lockDurationInSeconds": {
                        "description": "The number of seconds to lock the envelope for editing.  Must be greater than 0 seconds.",
                        "type": "string"
                    },
                    "lockedByApp": {
                        "description": "A friendly name of the application used to lock the envelope.  Will be used in error messages to the user when lock conflicts occur.",
                        "type": "string"
                    },
                    "lockType": {
                        "description": "The type of lock.  Currently `edit` is the only supported type.",
                        "type": "string"
                    },
                    "templatePassword": {
                        "description": "The [password for the template](https://support.docusign.com/s/document-item?bundleId=xry1643227563338&topicId=xwo1578456395432.html). If you are using a lock for a template that has a password or an envelope that is based on a template that has a password, you must enter the `templatePassword` to save the changes.",
                        "type": "string"
                    },
                    "useScratchPad": {
                        "description": "When **true,** a scratchpad is used to edit information.\n ",
                        "type": "string"
                    }
                },
                "description": "This request object contains information about the lock that you want to create or update.",
                "x-ds-definition-name": "lockRequest",
                "x-ms-summary": "This request object contains information about the lock that you want to create or update."
            },
            "loginAccount": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The account ID associated with the envelope.",
                        "type": "string"
                    },
                    "accountIdGuid": {
                        "description": "The GUID associated with the account ID.",
                        "type": "string"
                    },
                    "baseUrl": {
                        "description": "The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address for the user.",
                        "type": "string"
                    },
                    "isDefault": {
                        "description": "This value is true if this is the default account for the user, otherwise false is returned.",
                        "type": "string"
                    },
                    "loginAccountSettings": {
                        "description": "A list of settings on the account that indicate what features are available.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    },
                    "loginUserSettings": {
                        "description": "A list of user-level settings that indicate what user-specific features are available.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    },
                    "name": {
                        "description": "The name associated with the account.",
                        "type": "string"
                    },
                    "siteDescription": {
                        "description": "An optional descirption of the site that hosts the account.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of this user as defined by the account.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "loginAccount",
                "description": "",
                "x-ms-summary": ""
            },
            "loginInformation": {
                "type": "object",
                "properties": {
                    "apiPassword": {
                        "description": "Contains a token that can be used for authentication in API calls instead of using the user name and password. Only returned if the `api_password=true` query string is added to the URL.",
                        "type": "string"
                    },
                    "loginAccounts": {
                        "description": "The list of accounts that authenticating user is a member of.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/loginAccount"
                        }
                    }
                },
                "x-ds-definition-name": "loginInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "matchBox": {
                "type": "object",
                "properties": {
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
                        "type": "string"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "matchBox",
                "description": "",
                "x-ms-summary": ""
            },
            "memberGroupSharedItem": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "group": {
                        "$ref": "#/components/schemas/group"
                    },
                    "shared": {
                        "description": "How the item is shared. One of:\n\n\n- `not_shared`: The item is not shared.\n\n- `shared_to`: The item is shared.",
                        "type": "string"
                    }
                },
                "description": "Information about items shared among groups.",
                "x-ds-definition-name": "memberGroupSharedItem",
                "x-ms-summary": "Information about items shared among groups."
            },
            "memberSharedItems": {
                "type": "object",
                "properties": {
                    "envelopes": {
                        "description": "List of information about shared envelopes.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/sharedItem"
                        }
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "folders": {
                        "description": "List of information about shared folders.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folderSharedItem"
                        }
                    },
                    "templates": {
                        "description": "List of information about shared templates.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templateSharedItem"
                        }
                    },
                    "user": {
                        "$ref": "#/components/schemas/userInfo"
                    }
                },
                "description": "Information about shared items.",
                "x-ds-definition-name": "memberSharedItems",
                "x-ms-summary": "Information about shared items."
            },
            "mergeField": {
                "description": "Contains information for transferring values between Salesforce data fields and DocuSign tabs.\n",
                "type": "object",
                "properties": {
                    "allowSenderToEdit": {
                        "description": "When **true,** the sender can modify the value of the `mergeField` tab during the sending process.",
                        "type": "string"
                    },
                    "allowSenderToEditMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "configurationType": {
                        "description": "If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.",
                        "type": "string"
                    },
                    "configurationTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "path": {
                        "description": "Sets the object associated with the custom tab. Currently this is the Salesforce Object.",
                        "type": "string"
                    },
                    "pathExtended": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/pathExtendedElement"
                        }
                    },
                    "pathExtendedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pathMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "row": {
                        "description": "Specifies the row number in a Salesforce table that the merge field value corresponds to.",
                        "type": "string"
                    },
                    "rowMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "writeBack": {
                        "description": "When **true,** data entered into the merge field during Signing will update the mapped Salesforce field.",
                        "type": "string"
                    },
                    "writeBackMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "mergeField",
                "x-ms-summary": "Contains information for transferring values between Salesforce data fields and DocuSign tabs.\n"
            },
            "mobileNotifierConfiguration": {
                "type": "object",
                "properties": {
                    "deviceId": {
                        "description": "",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "platform": {
                        "description": "The Platform of the client application",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "mobileNotifierConfiguration",
                "description": "",
                "x-ms-summary": ""
            },
            "mobileNotifierConfigurationInformation": {
                "type": "object",
                "properties": {
                    "mobileNotifierConfigurations": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/mobileNotifierConfiguration"
                        }
                    }
                },
                "x-ds-definition-name": "mobileNotifierConfigurationInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "money": {
                "type": "object",
                "properties": {
                    "amountInBaseUnit": {
                        "description": "The total payment amount\nin the currency's base unit.\nFor example, for USD\nthe base currency is one cent.\n",
                        "type": "string"
                    },
                    "currency": {
                        "description": "The three-letter\n[ISO 4217][ISO 4217] currency code for the payment.\n\nFor example:\n\n* AUD Australian dollar\n* CAD Canadian dollar\n* EUR Euro\n* GBP Great Britain pound\n* USD United States dollar\n\nThis is a read-only property.\n\n[ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217\n",
                        "type": "string"
                    },
                    "displayAmount": {
                        "description": "The payment amount as displayed\nin the `currency`.\n\nFor example, if the payment amount\nis USD 12.59,\nthe `amountInBaseUnit` is 1259 (cents),\nand the displayed amount is `$12.59 USD`.\n\nThis is a read-only property.\n",
                        "type": "string"
                    }
                },
                "description": "Describes information\nabout the `total` of a payment.\n",
                "x-ds-definition-name": "money",
                "x-ms-summary": "Describes information\nabout the `total` of a payment.\n"
            },
            "nameValue": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "name": {
                        "description": "The name of the item.",
                        "type": "string"
                    },
                    "originalValue": {
                        "description": "The initial value of the item.",
                        "type": "string"
                    },
                    "value": {
                        "description": "The current value of the item.",
                        "type": "string"
                    }
                },
                "description": "A name-value pair that describes an item and provides a value for the item.",
                "x-ds-definition-name": "nameValue",
                "x-ms-summary": "A name-value pair that describes an item and provides a value for the item."
            },
            "newAccountDefinition": {
                "type": "object",
                "properties": {
                    "accountName": {
                        "description": "The account name for the new account.",
                        "type": "string"
                    },
                    "accountSettings": {
                        "$ref": "#/components/schemas/accountSettingsInformation"
                    },
                    "addressInformation": {
                        "$ref": "#/components/schemas/accountAddress"
                    },
                    "creditCardInformation": {
                        "$ref": "#/components/schemas/creditCardInformation"
                    },
                    "directDebitProcessorInformation": {
                        "$ref": "#/components/schemas/directDebitProcessorInformation"
                    },
                    "distributorCode": {
                        "description": "The Distributor Code that you received from DocuSign.",
                        "type": "string"
                    },
                    "distributorPassword": {
                        "description": "The password for the `distributorCode`.",
                        "type": "string"
                    },
                    "enablePreAuth": {
                        "description": "",
                        "type": "string"
                    },
                    "envelopePartitionId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "initialUser": {
                        "$ref": "#/components/schemas/userInformation"
                    },
                    "paymentMethod": {
                        "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
                        "type": "string"
                    },
                    "paymentProcessor": {
                        "description": "",
                        "type": "string"
                    },
                    "paymentProcessorInformation": {
                        "$ref": "#/components/schemas/paymentProcessorInformation"
                    },
                    "planInformation": {
                        "$ref": "#/components/schemas/planInformation"
                    },
                    "processPayment": {
                        "description": "",
                        "type": "string"
                    },
                    "referralInformation": {
                        "$ref": "#/components/schemas/referralInformation"
                    },
                    "socialAccountInformation": {
                        "$ref": "#/components/schemas/socialAccountInformation"
                    },
                    "taxExemptId": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "newAccountDefinition",
                "description": "",
                "x-ms-summary": ""
            },
            "newAccountSummary": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The account ID associated with the envelope.",
                        "type": "string"
                    },
                    "accountIdGuid": {
                        "description": "The GUID associated with the account ID.",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "The account name for the new account.",
                        "type": "string"
                    },
                    "apiPassword": {
                        "description": "Contains a token that can be used for authentication in API calls instead of using the user name and password.",
                        "type": "string"
                    },
                    "baseUrl": {
                        "description": "The URL that should be used for successive calls to this account. It includes the protocal (https), the DocuSign server where the account is located, and the account number. Use this Url to make API calls against this account. Many of the API calls provide Uri's that are relative to this baseUrl.",
                        "type": "string"
                    },
                    "billingPlanPreview": {
                        "$ref": "#/components/schemas/billingPlanPreview"
                    },
                    "userId": {
                        "description": "Specifies the user ID of the new user.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "newAccountSummary",
                "description": "",
                "x-ms-summary": ""
            },
            "newUser": {
                "type": "object",
                "properties": {
                    "apiPassword": {
                        "description": "Contains a token that can be used for authentication in API calls instead of using the user name and password.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user's email address.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "membershipId": {
                        "description": "The user's membership ID.",
                        "type": "string"
                    },
                    "permissionProfileId": {
                        "description": "The ID of the permission profile.\n\nUse [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)\nto get a list of permission profiles and their IDs.\n\nYou can also download a CSV file of all permission profiles\nand their IDs from the **Settings > Permission Profiles** page\nof your eSignature account page.\n",
                        "type": "string"
                    },
                    "permissionProfileName": {
                        "description": "The name of the account permission profile. \n\nExample: `Account Administrator`",
                        "type": "string"
                    },
                    "uri": {
                        "description": "A URI containing the user ID.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "Specifies the user ID for the new user.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "userStatus": {
                        "description": "Status of the user's account. One of:\n\n- `ActivationRequired`\n- `ActivationSent`\n- `Active`\n- `Closed`\n- `Disabled`\n",
                        "type": "string"
                    }
                },
                "description": "Object representing a new user.",
                "x-ds-definition-name": "newUser",
                "x-ms-summary": "Object representing a new user."
            },
            "newUsersDefinition": {
                "type": "object",
                "properties": {
                    "newUsers": {
                        "description": "A list of one or more new users.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInformation"
                        }
                    }
                },
                "x-ds-definition-name": "newUsersDefinition",
                "description": "",
                "x-ms-summary": ""
            },
            "newUsersSummary": {
                "type": "object",
                "properties": {
                    "newUsers": {
                        "description": "A list of one or more new users.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/newUser"
                        }
                    }
                },
                "description": "Object representing a summary of data for new users.",
                "x-ds-definition-name": "newUsersSummary",
                "x-ms-summary": "Object representing a summary of data for new users."
            },
            "notarize": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page.",
                "x-ds-definition-name": "notarize",
                "x-ms-summary": "A tab that alerts notary recipients that\nthey must take action on the page.\nOnly one notarize tab can appear on a page."
            },
            "notary": {
                "type": "object",
                "properties": {
                    "createdDate": {
                        "description": "The creation date of the account in UTC timedate format.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "The date the this object was created.",
                        "type": "string"
                    },
                    "searchable": {
                        "description": "When **true,** this notary is searchable.",
                        "type": "string"
                    },
                    "userInfo": {
                        "$ref": "#/components/schemas/userInformation"
                    }
                },
                "x-ds-definition-name": "notary",
                "description": "",
                "x-ms-summary": ""
            },
            "notaryContactDetails": {
                "type": "object",
                "properties": {
                    "hasDocusignCertificate": {
                        "description": "",
                        "type": "string"
                    },
                    "jurisdictions": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/jurisdictionSummary"
                        }
                    }
                },
                "x-ds-definition-name": "notaryContactDetails",
                "description": "",
                "x-ms-summary": ""
            },
            "notaryHost": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The notary's email address.\n\nMaximum Length: 100 characters.\n",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "hostRecipientId": {
                        "description": "The host recipient ID.",
                        "type": "string"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The notary's full legal name.\n\nMaximum Length: 100 characters.\n",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "note": {
                        "description": "A note sent to the notary in the signing email.\nThis note is visible only to this notary.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "The code associated with the recipient's status. This property is read-only. ",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "description": "This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.\n\nIt describes information about the notary host.\nThe following information is required\nwhen using the eNotary in-person signing flow:\n\n* `name`: Specifies the notary's full legal name.\n* `email`: Specifies the notary's email address.\n* `recipientId`: A unique ID number for the notary signing host.\n",
                "x-ds-definition-name": "notaryHost",
                "x-ms-summary": "This object is used only when `inPersonSigningType` in the `inPersonSigner` object is `notary`.\n\nIt describes information about the notary host.\nThe following information is required\nwhen using the eNotary in-person signing flow:\n\n* `name`: Specifies the notary's full legal name.\n* `email`: Specifies the notary's email address.\n* `recipientId`: A unique ID number for the notary signing host.\n"
            },
            "notaryJournal": {
                "type": "object",
                "properties": {
                    "createdDate": {
                        "description": "The creation date of the account in UTC timedate format.",
                        "type": "string"
                    },
                    "documentName": {
                        "description": "The name of the document.",
                        "type": "string"
                    },
                    "jurisdiction": {
                        "$ref": "#/components/schemas/jurisdiction"
                    },
                    "notaryJournalId": {
                        "description": "A unique GUID for this journal entry.",
                        "type": "string"
                    },
                    "notaryJournalMetaData": {
                        "$ref": "#/components/schemas/notaryJournalMetaData"
                    },
                    "signerName": {
                        "description": "The in-person signer's full legal name.\n\nRequired when `inPersonSigningType` is `inPersonSigner`.\nFor eNotary flow, use `name` instead.\n\nMaximum Length: 100 characters.\n",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "notaryJournal",
                "description": "",
                "x-ms-summary": ""
            },
            "notaryJournalCredibleWitness": {
                "type": "object",
                "properties": {
                    "address": {
                        "description": "The address of the witness.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the witness.",
                        "type": "string"
                    },
                    "signatureImage": {
                        "description": "A base64-encoded image of the signature.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "notaryJournalCredibleWitness",
                "description": "",
                "x-ms-summary": ""
            },
            "notaryJournalList": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "notaryJournals": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notaryJournal"
                        }
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "notaryJournalList",
                "description": "",
                "x-ms-summary": ""
            },
            "notaryJournalMetaData": {
                "type": "object",
                "properties": {
                    "comment": {
                        "description": "A freeform comment that the notary can add to the journal entry.",
                        "type": "string"
                    },
                    "credibleWitnesses": {
                        "description": "An array of witnesses.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notaryJournalCredibleWitness"
                        }
                    },
                    "signatureImage": {
                        "description": "A base64-encoded image of the signature.",
                        "type": "string"
                    },
                    "signerIdType": {
                        "description": "A string that describes the ID that the signer presented. For example `drivers license` or `military ID`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "notaryJournalMetaData",
                "description": "",
                "x-ms-summary": ""
            },
            "notaryJurisdiction": {
                "type": "object",
                "properties": {
                    "commissionExpiration": {
                        "description": "The expiration date of the notary's commission in format: `MM/DD/YYYY`.",
                        "type": "string"
                    },
                    "commissionId": {
                        "description": "The notary's commission identification. This varies from jurisdiction to jurisdiction.",
                        "type": "string"
                    },
                    "county": {
                        "description": "The county that the commission is valid in.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "jurisdiction": {
                        "$ref": "#/components/schemas/jurisdiction"
                    },
                    "registeredName": {
                        "description": "The registered name of the notary.",
                        "type": "string"
                    },
                    "sealType": {
                        "description": "The seal type used for this juridiction.\n\n- `not_available`\n- `system_created`\n- `user_uploaded`",
                        "type": "string"
                    }
                },
                "description": "A notary jurisdiction.",
                "x-ds-definition-name": "notaryJurisdiction",
                "x-ms-summary": "A notary jurisdiction."
            },
            "notaryJurisdictionList": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "notaryJurisdictions": {
                        "description": "An array of jurisdictions.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notaryJurisdiction"
                        }
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "description": "A paged list of jurisdictions.",
                "x-ds-definition-name": "notaryJurisdictionList",
                "x-ms-summary": "A paged list of jurisdictions."
            },
            "notaryRecipient": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "agentCanEditEmail": {
                        "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "agentCanEditName": {
                        "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoNavigation": {
                        "description": "When **true,** autonavigation is set for the recipient.\n",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkRecipientsUri": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "canSignOffline": {
                        "description": "When **true,** specifies that the signer can perform the signing ceremony offline.",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "consentDetailsList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentDetails"
                        }
                    },
                    "creationReason": {
                        "description": "The reason why the item was created.",
                        "type": "string"
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "defaultRecipient": {
                        "description": "When **true,** this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
                        "type": "string"
                    },
                    "delegatedBy": {
                        "$ref": "#/components/schemas/delegationInfo"
                    },
                    "delegatedTo": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/delegationInfo"
                        }
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The recipient's email address. Notification of the document to sign is sent to this email address.\n\nMaximum length: 100 characters.",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "emailRecipientPostSigningURL": {
                        "description": "",
                        "type": "string"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "excludedDocuments": {
                        "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "firstName": {
                        "description": "The user's first name. \nMaximum Length: 50 characters.",
                        "type": "string"
                    },
                    "firstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fullName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fullNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "isBulkRecipient": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "isBulkRecipientMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lastName": {
                        "description": "The user's last name. \nMaximum Length: 50 characters.",
                        "type": "string"
                    },
                    "lastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "liveOakStartURL": {
                        "description": "URL that directs the recipient to LiveOak to complete the remote online notarization process. This property is read-only.",
                        "type": "string"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full legal name of the recipient. Maximum length: 100 characters.\n\nNote: You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "notaryId": {
                        "description": "Not applicable to Notary tab.",
                        "type": "string"
                    },
                    "notarySignerEmailSent": {
                        "description": "",
                        "type": "string"
                    },
                    "notarySigners": {
                        "description": "An array of strings that correspond to the `recipientId` of each signer in the notary group. This property is read-only.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "notarySourceType": {
                        "description": "",
                        "type": "string"
                    },
                    "notaryThirdPartyPartner": {
                        "description": "",
                        "type": "string"
                    },
                    "notaryType": {
                        "description": "The notary type. This property is read-only. Valid values:\n\n- `inperson`\n- `remote`",
                        "type": "string"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "offlineAttributes": {
                        "$ref": "#/components/schemas/offlineAttributes"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "proofFile": {
                        "$ref": "#/components/schemas/recipientProofFile"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientSignatureProviders": {
                        "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientSignatureProvider"
                        }
                    },
                    "recipientSuppliesTabs": {
                        "description": "When **true,** specifies that the recipient creates the tabs.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireSignerCertificate": {
                        "description": "By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\n\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.",
                        "type": "string"
                    },
                    "requireSignOnPaper": {
                        "description": "When **true,** the signer must print, sign, and upload or fax the signed documents to DocuSign.",
                        "type": "string"
                    },
                    "requireUploadSignature": {
                        "description": "When **true,** the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.",
                        "type": "string"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signatureInfo": {
                        "$ref": "#/components/schemas/recipientSignatureInformation"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signInEachLocation": {
                        "description": "When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
                        "type": "string"
                    },
                    "signInEachLocationMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "notaryRecipient",
                "description": "",
                "x-ms-summary": ""
            },
            "notaryResult": {
                "type": "object",
                "properties": {
                    "jurisdictions": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/jurisdiction"
                        }
                    },
                    "notary": {
                        "$ref": "#/components/schemas/notary"
                    }
                },
                "description": "Describes a single notary jurisdiction.",
                "x-ds-definition-name": "notaryResult",
                "x-ms-summary": "Describes a single notary jurisdiction."
            },
            "notarySeal": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "scaleValue": {
                        "description": "Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.",
                        "type": "string"
                    },
                    "scaleValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
                "x-ds-definition-name": "notarySeal",
                "x-ms-summary": "A Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/"
            },
            "note": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "**Note:** Note tabs never display this tooltip in the signing interface.\n\nAlthough you can technically set a value via the API for this tab,\nit will not be displayed to the recipient.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that displays additional information, in the form of a\nnote, for the recipient.\n",
                "x-ds-definition-name": "note",
                "x-ms-summary": "A tab that displays additional information, in the form of a\nnote, for the recipient.\n"
            },
            "notification": {
                "description": "A complex element that specifies the notification settings for the envelope.",
                "type": "object",
                "properties": {
                    "expirations": {
                        "$ref": "#/components/schemas/expirations"
                    },
                    "reminders": {
                        "$ref": "#/components/schemas/reminders"
                    },
                    "useAccountDefaults": {
                        "description": "When **true,** the account default notification settings are used for the envelope, overriding the reminders and expirations settings. When **false,** the reminders and expirations settings specified in this request are used. The default value is **false.**",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "notification",
                "x-ms-summary": "A complex element that specifies the notification settings for the envelope."
            },
            "notificationDefaults": {
                "type": "object",
                "properties": {
                    "apiEmailNotifications": {
                        "$ref": "#/components/schemas/notificationDefaultSettings"
                    },
                    "emailNotifications": {
                        "$ref": "#/components/schemas/notificationDefaultSettings"
                    }
                },
                "x-ds-definition-name": "notificationDefaults",
                "description": "",
                "x-ms-summary": ""
            },
            "notificationDefaultSettings": {
                "type": "object",
                "properties": {
                    "senderEmailNotifications": {
                        "$ref": "#/components/schemas/senderEmailNotifications"
                    },
                    "signerEmailNotifications": {
                        "$ref": "#/components/schemas/signerEmailNotifications"
                    }
                },
                "description": "Contains details about the default notification settings for the envelope notifications that senders and signers receive.",
                "x-ds-definition-name": "notificationDefaultSettings",
                "x-ms-summary": "Contains details about the default notification settings for the envelope notifications that senders and signers receive."
            },
            "number": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formula": {
                        "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n",
                        "type": "string"
                    },
                    "formulaMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderRequired": {
                        "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                        "type": "string"
                    },
                    "senderRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationMessageMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationPattern": {
                        "description": "A regular expression used to validate input for the tab.",
                        "type": "string"
                    },
                    "validationPatternMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "Number tabs validate that the entered value is a number.\nThey do not support advanced validation or display options.\nSee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)\nto learn more about this tab type.\n",
                "x-ds-definition-name": "number",
                "x-ms-summary": "Number tabs validate that the entered value is a number.\nThey do not support advanced validation or display options.\nSee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)\nto learn more about this tab type.\n"
            },
            "numerical": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign-generated custom tab ID for the custom tab to be applied.\nThis can only be used when adding new tabs for a recipient.\nWhen used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This ID must refer to an existing document.\n",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxNumericalValue": {
                        "description": "The maximum value that the numerical tab can take on.\nThe largest value allowed, and the default if not specified, is\n`999999999.99`",
                        "type": "string"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "minNumericalValue": {
                        "description": "The minimum value that the numerical tab can take on.\nThe smallest value allowed, and the default if not specified, is\n`-999999999.99`",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "numericalValue": {
                        "description": "The raw numerical value of the tab.\n\nFor example,\nif the locale policy is `en-US`\nand the `numericalValue` is `-1234.56`,\nthe `value` property will contain the string\n`\"($ 1,234.56)\"`.\n",
                        "type": "string"
                    },
                    "originalNumericalValue": {
                        "description": "The original value of the tab.",
                        "type": "string"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderRequired": {
                        "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                        "type": "string"
                    },
                    "senderRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this tab is shared.\n",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationType": {
                        "description": "Specifies how numerical data is validated. Valid values:\n\n- `number`\n- `currency`\n",
                        "type": "string"
                    },
                    "value": {
                        "description": "The `numericalValue` of the tab\ndisplayed according to its locale policy.\n\nFor example,\nif the locale policy is `en-US`\nand the `numericalValue` is `-1234.56`,\nthis property will contain the string\n`\"($ 1,234.56)\"`.\n\n",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "numerical",
                "description": "Numerical tabs provide robust display and validation features,\nincluding formatting for different regions and currencies,\nand minimum and maximum value validation.\nSee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)\nto learn more about this tab type.\n",
                "x-ms-summary": "Numerical tabs provide robust display and validation features,\nincluding formatting for different regions and currencies,\nand minimum and maximum value validation.\nSee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/)\nto learn more about this tab type.\n"
            },
            "oauthAccess": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "description": "Access token information.",
                        "type": "string"
                    },
                    "data": {
                        "description": "A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    },
                    "expires_in": {
                        "description": "",
                        "type": "string"
                    },
                    "refresh_token": {
                        "description": "",
                        "type": "string"
                    },
                    "scope": {
                        "description": "Must be set to \"api\".",
                        "type": "string"
                    },
                    "token_type": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "oauthAccess",
                "description": "",
                "x-ms-summary": ""
            },
            "offlineAttributes": {
                "description": "Reserved for DocuSign.",
                "type": "object",
                "properties": {
                    "accountEsignId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "deviceModel": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "deviceName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "gpsLatitude": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "gpsLongitude": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "offlineSigningHash": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "offlineAttributes",
                "x-ms-summary": "Reserved for DocuSign."
            },
            "page": {
                "description": "Description of a page of a document.",
                "type": "object",
                "properties": {
                    "dpi": {
                        "description": "The number of dots per inch used for the page image.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "height": {
                        "description": "The height of the page in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "imageBytes": {
                        "description": "The number of image bytes.",
                        "type": "string"
                    },
                    "mimeType": {
                        "description": "The MIME type.",
                        "type": "string"
                    },
                    "pageId": {
                        "description": "The ID of the page.",
                        "type": "string"
                    },
                    "sequence": {
                        "description": "The sequence of the page in the document, or page number.",
                        "type": "string"
                    },
                    "width": {
                        "description": "The width of the page in pixels.\nMust be an integer.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "page",
                "x-ms-summary": "Description of a page of a document."
            },
            "pageImages": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "pages": {
                        "description": "An array of page objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/page"
                        }
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "pageImages",
                "description": "",
                "x-ms-summary": ""
            },
            "pageRequest": {
                "type": "object",
                "properties": {
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "rotate": {
                        "description": "Sets the direction the page image is rotated. The possible settings are: left or right",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "pageRequest",
                "description": "",
                "x-ms-summary": ""
            },
            "participant": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "consentDetailsList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentDetails"
                        }
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each string can be a maximum of 100 characters.\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "emailRecipientPostSigningURL": {
                        "description": "",
                        "type": "string"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "firstName": {
                        "description": "The user's first name. \nMaximum Length: 50 characters.",
                        "type": "string"
                    },
                    "firstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fullName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fullNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The user's last name. \nMaximum Length: 50 characters.",
                        "type": "string"
                    },
                    "lastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "participateFor": {
                        "description": "",
                        "type": "string"
                    },
                    "participateForGuid": {
                        "description": "",
                        "type": "string"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "participant",
                "description": "",
                "x-ms-summary": ""
            },
            "pathExtendedElement": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of this tab. Values are:\n\n- `Approve`\n- `CheckBox`\n- `Company`\n- `Date`\n- `DateSigned`\n- `Decline`\n- `Email`\n- `EmailAddress`\n- `EnvelopeId`\n- `FirstName`\n- `Formula`\n- `FullName`\n- `InitialHere`\n- `InitialHereOptional`\n- `LastName`\n- `List`\n- `Note`\n- `Number`\n- `Radio`\n- `SignerAttachment`\n- `SignHere`\n- `SignHereOptional`\n- `Ssn`\n- `Text`\n- `Title`\n- `Zip5`\n- `Zip5Dash4`\n",
                        "type": "string"
                    },
                    "typeName": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "pathExtendedElement",
                "description": "",
                "x-ms-summary": ""
            },
            "paymentDetails": {
                "type": "object",
                "properties": {
                    "allowedPaymentMethods": {
                        "description": "An array of accepted payment methods:\n\n* `CreditCard`\n* `ApplePay`\n* `AndroidPay`\n* `BankAccount`\n\nFor example, if you only accept credit cards and ACH transfers, you would set this property to:\n\n`'[\"BankAccount\", \"CreditCard\"]'`\n\nDo not specify `BankAccount` (ACH) if you are also using in-person signing.\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "chargeId": {
                        "description": "The GUID set by the payment gateway (such as Stripe) that identifies a transaction. The `chargeId` is created when authorizing a payment and must be referenced when completing a payment.",
                        "type": "string"
                    },
                    "currencyCode": {
                        "description": "Specifies the three-letter\n[ISO 4217][ISO 4217] currency code for the payment.\n\nSupported currencies are:\n\n* AUD: Australian dollar\n* CAD: Canadian dollar\n* EUR: Euro\n* GBP: Great Britain pound\n* USD: United States dollar\n\nSpecifying any other ISO 4217 code for payments is an error.\n\n[ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217\n",
                        "type": "string"
                    },
                    "currencyCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customerId": {
                        "description": "The customer ID.",
                        "type": "string"
                    },
                    "customMetadata": {
                        "description": "This is a sender-defined field that passes any extra metadata about the payment that will show up in the Authorize.net transaction under **Description** in the merchant gateway portal. The custom metadata will be recorded in downloaded Authorize.net reports. \n\nThe following example shows what the **Description** field of the transaction will look like: \n\n`<envelopeID>, <customMetadata>`",
                        "type": "string"
                    },
                    "customMetadataRequired": {
                        "description": "A sender-defined field that specifies whether custom metadata is required for the transaction. When **true,** custom metadata is required. This property only applies if you are using an Authorize.net payment gateway account.",
                        "type": "boolean"
                    },
                    "gatewayAccountId": {
                        "description": "A GUID that identifies the payment gateway\nconnected to the sender's DocuSign account.\n\nThere is no public API\nfor connecting payment gateway accounts\nYou must connect and manage payment gateway accounts\nthrough the DocuSign Admin console\nand through your chosen payment gateway.\n\nYou can get the gateway account ID\nin the Payments section\nof the DocuSign Admin console.\n\n\n[paymentgateways]:  https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=knc1573854895499.html\n",
                        "type": "string"
                    },
                    "gatewayAccountIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "gatewayDisplayName": {
                        "description": "Display name of the gateway connected to sender's DocuSign account.\n\nPossible values are: Stripe, Braintree, Authorize.Net, CyberSource, Zuora, Elavon.",
                        "type": "string"
                    },
                    "gatewayName": {
                        "description": "Name of the gateway connected to sender's DocuSign account.\n\nPossible values are:\n\n* `Stripe`\n* `Braintree`\n* `AuthorizeDotNet`\n* `CyberSource`\n* `Zuora`\n* `Elavon`",
                        "type": "string"
                    },
                    "lineItems": {
                        "description": "A payment formula can have\none or more line items\nthat provide detail about\nindividual items in a payment request.\n\nThe list of line items\nare returned as metadata\nto the payment gateway.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/paymentLineItem"
                        }
                    },
                    "paymentOption": {
                        "description": "This property specifies how the signer's collected payment details will be used.\n\nValid values:\n\n- `authorize`: The payment details will be used to collect payment. This is the default value.\n- `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway.\n- `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.",
                        "type": "string"
                    },
                    "paymentSourceId": {
                        "description": "The payment source ID.",
                        "type": "string"
                    },
                    "signerValues": {
                        "$ref": "#/components/schemas/paymentSignerValues"
                    },
                    "status": {
                        "description": "This read-only property describes the status of a payment.\n\n* `new`<br>\n  This is a new payment request.\n  The envelope has been created,\n  but no payment authorizations have been made.\n\n* `auth_complete`<br>\n  A recipient has entered their credit card information,\n  but the envelope has not been completed.\n  The card has not been charged.\n\n* `payment_complete`<br>\n  The recipient's card has been charged.\n\n* `payment_capture_failed`<br>\n  Final charge failed.\n  This can happen when too much time\n  passes between authorizing the payment\n  and completing the document.\n\n* `future_payment_saved` <br>\nThe recipient's payment method has been saved to the sender's payment gateway.\n",
                        "type": "string"
                    },
                    "subGatewayName": {
                        "description": "",
                        "type": "string"
                    },
                    "total": {
                        "$ref": "#/components/schemas/money"
                    }
                },
                "description": "When a formula tab\nhas a `paymentDetails` property,\nthe formula tab\nis a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n",
                "x-ds-definition-name": "paymentDetails",
                "x-ms-summary": "When a formula tab\nhas a `paymentDetails` property,\nthe formula tab\nis a payment item.\nSee [Requesting Payments Along with Signatures][paymentguide]\nin the DocuSign Support Center\nto learn more about payments.\n\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n"
            },
            "paymentGatewayAccount": {
                "type": "object",
                "properties": {
                    "allowCustomMetadata": {
                        "description": "When **true,** the sender can pass custom metadata about the payment to the payment gateway. You pass in this metadata on an EnvelopeRecipientTab, in the `customMetadata` property under `paymentDetails`. \n\nFor example, this property is set to **true** for the Authorize.net gateway by default. As a result, the extra metadata that you send displays for the Authorize.net transaction in the merchant gateway portal under **Description.**\n\n**Note:** This property is read-only and cannot be changed.",
                        "type": "boolean"
                    },
                    "config": {
                        "$ref": "#/components/schemas/paymentGatewayAccountSetting"
                    },
                    "displayName": {
                        "description": "A user-defined name for a connected gateway account.\n\nThis name is used in the Admin panel in the list of connected accounts and in Tagger in the payment gateway selector.\n\nThe human-readable version of `paymentGatewayAccountId`.",
                        "type": "string"
                    },
                    "isEnabled": {
                        "description": "When **true,** the payment gateway account is enabled.",
                        "type": "string"
                    },
                    "isLegacy": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lastModified": {
                        "description": "The UTC DateTime that the payment gateway account was last updated.",
                        "type": "string"
                    },
                    "paymentGateway": {
                        "description": "Payment gateway used by the connected gateway account.\nThis is the name used by the API.\nFor a human-readable version use `paymentGatewayDisplayName`.\n\nPossible values are:\n\n* `Stripe`\n* `Braintree`\n* `AuthorizeDotNet`\n* `CyberSource`\n* `Zuora`\n* `Elavon`",
                        "type": "string"
                    },
                    "paymentGatewayAccountId": {
                        "description": "A GUID that identifies the payment gateway account. For a human-readable version use `displayName`.",
                        "type": "string"
                    },
                    "paymentGatewayDisplayName": {
                        "description": "The display name of the payment gateway that the connected gateway account uses.\nThis is the human-readable version of `paymentGateway`.\n\nPossible values are:\n\n* Stripe\n* Braintree\n* Authorize.Net\n* CyberSource\n* Zuora\n* Elavon",
                        "type": "string"
                    },
                    "payPalLegacySettings": {
                        "$ref": "#/components/schemas/payPalLegacySettings"
                    },
                    "supportedCurrencies": {
                        "description": "A list of ISO 4217 currency codes for the currencies that the payment gateway account supports.\n\nExamples: \n\n- `USD`\n- `CAD`\n- `EUR`\n- `HKD`",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "supportedPaymentMethods": {
                        "description": "An array of paymentMethodWithOptions objects that specify the payment methods that are available for the gateway.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "supportedPaymentMethodsWithOptions": {
                        "description": "An array of `paymentMethodWithOptions` objects that specify the payment methods that are available for the gateway, as well as the payment options that are compatible with each payment method.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/paymentMethodWithOptions"
                        }
                    },
                    "zeroDecimalCurrencies": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "This object contains details about a payment gateway account.",
                "x-ds-definition-name": "paymentGatewayAccount",
                "x-ms-summary": "This object contains details about a payment gateway account."
            },
            "paymentGatewayAccountSetting": {
                "type": "object",
                "properties": {
                    "apiFields": {
                        "description": "",
                        "type": "string"
                    },
                    "authorizationCode": {
                        "description": "",
                        "type": "string"
                    },
                    "credentialStatus": {
                        "description": "",
                        "type": "string"
                    },
                    "merchantId": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "paymentGatewayAccountSetting",
                "description": "",
                "x-ms-summary": ""
            },
            "paymentGatewayAccountsInfo": {
                "type": "object",
                "properties": {
                    "paymentGatewayAccounts": {
                        "description": "A list of payment gateway accounts.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/paymentGatewayAccount"
                        }
                    }
                },
                "description": "Holds information about connected payment accounts.",
                "x-ds-definition-name": "paymentGatewayAccountsInfo",
                "x-ms-summary": "Holds information about connected payment accounts."
            },
            "paymentLineItem": {
                "type": "object",
                "properties": {
                    "amountReference": {
                        "description": "This is a the `tabLabel`\nthat specifies the amount paid\nfor the line items.\n\n",
                        "type": "string"
                    },
                    "description": {
                        "description": "A sender-defined description of the line item.\n",
                        "type": "string"
                    },
                    "itemCode": {
                        "description": "This is the sender-defined\nSKU, inventory number, or other item code\nfor the line item.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "This is a sender-defined\nproduct name, service name,\nor other designation for the line item.\n",
                        "type": "string"
                    }
                },
                "description": "A line item describes details\nabout an individual line item\nin a payment request.\n\n",
                "x-ds-definition-name": "paymentLineItem",
                "x-ms-summary": "A line item describes details\nabout an individual line item\nin a payment request.\n\n"
            },
            "paymentMethodWithOptions": {
                "type": "object",
                "properties": {
                    "supportedCurrencies": {
                        "description": "A list of ISO 4217 currency codes for the currencies that the payment gateway account supports.\n\nExamples: \n\n- `USD`\n- `CAD`\n- `EUR`\n- `HKD`",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "supportedOptions": {
                        "description": "The payment options that are compatible with the payment method in the `type` property.\n\nPossible values are:\n\n- `save` \n- `save_and_authorize`\n- `authorize`",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "description": "The name of a payment method that the gateway accepts.\n\nPossible values are:\n\n- `CreditCard`\n- `ApplePay`\n- `AndroidPay`\n- `BankAccount`\n- `PayPal`",
                        "type": "string"
                    }
                },
                "description": "This object contains information about a payment method that the gateway accepts and the payment options that are compatible with it.",
                "x-ds-definition-name": "paymentMethodWithOptions",
                "x-ms-summary": "This object contains information about a payment method that the gateway accepts and the payment options that are compatible with it."
            },
            "paymentProcessorInformation": {
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/addressInformation"
                    },
                    "billingAgreementId": {
                        "description": "The ID of the billing agreement.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address associated with the payment processor.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "paymentProcessorInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "paymentSignerValues": {
                "type": "object",
                "properties": {
                    "paymentOption": {
                        "description": "This property specifies how the signer's collected payment details will be used.\n\nValid values:\n\n- `authorize`: The payment details will be used to collect payment. This is the default value.\n- `save`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway.\n- `save_and_authorize`: The signer's payment method (credit card or bank account) will be saved to the sender's payment gateway and will also be used to collect payment.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "paymentSignerValues",
                "description": "",
                "x-ms-summary": ""
            },
            "payPalLegacySettings": {
                "type": "object",
                "properties": {
                    "currency": {
                        "description": "The three-letter\n[ISO 4217][ISO 4217] currency code for the payment.\n\nFor example:\n\n* AUD Australian dollar\n* CAD Canadian dollar\n* EUR Euro\n* GBP Great Britain pound\n* USD United States dollar\n\nThis is a read-only property.\n\n[ISO 4217]:          https://en.wikipedia.org/wiki/ISO_4217\n",
                        "type": "string"
                    },
                    "partner": {
                        "description": "",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "vendor": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "payPalLegacySettings",
                "description": "",
                "x-ms-summary": ""
            },
            "permissionProfile": {
                "type": "object",
                "properties": {
                    "modifiedByUsername": {
                        "description": "The username of the user who last modified the permission profile.",
                        "type": "string"
                    },
                    "modifiedDateTime": {
                        "description": "The date and time when the permission profile was last modified.",
                        "type": "string"
                    },
                    "permissionProfileId": {
                        "description": "The ID of the permission profile.\n\nUse [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)\nto get a list of permission profiles and their IDs.\n\nYou can also download a CSV file of all permission profiles\nand their IDs from the **Settings > Permission Profiles** page\nof your eSignature account page.\n",
                        "type": "string"
                    },
                    "permissionProfileName": {
                        "description": "The name of the account permission profile. \n\nExample: `Account Administrator`",
                        "type": "string"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/accountRoleSettings"
                    },
                    "userCount": {
                        "description": "The total number of users in the group associated with the account permission profile.",
                        "type": "string"
                    },
                    "users": {
                        "description": "A list of user objects containing information about the users who are associated with the account permission profile.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInformation"
                        }
                    }
                },
                "description": "This object defines the account permissions for a profile that you can apply to a group of users.",
                "x-ds-definition-name": "permissionProfile",
                "x-ms-summary": "This object defines the account permissions for a profile that you can apply to a group of users."
            },
            "permissionProfileInformation": {
                "type": "object",
                "properties": {
                    "permissionProfiles": {
                        "description": "A complex type containing a collection of permission profiles.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/permissionProfile"
                        }
                    }
                },
                "description": "Contains details about the permission profiles associated with an account.",
                "x-ds-definition-name": "permissionProfileInformation",
                "x-ms-summary": "Contains details about the permission profiles associated with an account."
            },
            "phoneNumber": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
                "x-ds-definition-name": "phoneNumber",
                "x-ms-summary": "A Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/"
            },
            "planInformation": {
                "description": "An object used to identify the features and attributes of the account being created.",
                "type": "object",
                "properties": {
                    "addOns": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/addOn"
                        }
                    },
                    "currencyCode": {
                        "description": "Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code for the account.",
                        "type": "string"
                    },
                    "freeTrialDaysOverride": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "planFeatureSets": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureSet"
                        }
                    },
                    "planId": {
                        "description": "DocuSign's ID for the account plan.",
                        "type": "string"
                    },
                    "recipientDomains": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientDomain"
                        }
                    }
                },
                "x-ds-definition-name": "planInformation",
                "x-ms-summary": "An object used to identify the features and attributes of the account being created."
            },
            "polyLine": {
                "type": "object",
                "properties": {
                    "x1": {
                        "description": "",
                        "type": "string"
                    },
                    "x2": {
                        "description": "",
                        "type": "string"
                    },
                    "y1": {
                        "description": "",
                        "type": "string"
                    },
                    "y2": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "polyLine",
                "description": "",
                "x-ms-summary": ""
            },
            "polyLineOverlay": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "graphicsContext": {
                        "$ref": "#/components/schemas/graphicsContext"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "overlayType": {
                        "description": "The type of overlay to use. The API currently supports only the `outline` overlay type.",
                        "type": "string"
                    },
                    "overlayTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "polyLines": {
                        "description": "An array of `polyLine` objects that contain x- and y-coordinates representing the locations of the lines.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/polyLine"
                        }
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** indicates that the tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "This tab enables users to strike through the text of a document. The tab is implemented as a line represented as a pair of x and y coordinates.",
                "x-ds-definition-name": "polyLineOverlay",
                "x-ms-summary": "This tab enables users to strike through the text of a document. The tab is implemented as a line represented as a pair of x and y coordinates."
            },
            "powerForm": {
                "type": "object",
                "properties": {
                    "createdBy": {
                        "description": "The ID of the user who created the PowerForm.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "emailBody": {
                        "description": "The body of the email message sent to the recipients. \n\nMaximum length: 10000 characters.",
                        "type": "string"
                    },
                    "emailSubject": {
                        "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
                        "type": "string"
                    },
                    "envelopes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelope"
                        }
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "instructions": {
                        "description": "The instructions that display on the landing page for the first recipient. These instructions are important if the recipient accesses the PowerForm by a method other than email. If instructions are entered, they display as an introduction after the recipient accesses the PowerForm.  Limit: 2000 characters.",
                        "type": "string"
                    },
                    "isActive": {
                        "description": "When **true,** indicates that the PowerForm is active and can be sent to recipients. This is the default value.\n\nWhen **false,** the PowerForm cannot be emailed or accessed by a recipient, even if they arrive at the PowerForm URL. \n\nIf a recipient attempts to sign an inactive PowerForm, an error message informs the recipient that the document is not active and suggests that they contact the sender.\n",
                        "type": "string"
                    },
                    "lastUsed": {
                        "description": "The UTC DateTime when the PowerForm was last used.",
                        "type": "string"
                    },
                    "limitUseInterval": {
                        "description": "The length of time before the same recipient can sign the same PowerForm. This property is used in combination with the `limitUseIntervalUnits` property.",
                        "type": "string"
                    },
                    "limitUseIntervalEnabled": {
                        "description": "When **true,** the `limitUseInterval` is enabled.",
                        "type": "string"
                    },
                    "limitUseIntervalUnits": {
                        "description": "The units associated with the `limitUseInterval`. Valid values are:\n\n- `minutes`\n- `hours\n- `days`\n- `weeks`\n- `months`\n\nFor example, to limit a recipient to signing once per year, set the `limitUseInterval` to 365 and the `limitUseIntervalUnits` to `days`.\n",
                        "type": "string"
                    },
                    "maxUseEnabled": {
                        "description": "When **true,** you can set a maximum number of uses for the PowerForm.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the PowerForm.",
                        "type": "string"
                    },
                    "powerFormId": {
                        "description": "The ID of the PowerForm.",
                        "type": "string"
                    },
                    "powerFormUrl": {
                        "description": "The URL for the PowerForm.",
                        "type": "string"
                    },
                    "recipients": {
                        "description": "An array of recipient objects that provides details about the recipients of the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/powerFormRecipient"
                        }
                    },
                    "senderName": {
                        "description": "The sender's name.",
                        "type": "string"
                    },
                    "senderUserId": {
                        "description": "The ID of the sender.",
                        "type": "string"
                    },
                    "signingMode": {
                        "description": "The signing mode to use. Valid values are:\n \n- `email`: Verifies the recipient's identity using email authentication before the recipient can sign a document. The recipient enters their email address and then clicks **Begin Signing** to begin the signing process. The system then sends an email message with a validation code for the PowerForm to the recipient. If the recipient does not provide a valid email address, they cannot open and sign the document.  \n- `direct`: Does not require any verification. After a recipient enters their email address and clicks **Begin Signing,** a new browser tab opens and the recipient can immediately begin the signing process. Because the recipient's identity is not verified by using email authentication, we strongly recommend that you only use the `direct` signing mode when the PowerForm is accessible behind a secure portal where the recipient's identity is already authenticated, or where another form of authentication is specified for the recipient in the DocuSign template (for example, an access code, phone authentication, or ID check).  \n\n**Note:** In the account settings, `enablePowerFormDirect` must be **true** to use `direct` as the `signingMode`.",
                        "type": "string"
                    },
                    "templateId": {
                        "description": "The ID of the template used to create the PowerForm.",
                        "type": "string"
                    },
                    "templateName": {
                        "description": "The name of the template used to create the PowerForm.",
                        "type": "string"
                    },
                    "timesUsed": {
                        "description": "The number of times the PowerForm has been used. ",
                        "type": "string"
                    },
                    "uri": {
                        "description": "The URI for the PowerForm.",
                        "type": "string"
                    },
                    "usesRemaining": {
                        "description": "The number of times the PowerForm can still be used.",
                        "type": "string"
                    }
                },
                "description": "Contains details about a PowerForm.",
                "x-ds-definition-name": "powerForm",
                "x-ms-summary": "Contains details about a PowerForm."
            },
            "powerFormFormDataEnvelope": {
                "type": "object",
                "properties": {
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "recipients": {
                        "description": "An array of recipient objects that provides details about the recipients of the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/powerFormFormDataRecipient"
                        }
                    }
                },
                "x-ds-definition-name": "powerFormFormDataEnvelope",
                "description": "",
                "x-ms-summary": ""
            },
            "powerFormFormDataRecipient": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "formData": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    },
                    "name": {
                        "description": "The name of the recipient.",
                        "type": "string"
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "powerFormFormDataRecipient",
                "description": "",
                "x-ms-summary": ""
            },
            "powerFormRecipient": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "(Optional) The access code that the recipient must enter to access the PowerForm.\n\nMaximum Length: 50 characters. The code must also conform to the account's access code format setting.\n\nIf blank but the signer accessCode property is set in the envelope, then that value is used.\n\nIf blank and the signer accessCode property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeLocked": {
                        "description": "When **true,** the `accessCode` property is locked and cannot be edited.",
                        "type": "string"
                    },
                    "accessCodeRequired": {
                        "description": "When **true,** the recipient must enter the `accessCode` to access the PowerForm.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the recipient.\n\n**Note:** For self-service documents where you do not know who the recipients are in advance, you can leave this property blank.",
                        "type": "string"
                    },
                    "emailLocked": {
                        "description": "When **true,** the recipient's email address is locked and cannot be edited.",
                        "type": "string"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckRequired": {
                        "description": "Indicates if authentication is configured for the account. Valid values are:\n\n- `always`: Authentication checks are performed on every envelope. \n- `never`: Authentication checks are not performed on any envelopes. \n- `optional:` Authentication is configurable per envelope.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the PowerForm recipient.\n\n**Note:** For self-service documents where you do not know who the recipients are in advance, you can leave this property blank.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "roleName": {
                        "description": "The role associated with the recipient (for example, `Member`).\n\nThis property is required when you are working with template recipients and PowerForm recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "templateRequiresIdLookup": {
                        "description": "When **true,** the template used to create the PowerForm requires ID lookup for the recipient.",
                        "type": "string"
                    },
                    "userNameLocked": {
                        "description": "When **true,** the `userName` property for the recipient is locked and cannot be edited.",
                        "type": "string"
                    }
                },
                "description": "**Note:** For a self-service PowerForm on a website, you can specify the intended recipients generically (for example, use `Member` as the `Name`), and omit personal details such as `email`.",
                "x-ds-definition-name": "powerFormRecipient",
                "x-ms-summary": "**Note:** For a self-service PowerForm on a website, you can specify the intended recipients generically (for example, use `Member` as the `Name`), and omit personal details such as `email`."
            },
            "powerFormSendersResponse": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "format": "int32",
                        "description": "The last index position in the result set. ",
                        "type": "integer"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "powerFormSenders": {
                        "description": "An array of `userInfo` objects containing information about users who have sent PowerForms.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "format": "int32",
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "integer"
                    },
                    "startPosition": {
                        "format": "int32",
                        "description": "The starting index position of the current result set.",
                        "type": "integer"
                    },
                    "totalSetSize": {
                        "format": "int32",
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "integer"
                    }
                },
                "description": "This object includes information about the users who have sent PowerForms.",
                "x-ds-definition-name": "powerFormSendersResponse",
                "x-ms-summary": "This object includes information about the users who have sent PowerForms."
            },
            "powerFormsFormDataResponse": {
                "type": "object",
                "properties": {
                    "envelopes": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/powerFormFormDataEnvelope"
                        }
                    }
                },
                "x-ds-definition-name": "powerFormsFormDataResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "powerFormsRequest": {
                "type": "object",
                "properties": {
                    "powerForms": {
                        "description": "An array of PowerForm objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/powerForm"
                        }
                    }
                },
                "x-ds-definition-name": "powerFormsRequest",
                "description": "",
                "x-ms-summary": ""
            },
            "powerFormsResponse": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "format": "int32",
                        "description": "The last index position in the result set. ",
                        "type": "integer"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "powerForms": {
                        "description": "An array of PowerForm objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/powerForm"
                        }
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "format": "int32",
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "integer"
                    },
                    "startPosition": {
                        "format": "int32",
                        "description": "The starting index position of the current result set.",
                        "type": "integer"
                    },
                    "totalSetSize": {
                        "format": "int32",
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "integer"
                    }
                },
                "description": "A list of PowerForms.",
                "x-ds-definition-name": "powerFormsResponse",
                "x-ms-summary": "A list of PowerForms."
            },
            "prefillFormData": {
                "type": "object",
                "properties": {
                    "formData": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/formDataItem"
                        }
                    },
                    "senderEmail": {
                        "description": "The sender's email address.",
                        "type": "string"
                    },
                    "senderName": {
                        "description": "The sender's name.",
                        "type": "string"
                    },
                    "senderUserId": {
                        "description": "The ID of the sender.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "prefillFormData",
                "description": "",
                "x-ms-summary": ""
            },
            "prefillTabs": {
                "type": "object",
                "properties": {
                    "checkboxTabs": {
                        "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/checkbox"
                        }
                    },
                    "dateTabs": {
                        "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/date"
                        }
                    },
                    "emailTabs": {
                        "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/email"
                        }
                    },
                    "numberTabs": {
                        "description": "A list of Number tabs.\n\nNumber tabs validate that the entered value is a number.\nThey do not support advanced validation or display options.\n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about number tabs\nsee [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/number"
                        }
                    },
                    "radioGroupTabs": {
                        "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/radioGroup"
                        }
                    },
                    "senderCompanyTabs": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/senderCompany"
                        }
                    },
                    "senderNameTabs": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/senderName"
                        }
                    },
                    "ssnTabs": {
                        "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ssn"
                        }
                    },
                    "tabGroups": {
                        "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tabGroup"
                        }
                    },
                    "textTabs": {
                        "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/text"
                        }
                    },
                    "zipTabs": {
                        "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/zip"
                        }
                    }
                },
                "description": "Prefill tabs are tabs\nthat the sender can fill in\nbefore the envelope is sent.\nThey are sometimes called\nsender tags or pre-fill fields.\n\nOnly the following tab types can be\nprefill tabs:\n\n- text\n- check boxes\n- radio buttons\n\n\n\n[Pre-Fill Your Own Document Fields][app]\ndescribes how prefill tabs\nwork in the web application.\n\n\n[Customize your envelopes with pre-fill fields][catblog]\nshows how to use prefill tabs\nin your application using the eSignature\nSDKs.\n\n[app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html\n[catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields",
                "x-ds-definition-name": "prefillTabs",
                "x-ms-summary": "Prefill tabs are tabs\nthat the sender can fill in\nbefore the envelope is sent.\nThey are sometimes called\nsender tags or pre-fill fields.\n\nOnly the following tab types can be\nprefill tabs:\n\n- text\n- check boxes\n- radio buttons\n\n\n\n[Pre-Fill Your Own Document Fields][app]\ndescribes how prefill tabs\nwork in the web application.\n\n\n[Customize your envelopes with pre-fill fields][catblog]\nshows how to use prefill tabs\nin your application using the eSignature\nSDKs.\n\n[app]:      https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=nwo1611173513994.html\n[catblog]:  https://www.docusign.com/blog/developers/common-api-tasks-customize-your-envelopes-pre-fill-fields"
            },
            "propertyMetadata": {
                "type": "object",
                "properties": {
                    "options": {
                        "description": "An array of option strings supported by this setting.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rights": {
                        "description": "Indicates whether the property is editable. Valid values are:\n\n- `editable`\n- `read_only`",
                        "type": "string"
                    }
                },
                "description": "Metadata about a property.",
                "x-ds-definition-name": "propertyMetadata",
                "x-ms-summary": "Metadata about a property."
            },
            "province": {
                "type": "object",
                "properties": {
                    "isoCode": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "province",
                "description": "",
                "x-ms-summary": ""
            },
            "provisioningInformation": {
                "type": "object",
                "properties": {
                    "defaultConnectionId": {
                        "description": "",
                        "type": "string"
                    },
                    "defaultPlanId": {
                        "description": "",
                        "type": "string"
                    },
                    "distributorCode": {
                        "description": "The code that identifies the billing plan groups and plans for the new account.",
                        "type": "string"
                    },
                    "distributorPassword": {
                        "description": "The password for the `distributorCode`.",
                        "type": "string"
                    },
                    "passwordRuleText": {
                        "description": "",
                        "type": "string"
                    },
                    "planPromotionText": {
                        "description": "",
                        "type": "string"
                    },
                    "purchaseOrderOrPromAllowed": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "provisioningInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "purchasedEnvelopesInformation": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "The total amount of the purchase.",
                        "type": "string"
                    },
                    "appName": {
                        "description": "The AppName of the client application.",
                        "type": "string"
                    },
                    "currencyCode": {
                        "description": "Specifies the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code of the purchase.\n",
                        "type": "string"
                    },
                    "platform": {
                        "description": "The Platform of the client application",
                        "type": "string"
                    },
                    "productId": {
                        "description": "The Product ID from the AppStore.",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The quantity of envelopes to add to the account.",
                        "type": "string"
                    },
                    "receiptData": {
                        "description": "The encrypted Base64 encoded receipt data.",
                        "type": "string"
                    },
                    "storeName": {
                        "description": "The name of the AppStore.",
                        "type": "string"
                    },
                    "transactionId": {
                        "description": "Specifies the Transaction ID from the AppStore.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "purchasedEnvelopesInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "radio": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "selected": {
                        "description": "When **true,** the radio button is selected.",
                        "type": "string"
                    },
                    "selectedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "One of the selectable radio buttons\nin the `radios` property\nof a [`radioGroup`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) tab.\n",
                "x-ds-definition-name": "radio",
                "x-ms-summary": "One of the selectable radio buttons\nin the `radios` property\nof a [`radioGroup`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/) tab.\n"
            },
            "radioGroup": {
                "type": "object",
                "properties": {
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "groupName": {
                        "description": "The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.",
                        "type": "string"
                    },
                    "groupNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "radios": {
                        "description": "Specifies the locations and status for radio buttons that are grouped together.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/radio"
                        }
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "tooltipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "This group tab is used to place radio buttons on a document.\nThe `radios` property\ncontains a list of\n[`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)\nobjects  associated with the group. Only one radio button can\nbe selected in a group.\n",
                "x-ds-definition-name": "radioGroup",
                "x-ms-summary": "This group tab is used to place radio buttons on a document.\nThe `radios` property\ncontains a list of\n[`radio`](/docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/)\nobjects  associated with the group. Only one radio button can\nbe selected in a group.\n"
            },
            "recipientAdditionalNotification": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "secondaryDeliveryMethod": {
                        "description": "The secondary delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "secondaryDeliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "secondaryDeliveryStatus": {
                        "description": "The status of the delivery. This property is read-only.\n\nOne of:\n\n- `autoresponded`\n- `optedout`\n- `limitreached`\n",
                        "type": "string"
                    }
                },
                "description": "Describes an additional notification method.",
                "x-ds-definition-name": "recipientAdditionalNotification",
                "x-ms-summary": "Describes an additional notification method."
            },
            "recipientAttachment": {
                "type": "object",
                "properties": {
                    "attachmentId": {
                        "description": "The unique identifier for the attachment.",
                        "type": "string"
                    },
                    "attachmentType": {
                        "description": "Specifies the type of the attachment for the recipient. Possible values are:\n\n- `.htm`\n- `.xml`",
                        "type": "string"
                    },
                    "data": {
                        "description": "A Base64-encoded representation of the attachment that is used to upload and download the file. File attachments may be up to 50 MB in size.",
                        "type": "string"
                    },
                    "label": {
                        "description": "An optional label for the attachment.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the attachment.",
                        "type": "string"
                    },
                    "remoteUrl": {
                        "description": "The URL of a previously staged chunked upload. Using a chunked upload enables you to stage a large, chunkable temp file. You then use the `remoteUrl` property to reference the chunked upload as the content in attachment and document-related requests. The `remoteUrl` property cannot be used for downloads.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "recipientAttachment",
                "description": "",
                "x-ms-summary": ""
            },
            "recipientDomain": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "string"
                    },
                    "domainCode": {
                        "description": "",
                        "type": "string"
                    },
                    "domainName": {
                        "description": "",
                        "type": "string"
                    },
                    "recipientDomainId": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "recipientDomain",
                "description": "",
                "x-ms-summary": ""
            },
            "recipientEmailNotification": {
                "type": "object",
                "properties": {
                    "emailBody": {
                        "description": "The body of the email message.",
                        "type": "string"
                    },
                    "emailBodyMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailSubject": {
                        "description": "The subject line for the email notification.",
                        "type": "string"
                    },
                    "emailSubjectMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "supportedLanguage": {
                        "description": "The language to use for the standard email format and signing view for a recipient.\n\nFor example, this setting determines the language of the recipient's email notification message. It also determines the language used for buttons and tabs in both the email notification and the signing experience.\n\n**Note:** This setting affects only DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.\n\nTo retrieve the possible values, use the [Accounts::listSupportedLanguages][ListLang] method.\n\n[ListLang]: /docs/esign-rest-api/reference/accounts/accounts/listsupportedlanguages/\n",
                        "type": "string"
                    },
                    "supportedLanguageMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "recipientEmailNotification",
                "description": "Sets custom email subject and email body for individual\nrecipients. **Note:** You must explicitly set `supportedLanguage`\nif you use this feature.\n",
                "x-ms-summary": "Sets custom email subject and email body for individual\nrecipients. **Note:** You must explicitly set `supportedLanguage`\nif you use this feature.\n"
            },
            "recipientEvent": {
                "type": "object",
                "properties": {
                    "includeDocuments": {
                        "description": "When **true,**\nthe Connect webhook messages\nwill include the envelope's PDF documents.\nIncluding the PDF documents\ngreatly increases the size of the notification messages.\nEnsure that your listener can handle\nincoming messages that are 25MB or larger.",
                        "type": "string"
                    },
                    "recipientEventStatusCode": {
                        "description": "Send a webhook notification for the following recipient statuses: Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "recipientEvent",
                "description": "",
                "x-ms-summary": ""
            },
            "recipientFormData": {
                "type": "object",
                "properties": {
                    "DeclinedTime": {
                        "description": "The date and time the recipient declined the envelope.",
                        "type": "string"
                    },
                    "DeliveredTime": {
                        "description": "The date and time the recipient viewed the documents in the envelope in the DocuSign signing UI.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The recipient's email address.",
                        "type": "string"
                    },
                    "formData": {
                        "description": "An array of form data objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/formDataItem"
                        }
                    },
                    "name": {
                        "description": "The name of the recipient.",
                        "type": "string"
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    },
                    "SentTime": {
                        "description": "The date and time the envelope was sent to the recipient.",
                        "type": "string"
                    },
                    "SignedTime": {
                        "description": "The date and time the recipient signed the documents.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "recipientFormData",
                "description": "",
                "x-ms-summary": ""
            },
            "recipientGroup": {
                "type": "object",
                "properties": {
                    "groupMessage": {
                        "description": "The group message, typically a description of the group.",
                        "type": "string"
                    },
                    "groupName": {
                        "description": "The name of the group.",
                        "type": "string"
                    },
                    "recipients": {
                        "description": "An array of recipient objects that provides details about the recipients of the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientOption"
                        }
                    }
                },
                "description": "Describes a group of recipients.",
                "x-ds-definition-name": "recipientGroup",
                "x-ms-summary": "Describes a group of recipients."
            },
            "recipientIdentityInputOption": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "phoneNumberList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientIdentityPhoneNumber"
                        }
                    },
                    "valueType": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "recipientIdentityInputOption",
                "description": "",
                "x-ms-summary": ""
            },
            "recipientIdentityPhoneNumber": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "description": "The numeric country calling code for the phone number. For example, the country calling code for the US and Canada is 1. For the UK, the country calling code is 44.\n\nDo not include the + symbol.",
                        "type": "string"
                    },
                    "countryCodeLock": {
                        "description": "",
                        "type": "string"
                    },
                    "countryCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "extension": {
                        "description": "The telephone extension, if any.",
                        "type": "string"
                    },
                    "extensionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "number": {
                        "description": "The telephone number. Use only the digits `0`-`9`. Remove any non-numeric characters.\n\nDo not include the `countryCode`. For US, Canada, and other\n[North American Numbering Plan](https://en.wikipedia.org/wiki/North_American_Numbering_Plan) countries, do not include a leading `1` or `0`.",
                        "type": "string"
                    },
                    "numberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "recipientIdentityPhoneNumber",
                "description": "",
                "x-ms-summary": ""
            },
            "recipientIdentityVerification": {
                "type": "object",
                "properties": {
                    "inputOptions": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientIdentityInputOption"
                        }
                    },
                    "workflowId": {
                        "description": "ID of the Identity Verification worklow used to verify recipients' identity.\n\nThis ID must match one of the [workflowId](/docs/esign-rest-api/reference/accounts/identityverifications/list/) available to your account.",
                        "type": "string"
                    },
                    "workflowIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "workflowLabel": {
                        "description": "",
                        "type": "string"
                    }
                },
                "description": "Specifies ID Verification applied on an envelope by workflow ID.\nSee the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)\nmethod in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource\nfor more information on how to retrieve workflow IDs available for an account.\nThis can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html) methods.",
                "x-ds-definition-name": "recipientIdentityVerification",
                "x-ms-summary": "Specifies ID Verification applied on an envelope by workflow ID.\nSee the [list](/docs/esign-rest-api/reference/accounts/identityverifications/list/)\nmethod in the [IdentityVerifications](/docs/esign-rest-api/reference/accounts/identityverifications/) resource\nfor more information on how to retrieve workflow IDs available for an account.\nThis can be used in addition to other [recipient authentication](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=kzp1578456318101.html) methods."
            },
            "recipientNamesResponse": {
                "type": "object",
                "properties": {
                    "multipleUsers": {
                        "description": "When **true,** the email address is used by more than one user.",
                        "type": "string"
                    },
                    "recipientNames": {
                        "description": "The names of the recipients associated with the email address.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "reservedRecipientEmail": {
                        "description": "When **true,** new names cannot be added to the email address.",
                        "type": "string"
                    }
                },
                "description": "This response object contains a list of recipients.",
                "x-ds-definition-name": "recipientNamesResponse",
                "x-ms-summary": "This response object contains a list of recipients."
            },
            "recipientOption": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "The email ID of the agent. This property is required. Maximum length: 100 characters.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full legal name of the recipient. Maximum length: 100 characters.",
                        "type": "string"
                    },
                    "recipientLabel": {
                        "description": "An identifier for the recipient. After assigning this value in a `recipient` object, you can reference it in the `conditions` object to set the recipient as a conditional recipient. For an example, see [How to use conditional recipients](/docs/esign-rest-api/how-to/use-conditional-recipients/).\n",
                        "type": "string"
                    },
                    "roleName": {
                        "description": "Specifies the signing group role of the recipient. This property is required.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    }
                },
                "description": "Describes a recipient who is a member of a conditional group.",
                "x-ds-definition-name": "recipientOption",
                "x-ms-summary": "Describes a recipient who is a member of a conditional group."
            },
            "recipientPhoneAuthentication": {
                "description": "A complex type that contains the elements:\n\n* `recipMayProvideNumber`: A Boolean value that specifies whether the recipient can use the phone number of their choice.\n* `senderProvidedNumbers`: A list of phone numbers that the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign.",
                "type": "object",
                "properties": {
                    "recipMayProvideNumber": {
                        "description": "Boolean. When **true,** the recipient can supply a phone number their choice.",
                        "type": "string"
                    },
                    "recipMayProvideNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recordVoicePrint": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "recordVoicePrintMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderProvidedNumbers": {
                        "description": "An array containing a list of phone numbers that the recipient can use for SMS text authentication. ",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "senderProvidedNumbersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validateRecipProvidedNumber": {
                        "description": " Reserved for DocuSign.",
                        "type": "string"
                    },
                    "validateRecipProvidedNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "recipientPhoneAuthentication",
                "x-ms-summary": "A complex type that contains the elements:\n\n* `recipMayProvideNumber`: A Boolean value that specifies whether the recipient can use the phone number of their choice.\n* `senderProvidedNumbers`: A list of phone numbers that the recipient can use.\n* `recordVoicePrint`: Reserved for DocuSign.\n* `validateRecipProvidedNumber`: Reserved for DocuSign."
            },
            "recipientPhoneNumber": {
                "type": "object",
                "properties": {
                    "countryCode": {
                        "description": "The numeric country calling code for `number`. For example, the country calling code for the US and Canada is `1`, for the UK: `44`,\n\nDo not include the `+` symbol.",
                        "type": "string"
                    },
                    "countryCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "number": {
                        "description": "The telephone number. Use only the digits `0`-`9`. Remove any non-numeric characters.\n\nDo not include the `countryCode`. For US, Canada, and other\n[North American Numbering Plan](https://en.wikipedia.org/wiki/North_American_Numbering_Plan) countries, do not include a leading `1` or `0`.",
                        "type": "string"
                    },
                    "numberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "Describes the recipient phone number.",
                "x-ds-definition-name": "recipientPhoneNumber",
                "x-ms-summary": "Describes the recipient phone number."
            },
            "recipientPreviewRequest": {
                "type": "object",
                "properties": {
                    "assertionId": {
                        "description": "A unique identifier of the authentication event executed by the client application.",
                        "type": "string"
                    },
                    "authenticationInstant": {
                        "description": "A sender-generated value that indicates the date and time that the signer was authenticated.",
                        "type": "string"
                    },
                    "authenticationMethod": {
                        "description": "Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer. \n\nChoose a value from this list: \n* Biometric \n* Email\n* HTTPBasicAuth\n* Kerberos\n* KnowledgeBasedAuth\n* None\n* PaperDocuments\n* Password\n* RSASecureID\n* SingleSignOn_CASiteminder\n* SingleSignOn_InfoCard\n* SingleSignOn_MicrosoftActiveDirectory\n* SingleSignOn_Other\n* SingleSignOn_Passport\n* SingleSignOn_SAML\n* Smartcard\n* SSLMutualAuth\n* X509Certificate\n\nThis information is included in the Certificate of Completion.",
                        "type": "string"
                    },
                    "clientURLs": {
                        "$ref": "#/components/schemas/recipientTokenClientURLs"
                    },
                    "pingFrequency": {
                        "description": "Only used if `pingUrl` is specified. This is the interval, in seconds, between pings on the `pingUrl`.  The default is `300` seconds. Valid values are 60-1200 seconds.",
                        "type": "string"
                    },
                    "pingUrl": {
                        "description": "The client URL that the DocuSign Signing experience should ping to indicate to the client that Signing is active. An HTTP GET call is executed against the client. The response from the client is ignored. The intent is for the client to reset its session timer when the request is received.",
                        "type": "string"
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    },
                    "returnUrl": {
                        "description": "This property is not supported.",
                        "type": "string"
                    },
                    "securityDomain": {
                        "description": "The domain in which the user authenticated.",
                        "type": "string"
                    },
                    "xFrameOptions": {
                        "description": "Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.\n\nValid values are:\n\n- `deny`: The page cannot be displayed in a frame.\n- `same_origin`: The page can only be displayed in a frame on the same origin as the page itself.\n- `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.",
                        "type": "string"
                    },
                    "xFrameOptionsAllowFromUrl": {
                        "description": "When the value of `xFrameOptions` is `allow_from`, this property specifies the origin on which the page is allowed to display in a frame. If the value of `xFrameOptions` is `allow_from`, you must include a value for this property.",
                        "type": "string"
                    }
                },
                "description": "This request object contains the information necessary to create a recipient preview.",
                "x-ds-definition-name": "recipientPreviewRequest",
                "x-ms-summary": "This request object contains the information necessary to create a recipient preview."
            },
            "recipientProofFile": {
                "type": "object",
                "properties": {
                    "hasIdentityAttempts": {
                        "description": "",
                        "type": "string"
                    },
                    "isInProofFile": {
                        "description": "Indicates whether a proof file is available for this recipient.",
                        "type": "string"
                    }
                },
                "description": "The proof file of the recipient. [ID Evidence](/docs/idevidence-api/) uses proof files to store the identification data that recipients submit when verifying their ID with [ID Verification](/docs/esign-rest-api/esign101/concepts/documents/)",
                "x-ds-definition-name": "recipientProofFile",
                "x-ms-summary": "The proof file of the recipient. [ID Evidence](/docs/idevidence-api/) uses proof files to store the identification data that recipients submit when verifying their ID with [ID Verification](/docs/esign-rest-api/esign101/concepts/documents/)"
            },
            "recipientRouting": {
                "type": "object",
                "properties": {
                    "rules": {
                        "$ref": "#/components/schemas/recipientRules"
                    }
                },
                "description": "Describes the recipient routing rules.",
                "x-ds-definition-name": "recipientRouting",
                "x-ms-summary": "Describes the recipient routing rules."
            },
            "recipientRules": {
                "type": "object",
                "properties": {
                    "conditionalRecipients": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/conditionalRecipientRule"
                        }
                    }
                },
                "x-ds-definition-name": "recipientRules",
                "description": "",
                "x-ms-summary": ""
            },
            "recipients": {
                "description": "Specifies the envelope recipients.",
                "type": "object",
                "properties": {
                    "agents": {
                        "description": "A list of agent recipients assigned to the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/agent"
                        }
                    },
                    "carbonCopies": {
                        "description": "A list of carbon copy recipients assigned to the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/carbonCopy"
                        }
                    },
                    "certifiedDeliveries": {
                        "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/certifiedDelivery"
                        }
                    },
                    "currentRoutingOrder": {
                        "description": "The routing order of the current recipient. If this value equals a particular signer's routing order, it indicates that the envelope has been sent to that recipient, but he or she has not completed the required actions.",
                        "type": "string"
                    },
                    "editors": {
                        "description": "A list of users who can edit the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/editor"
                        }
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "inPersonSigners": {
                        "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/inPersonSigner"
                        }
                    },
                    "intermediaries": {
                        "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/intermediary"
                        }
                    },
                    "notaries": {
                        "description": "A list of notary recipients on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notaryRecipient"
                        }
                    },
                    "participants": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/participant"
                        }
                    },
                    "recipientCount": {
                        "description": "The number of recipients in the envelope.",
                        "type": "string"
                    },
                    "seals": {
                        "description": "A list of electronic seals to apply to documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/sealSign"
                        }
                    },
                    "signers": {
                        "description": "A list of signers on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signer"
                        }
                    },
                    "witnesses": {
                        "description": "A list of signers who act as witnesses on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/witness"
                        }
                    }
                },
                "x-ds-definition-name": "recipients",
                "x-ms-summary": "Specifies the envelope recipients."
            },
            "recipientSignatureInformation": {
                "description": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers.",
                "type": "object",
                "properties": {
                    "fontStyle": {
                        "description": "The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.\n\n- `\"1_DocuSign\"`\n- `\"2_DocuSign\"`\n- `\"3_DocuSign\"`\n- `\"4_DocuSign\"`\n- `\"5_DocuSign\"`\n- `\"6_DocuSign\"`\n- `\"7_DocuSign\"`\n- `\"8_DocuSign\"`\n- `\"Mistral\"`\n- `\"Rage Italic\"`\n",
                        "type": "string"
                    },
                    "signatureInitials": {
                        "description": "Specifies the user's signature in initials format.",
                        "type": "string"
                    },
                    "signatureName": {
                        "description": "Specifies the user's signature name.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "recipientSignatureInformation",
                "x-ms-summary": "Allows the sender to pre-specify the signature name, signature initials and signature font used in the signature stamp for the recipient.\n\nUsed only with recipient types In Person Signers and Signers."
            },
            "recipientSignatureProvider": {
                "type": "object",
                "properties": {
                    "sealDocumentsWithTabsOnly": {
                        "description": "By default, electronic seals apply on all documents in an envelope. If any of the documents has a `signHere` tab, then a visual representation of the electronic seal will show up in the final document. If not, the electronic seal will be visible in the metadata but not in the content of the document.\n\nTo apply electronic seals on specific documents only, you must enable the  `sealDocumentsWithTabsOnly` parameter. In this case, Electronic Seal applies only on documents that have `signHere` tabs set for the Electronic Seal recipient. Other documents won't be sealed. ",
                        "type": "string"
                    },
                    "sealName": {
                        "description": "Indicates the name of the electronic seal to apply on documents.\n",
                        "type": "string"
                    },
                    "signatureProviderName": {
                        "description": "The name of an Electronic or Standards Based Signature (digital signature) provider for the signer to use. For details, see [the current provider list](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/). You can also retrieve the list by using the [AccountSignatureProviders: List](/docs/esign-rest-api/reference/accounts/accountsignatureproviders/list/) method.\n\nExample: `universalsignaturepen_default`\n\n",
                        "type": "string"
                    },
                    "signatureProviderNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signatureProviderOptions": {
                        "$ref": "#/components/schemas/recipientSignatureProviderOptions"
                    }
                },
                "description": "An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).\n",
                "x-ds-definition-name": "recipientSignatureProvider",
                "x-ms-summary": "An Electronic or Standards Based Signature (digital signature) provider for the signer to use. [More information](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).\n"
            },
            "recipientSignatureProviderOptions": {
                "type": "object",
                "properties": {
                    "cpfNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "cpfNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "oneTimePassword": {
                        "description": "A pre-shared secret that the signer must enter to complete the signing process. Eg last six digits of the signer's government ID or Social Security number. Or a newly created pre-shared secret for the transaction. Note: some signature providers may require an exact (case-sensitive) match if alphabetic characters are included in the field.",
                        "type": "string"
                    },
                    "oneTimePasswordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signerRole": {
                        "description": "The role or capacity of the signing recipient. Examples: Manager, Approver, etc.",
                        "type": "string"
                    },
                    "signerRoleMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sms": {
                        "description": "The mobile phone number used to send the recipient an access code for the signing ceremony. Format: a string starting with +, then the country code followed by the full mobile phone number without any spaces or special characters. Omit leading zeroes before a city code. Examples: +14155551234, +97235551234, +33505551234.",
                        "type": "string"
                    },
                    "smsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
                "x-ds-definition-name": "recipientSignatureProviderOptions",
                "x-ms-summary": "Option settings for the signature provider. Different providers require or use different options. [The current provider list and the options they require.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)"
            },
            "recipientSMSAuthentication": {
                "description": "Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication.",
                "type": "object",
                "properties": {
                    "senderProvidedNumbers": {
                        "description": "An array containing a list of phone numbers that the recipient can use for SMS text authentication. ",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "senderProvidedNumbersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "recipientSMSAuthentication",
                "x-ms-summary": "Contains the element senderProvidedNumbers which is an Array  of phone numbers the recipient can use for SMS text authentication."
            },
            "recipientsUpdateSummary": {
                "type": "object",
                "properties": {
                    "recipientUpdateResults": {
                        "description": "An array of `recipientUpdateResults` objects that contain details about the recipients.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientUpdateResponse"
                        }
                    }
                },
                "description": "This is the response that the API returns after you update recipients.",
                "x-ds-definition-name": "recipientsUpdateSummary",
                "x-ms-summary": "This is the response that the API returns after you update recipients."
            },
            "recipientTokenClientURLs": {
                "type": "object",
                "properties": {
                    "onAccessCodeFailed": {
                        "description": "",
                        "type": "string"
                    },
                    "onCancel": {
                        "description": "",
                        "type": "string"
                    },
                    "onDecline": {
                        "description": "",
                        "type": "string"
                    },
                    "onException": {
                        "description": "",
                        "type": "string"
                    },
                    "onFaxPending": {
                        "description": "",
                        "type": "string"
                    },
                    "onIdCheckFailed": {
                        "description": "",
                        "type": "string"
                    },
                    "onSessionTimeout": {
                        "description": "",
                        "type": "string"
                    },
                    "onSigningComplete": {
                        "description": "",
                        "type": "string"
                    },
                    "onTTLExpired": {
                        "description": "",
                        "type": "string"
                    },
                    "onViewingComplete": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "recipientTokenClientURLs",
                "description": "",
                "x-ms-summary": ""
            },
            "recipientUpdateResponse": {
                "type": "object",
                "properties": {
                    "combined": {
                        "description": "When you use the query parameter `combine_same_order_recipients` on the PUT Recipients call, the `recipientUpdateResponse` returns this property. When **true,** it indicates that the recipient has been combined or merged with a matching recipient. Recipient matching occurs as part of template matching, and is based on Recipient Role and Routing Order.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    }
                },
                "description": "The recipient details that are returned after you update the recipient.",
                "x-ds-definition-name": "recipientUpdateResponse",
                "x-ms-summary": "The recipient details that are returned after you update the recipient."
            },
            "recipientViewRequest": {
                "type": "object",
                "properties": {
                    "assertionId": {
                        "description": "A unique identifier of the authentication event executed by the client application.",
                        "type": "string"
                    },
                    "authenticationInstant": {
                        "description": "A sender-generated value that indicates the date and time that the signer was authenticated.",
                        "type": "string"
                    },
                    "authenticationMethod": {
                        "description": "Required. Choose a value that most closely matches the technique your application used to authenticate the recipient / signer. \n\nChoose a value from this list: \n* Biometric \n* Email\n* HTTPBasicAuth\n* Kerberos\n* KnowledgeBasedAuth\n* None\n* PaperDocuments\n* Password\n* RSASecureID\n* SingleSignOn_CASiteminder\n* SingleSignOn_InfoCard\n* SingleSignOn_MicrosoftActiveDirectory\n* SingleSignOn_Other\n* SingleSignOn_Passport\n* SingleSignOn_SAML\n* Smartcard\n* SSLMutualAuth\n* X509Certificate\n\nThis information is included in the Certificate of Completion.",
                        "type": "string"
                    },
                    "clientURLs": {
                        "$ref": "#/components/schemas/recipientTokenClientURLs"
                    },
                    "clientUserId": {
                        "description": "A sender-created value. If provided, the recipient is treated as an embedded (captive) recipient or signer.\n\nUse your application's client ID (user ID) for the recipient. Doing so enables the details of your application's authentication of the recipient to be connected to the recipient's signature if the signature is disputed or repudiated.\n\nMaximum length: 100 characters.",
                        "type": "string"
                    },
                    "email": {
                        "description": "(Required) Specifies the email of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.",
                        "type": "string"
                    },
                    "frameAncestors": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "messageOrigins": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pingFrequency": {
                        "description": "Only used if `pingUrl` is specified. This is the interval, in seconds, between pings on the `pingUrl`.  The default is `300` seconds. Valid values are 60-1200 seconds.",
                        "type": "string"
                    },
                    "pingUrl": {
                        "description": "The client URL that the DocuSign Signing experience should ping to indicate to the client that Signing is active. An HTTP GET call is executed against the client. The response from the client is ignored. The intent is for the client to reset its session timer when the request is received.",
                        "type": "string"
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    },
                    "returnUrl": {
                        "description": "(Required) The URL to which the user should be redirected\nafter the signing session has ended.\n\nMaximum Length: 470 characters. If the `returnUrl` exceeds this\nlimit, the user is redirected to a truncated URL\nBe sure to include `https://` in the URL\nor redirecting might fail on some browsers.\n\n\nWhen DocuSign redirects to\nthis URL, it will include an `event` query parameter that your app can use:\n\n* `access_code_failed`: Recipient used incorrect access code.\n* `cancel`: Recipient canceled the signing operation,\n  possibly by using the **Finish Later** option.\n* `decline`: Recipient declined to sign.\n* `exception`: A system error occurred during the signing process.\n* `fax_pending`: Recipient has a fax pending.\n* `id_check_failed`: Recipient failed an ID check.\n* `session_timeout`: The session timed out. An account can control this timeout by using the **Signer Session Timeout** option.\n* `signing_complete`: The recipient completed the signing ceremony.\n* `ttl_expired`: The Time To Live token for the envelope has expired.\n  After being successfully invoked, these tokens expire\n  after five minutes.\n* `viewing_complete`: The recipient completed viewing an envelope\n  that is in a read-only/terminal state,\n  such as completed, declined, or voided.\n\n",
                        "type": "string"
                    },
                    "securityDomain": {
                        "description": "The domain in which the user authenticated.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The user ID of the recipient. You can use either the user ID or email and user name to identify the recipient. \n\nIf `userId` is used and a `clientUserId` is provided, the value in the `userId` property must match a `recipientId` (which you can retrieve with a GET recipients call) for the envelope. \n\nIf a `userId` is used and a `clientUserId` is not provided, the `userId` must match the user ID of the authenticating user.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The username of the recipient. You can use either `email` and `userName` or `userId` to identify the recipient.",
                        "type": "string"
                    },
                    "xFrameOptions": {
                        "description": "Specifies whether a browser should be allowed to render a page in a frame or IFrame. Setting this property ensures that your content is not embedded into unauthorized pages or frames.\n\nValid values are:\n\n- `deny`: The page cannot be displayed in a frame.\n- `same_origin`: The page can only be displayed in a frame on the same origin as the page itself.\n- `allow_from`: The page can only be displayed in a frame on the origin specified by the `xFrameOptionsAllowFromUrl` property.",
                        "type": "string"
                    },
                    "xFrameOptionsAllowFromUrl": {
                        "description": "When the value of `xFrameOptions` is `allow_from`, this property specifies the origin on which the page is allowed to display in a frame. If the value of `xFrameOptions` is `allow_from`, you must include a value for this property.",
                        "type": "string"
                    }
                },
                "description": "The request body for the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/)\nand\n[EnvelopeViews: createSharedRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/) methods.",
                "x-ds-definition-name": "recipientViewRequest",
                "x-ms-summary": "The request body for the [EnvelopeViews: createRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createrecipient/)\nand\n[EnvelopeViews: createSharedRecipient](/docs/esign-rest-api/reference/envelopes/envelopeviews/createsharedrecipient/) methods."
            },
            "referralInformation": {
                "description": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry\n\n**Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only.",
                "type": "object",
                "properties": {
                    "advertisementId": {
                        "description": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry.\n\n**Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only.\n",
                        "type": "string"
                    },
                    "enableSupport": {
                        "description": "When **true,** customer support is provided as part of the account plan.",
                        "type": "string"
                    },
                    "externalOrgId": {
                        "description": "An optional external ID for the referral.",
                        "type": "string"
                    },
                    "groupMemberId": {
                        "description": "",
                        "type": "string"
                    },
                    "idType": {
                        "description": "",
                        "type": "string"
                    },
                    "includedSeats": {
                        "description": "The number of seats (users) included in the plan.",
                        "type": "string"
                    },
                    "industry": {
                        "description": "The name of the industry associated with the referral. \n\nExample: `Accounting`",
                        "type": "string"
                    },
                    "planStartMonth": {
                        "description": "",
                        "type": "string"
                    },
                    "promoCode": {
                        "description": "",
                        "type": "string"
                    },
                    "publisherId": {
                        "description": "",
                        "type": "string"
                    },
                    "referralCode": {
                        "description": "",
                        "type": "string"
                    },
                    "referrerName": {
                        "description": "The name of the referrer.",
                        "type": "string"
                    },
                    "saleDiscountAmount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountFixedAmount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountPercent": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountPeriods": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "saleDiscountSeatPriceOverride": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shopperId": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "referralInformation",
                "x-ms-summary": "A complex type that contains the following information for entering referral and discount information. The following items are included in the referral information (all string content): enableSupport, includedSeats, saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, saleDiscountSeatPriceOverride, planStartMonth, referralCode, referrerName, advertisementId, publisherId, shopperId, promoCode, groupMemberId, idType, and industry\n\n**Note:** saleDiscountPercent, saleDiscountAmount, saleDiscountFixedAmount, saleDiscountPeriods, and saleDiscountSeatPriceOverride are reserved for DocuSign use only."
            },
            "reminders": {
                "description": "A complex element that specifies reminder settings for the envelope.",
                "type": "object",
                "properties": {
                    "reminderDelay": {
                        "description": "An integer specifying the number of days after the recipient receives the envelope that reminder emails are sent to the recipient. The default value is 0.",
                        "type": "string"
                    },
                    "reminderEnabled": {
                        "description": "When **true,** reminders are enabled. The default value is **false.**",
                        "type": "string"
                    },
                    "reminderFrequency": {
                        "description": "An integer specifying the interval in days between reminder emails. The default value is 0.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "reminders",
                "x-ms-summary": "A complex element that specifies reminder settings for the envelope."
            },
            "resourceInformation": {
                "type": "object",
                "properties": {
                    "resources": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    }
                },
                "x-ds-definition-name": "resourceInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "returnUrlRequest": {
                "type": "object",
                "properties": {
                    "returnUrl": {
                        "description": "The URL to which the user should be redirected after the editing session is complete. It must be an absolute URL (e.g. `https://www.example.com` not `www.example.com`).\n\nThe maximum length is 470 characters. If the value exceeds this limit, the user is redirected to a truncated URL.\n\n**Note:** If this property is not provided, the user will have full access to the sending account.\n",
                        "type": "string"
                    }
                },
                "description": "The request body for the [TemplateViews: createEdit](/docs/esign-rest-api/reference/templates/templateviews/createedit/) method.",
                "x-ds-definition-name": "returnUrlRequest",
                "x-ms-summary": "The request body for the [TemplateViews: createEdit](/docs/esign-rest-api/reference/templates/templateviews/createedit/) method."
            },
            "scheduledSending": {
                "type": "object",
                "properties": {
                    "bulkListId": {
                        "description": "The ID of the bulk list. Set this optional value to use scheduled sending with a bulk send operation.",
                        "type": "string"
                    },
                    "resumeDate": {
                        "description": "The timestamp of when the envelope is scheduled to be sent in ISO 8601 format.\n\nThis property is read-only.\n",
                        "type": "string"
                    },
                    "rules": {
                        "description": "User-specified rules indicating how and when the envelope should be scheduled for sending. Only one rule may be specified.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDelayRule"
                        }
                    },
                    "status": {
                        "description": "Status of the scheduled sending job. Valid values:\n\n* `pending`: The envelope has not yet been sent and the scheduled sending delay has not been initiated.\n* `started`: The sender has initiated the sending process. The delay has not elapsed, so the envelope has not yet been sent to the first recipient.\n* `completed`: The delay has elapsed and the envelope has been sent to the first recipient.\n\nThis property is read-only.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "scheduledSending",
                "description": "A complex element that specifies the scheduled sending settings for the envelope.",
                "x-ms-summary": "A complex element that specifies the scheduled sending settings for the envelope."
            },
            "sealIdentifier": {
                "type": "object",
                "properties": {
                    "sealDisplayName": {
                        "description": "The user-friendly display name for a seal.",
                        "type": "string"
                    },
                    "sealName": {
                        "description": "The name of a seal.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "sealIdentifier",
                "description": "",
                "x-ms-summary": ""
            },
            "sealSign": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "customFields": {
                        "description": "Not applicable.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "Not applicable.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "note": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "recipientAttachments": {
                        "description": "Not applicable.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientSignatureProviders": {
                        "description": "(Required) Indicates which electronic seal to apply on documents when creating an envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientSignatureProvider"
                        }
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "(Optional, default: 1) \nSpecifies the routing order of the electronic seal in the envelope.\nThe routing order assigned to your electronic seal cannot be shared with another recipient.\nIt is recommended that you set a routing order for your electronic seals.\n",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "signedDateTime": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "The code associated with the recipient's status. This property is read-only.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "Not applicable.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "Not applicable.",
                        "type": "string"
                    }
                },
                "description": "Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.\n\nExample:\n\n```json\n\"recipients\": {\n      \"seals\": [\n        {\n          \"recipientId\": \"1\",\n          \"routingOrder\" : 1,\n          \"recipientSignatureProviders\": [\n            {\n              \"sealName\": \"52e9d968-xxxx-xxxx-xxxx-4682bc45c106\"\n            }\n        ]\n      }\n    ]\n  },\n    .\n    .\n    .\n```\nFor more information about Electronic Seals, see [Apply Electronic Seals to Your Documents](https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html).\n",
                "x-ds-definition-name": "sealSign",
                "x-ms-summary": "Specifies one or more electronic seals to apply on documents. An electronic seal recipient is a legal entity rather than an actual person. Electronic Seals can be used by organizations and governments to show evidence of origin and integrity of documents. Even though electronic seals can be represented by a tab in a document, they do not require user interaction and apply automatically in the order specified by the sender. The sender is therefore the person authorizing usage of the electronic seal in the flow.\n\nExample:\n\n```json\n\"recipients\": {\n      \"seals\": [\n        {\n          \"recipientId\": \"1\",\n          \"routingOrder\" : 1,\n          \"recipientSignatureProviders\": [\n            {\n              \"sealName\": \"52e9d968-xxxx-xxxx-xxxx-4682bc45c106\"\n            }\n        ]\n      }\n    ]\n  },\n    .\n    .\n    .\n```\nFor more information about Electronic Seals, see [Apply Electronic Seals to Your Documents](https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html).\n"
            },
            "seatDiscount": {
                "type": "object",
                "properties": {
                    "beginSeatCount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "discountPercent": {
                        "description": "The percent of the discount. \n\nExample: `\"0.00\"`",
                        "type": "string"
                    },
                    "endSeatCount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "description": "This object contains information about a seat discount.",
                "x-ds-definition-name": "seatDiscount",
                "x-ms-summary": "This object contains information about a seat discount."
            },
            "senderCompany": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "senderCompany",
                "description": "",
                "x-ms-summary": ""
            },
            "senderEmailNotifications": {
                "type": "object",
                "properties": {
                    "changedSigner": {
                        "description": "When **true,** the sender receives an email notification if the signer changes.",
                        "type": "string"
                    },
                    "clickwrapResponsesLimitNotificationEmail": {
                        "description": "",
                        "type": "string"
                    },
                    "commentsOnlyPrivateAndMention": {
                        "description": "When **true,** the user receives only comments that mention their own user name.",
                        "type": "string"
                    },
                    "commentsReceiveAll": {
                        "description": "When **true,** the user receives all comments.",
                        "type": "string"
                    },
                    "deliveryFailed": {
                        "description": "When **true,** the sender receives an email notification if envelope delivery fails.",
                        "type": "string"
                    },
                    "envelopeComplete": {
                        "description": "When **true,** the user receives an email notification when the envelope has been completed.",
                        "type": "string"
                    },
                    "offlineSigningFailed": {
                        "description": "When **true,** the user receives an email notification if offline signing failed.",
                        "type": "string"
                    },
                    "powerformResponsesLimitNotificationEmail": {
                        "description": "",
                        "type": "string"
                    },
                    "purgeDocuments": {
                        "description": "When **true,** the user receives an email notification when a document purge occurs.",
                        "type": "string"
                    },
                    "recipientViewed": {
                        "description": "When **true,** the sender receives notification that a recipient viewed the envelope.",
                        "type": "string"
                    },
                    "senderEnvelopeDeclined": {
                        "description": "When **true,** the sender receives notification that the envelope was declined.",
                        "type": "string"
                    },
                    "withdrawnConsent": {
                        "description": "When **true,** the user receives an email notification if consent is withdrawn.",
                        "type": "string"
                    }
                },
                "description": "Contains the settings for the email notifications that senders receive about the envelopes that they send.",
                "x-ds-definition-name": "senderEmailNotifications",
                "x-ms-summary": "Contains the settings for the email notifications that senders receive about the envelopes that they send."
            },
            "senderName": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "senderName",
                "description": "",
                "x-ms-summary": ""
            },
            "serverTemplate": {
                "type": "object",
                "properties": {
                    "sequence": {
                        "description": "Specifies the order in which templates are overlaid.",
                        "type": "string"
                    },
                    "templateId": {
                        "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "serverTemplate",
                "description": "",
                "x-ms-summary": ""
            },
            "serviceInformation": {
                "type": "object",
                "properties": {
                    "buildBranch": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "buildBranchDeployedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "buildSHA": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "buildVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "linkedSites": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceVersions": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/serviceVersion"
                        }
                    }
                },
                "x-ds-definition-name": "serviceInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "serviceVersion": {
                "type": "object",
                "properties": {
                    "version": {
                        "description": "The version of the rest API.",
                        "type": "string"
                    },
                    "versionUrl": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "serviceVersion",
                "description": "",
                "x-ms-summary": ""
            },
            "settingsMetadata": {
                "type": "object",
                "properties": {
                    "is21CFRPart11": {
                        "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
                        "type": "string"
                    },
                    "options": {
                        "description": "An array of option strings supported by this setting.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rights": {
                        "description": "Indicates whether the property is editable. Valid values are:\n\n- `editable`\n- `read_only`",
                        "type": "string"
                    },
                    "uiHint": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "uiOrder": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "uiType": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "description": "Metadata that indicates whether a property is editable and describes setting-specific options.",
                "x-ds-definition-name": "settingsMetadata",
                "x-ms-summary": "Metadata that indicates whether a property is editable and describes setting-specific options."
            },
            "sharedItem": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "shared": {
                        "description": "How the item is shared. One of:\n\n- `not_shared`\n- `shared_to`\n- `shared_from`\n- `shared_to_and_from`",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/userInfo"
                    }
                },
                "description": "Information about the shared item.",
                "x-ds-definition-name": "sharedItem",
                "x-ms-summary": "Information about the shared item."
            },
            "signatureGroup": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "description": "The ID of the group being accessed.",
                        "type": "string"
                    },
                    "groupName": {
                        "description": "The name of the group. The search_text provided in the call automatically performs a wild card search on group_name.",
                        "type": "string"
                    },
                    "rights": {
                        "description": "Indicates whether the property is editable. Valid values are:\n\n- `editable`\n- `read_only`",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "signatureGroup",
                "description": "",
                "x-ms-summary": ""
            },
            "signatureGroupDef": {
                "type": "object",
                "properties": {
                    "groupId": {
                        "description": "The ID of the group being accessed.",
                        "type": "string"
                    },
                    "rights": {
                        "description": "Indicates whether the property is editable. Valid values are:\n\n- `editable`\n- `read_only`",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "signatureGroupDef",
                "description": "",
                "x-ms-summary": ""
            },
            "signatureProviderRequiredOption": {
                "type": "object",
                "properties": {
                    "requiredSignatureProviderOptionIds": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "signerType": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "description": "Contains additional information that a specific signature provider requires.",
                "x-ds-definition-name": "signatureProviderRequiredOption",
                "x-ms-summary": "Contains additional information that a specific signature provider requires."
            },
            "signatureType": {
                "type": "object",
                "properties": {
                    "isDefault": {
                        "description": "When **true,** the signature type is the default type.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of signature. Valid values are:\n\n- `electronic`: Indicates an **electronic** signature that is used by common law countries such as the United States, United Kingdom, and Australia. This is the default signature type that DocuSign uses.\n- `universal`: Indicates a **digital** signature that is accepted by both common law and civil law countries. To use digital signatures, you must use the [DocuSign Signature Appliance](/docs/dsa-api/).\n\nFor more information, see [Standards Based Signatures](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/).",
                        "type": "string"
                    }
                },
                "description": "This object contains information about the type of signature.",
                "x-ds-definition-name": "signatureType",
                "x-ms-summary": "This object contains information about the type of signature."
            },
            "signatureUser": {
                "type": "object",
                "properties": {
                    "isDefault": {
                        "description": "Boolean that specifies whether the signature is the default signature for the user.",
                        "type": "string"
                    },
                    "rights": {
                        "description": "Indicates whether the property is editable. Valid values are:\n\n- `editable`\n- `read_only`",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the user.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "signatureUser",
                "description": "",
                "x-ms-summary": ""
            },
            "signatureUserDef": {
                "type": "object",
                "properties": {
                    "isDefault": {
                        "description": "Boolean that specifies whether the signature is the default signature for the user.",
                        "type": "string"
                    },
                    "rights": {
                        "description": "Indicates whether the property is editable. Valid values are:\n\n- `editable`\n- `read_only`",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "signatureUserDef",
                "description": "",
                "x-ms-summary": ""
            },
            "signer": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "agentCanEditEmail": {
                        "description": "Optional element. When **true,** the agent recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "agentCanEditName": {
                        "description": "Optional. When **true,** the agent recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoNavigation": {
                        "description": "When **true,** autonavigation is set for the recipient.\n",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkRecipientsUri": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "canSignOffline": {
                        "description": "When **true,** specifies that the signer can perform the signing ceremony offline.",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "consentDetailsList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentDetails"
                        }
                    },
                    "creationReason": {
                        "description": "The reason why the item was created.",
                        "type": "string"
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "defaultRecipient": {
                        "description": "When **true,** this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
                        "type": "string"
                    },
                    "delegatedBy": {
                        "$ref": "#/components/schemas/delegationInfo"
                    },
                    "delegatedTo": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/delegationInfo"
                        }
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The recipient's email address. The system sends notifications about the documents to sign to this address. Maximum length: 100 characters. ",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "emailRecipientPostSigningURL": {
                        "description": "",
                        "type": "string"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "excludedDocuments": {
                        "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "firstName": {
                        "description": "The recipient's first name. Maximum Length: 50 characters.",
                        "type": "string"
                    },
                    "firstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fullName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fullNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "isBulkRecipient": {
                        "description": "When **true,** this signer is a bulk recipient and the recipient information is contained in a bulk recipient file. \n\nNote that when this is true the email and name for the recipient becomes bulk@recipient.com and \"Bulk Recipient\". These fields can not be changed for the bulk recipient. \n",
                        "type": "string"
                    },
                    "isBulkRecipientMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lastName": {
                        "description": "The recipient's last name.",
                        "type": "string"
                    },
                    "lastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "notaryId": {
                        "description": "The `recipientId` of the notary for this signer.",
                        "type": "string"
                    },
                    "notarySignerEmailSent": {
                        "description": "",
                        "type": "string"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "offlineAttributes": {
                        "$ref": "#/components/schemas/offlineAttributes"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "proofFile": {
                        "$ref": "#/components/schemas/recipientProofFile"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientSignatureProviders": {
                        "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientSignatureProvider"
                        }
                    },
                    "recipientSuppliesTabs": {
                        "description": "When **true,** specifies that the recipient creates the tabs.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireSignerCertificate": {
                        "description": "Sets the type of signer certificate required for signing. If left blank, no certificate is required. Only one type of certificate can be set for a signer. Valid values:\n\n* `docusign_express`: Requires a DocuSign Express certificate.\n* `safe`: Requires a SAFE-BioPharma certificate.\n* `open_trust`: Requires an OpenTrust certificate. \n\n**Important:** There are certain rules and restrictions that must be followed when requiring OpenTrust digital signatures. See [ML:OpenTrust Rules and Restrictions] for more information. \n ",
                        "type": "string"
                    },
                    "requireSignOnPaper": {
                        "description": "When **true,** the signer must print, sign, and upload or fax the signed documents to DocuSign.",
                        "type": "string"
                    },
                    "requireUploadSignature": {
                        "description": "When **true,** the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.",
                        "type": "string"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signatureInfo": {
                        "$ref": "#/components/schemas/recipientSignatureInformation"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signInEachLocation": {
                        "description": "When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
                        "type": "string"
                    },
                    "signInEachLocationMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "Specifies the status of the recipient at the time of the request. This property is read-only. Possible values are:\n\n- `created`: The recipient is in a draft state. This is only associated with draft envelopes (envelopes with a created status).\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing web site. This is not an email delivery of the documents in an envelope.\n- `signed`; The recipient has completed (performed all required interactions, such as signing or entering data) all required tags in an envelope. This is a temporary state during processing, after which the recipient is automatically moved to completed.\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `faxpending`: The recipient has finished signing and the system is waiting a fax attachment by the recipient before completing their signing step.\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used by the DocuSign webapp (also known as the DocuSign console) to inform senders about the auto-responded email.\n",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "description": "A complex type containing information about a signer recipient. A signer is a recipient who must take action on a document, such as sign, initial, date, or add data to form fields on a document.",
                "x-ds-definition-name": "signer",
                "x-ms-summary": "A complex type containing information about a signer recipient. A signer is a recipient who must take action on a document, such as sign, initial, date, or add data to form fields on a document."
            },
            "signerAttachment": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "handDrawRequired": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "optional": {
                        "description": "When **true,** the recipient does not need to complete this tab to complete the signing process.",
                        "type": "string"
                    },
                    "optionalMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "scaleValue": {
                        "description": "Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.",
                        "type": "string"
                    },
                    "scaleValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+0, -24)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+0, -24)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to attach supporting\ndocuments to an envelope.\n",
                "x-ds-definition-name": "signerAttachment",
                "x-ms-summary": "A tab that allows the recipient to attach supporting\ndocuments to an envelope.\n"
            },
            "signerEmailNotifications": {
                "description": "An array of email notifications that specifies the email the user receives when they are a recipient. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account email notification settings when the user is created.\n",
                "type": "object",
                "properties": {
                    "agentNotification": {
                        "description": "When **true,** the user receives agent notification emails.",
                        "type": "string"
                    },
                    "carbonCopyNotification": {
                        "description": "When **true,** the user receives notifications of carbon copy deliveries.",
                        "type": "string"
                    },
                    "certifiedDeliveryNotification": {
                        "description": "When **true,** the user receives notifications of certified deliveries.",
                        "type": "string"
                    },
                    "commentsOnlyPrivateAndMention": {
                        "description": "When **true,** the user receives only comments that mention their own user name.",
                        "type": "string"
                    },
                    "commentsReceiveAll": {
                        "description": "When **true,** the user receives all comments.",
                        "type": "string"
                    },
                    "documentMarkupActivation": {
                        "description": "When **true,** the user receives notification that document markup has been activated.",
                        "type": "string"
                    },
                    "envelopeActivation": {
                        "description": "When **true,** the user receives notification that the envelope has been activated.",
                        "type": "string"
                    },
                    "envelopeComplete": {
                        "description": "When **true,** the user receives an email notification when the envelope has been completed.",
                        "type": "string"
                    },
                    "envelopeCorrected": {
                        "description": "When **true,** the user receives notification that the envelope has been corrected.",
                        "type": "string"
                    },
                    "envelopeDeclined": {
                        "description": "When **true,** the user receives notification that the envelope has been declined.",
                        "type": "string"
                    },
                    "envelopeVoided": {
                        "description": "When **true,** the user receives notification that the envelope has been voided.",
                        "type": "string"
                    },
                    "faxReceived": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "offlineSigningFailed": {
                        "description": "When **true,** the user receives an email notification if offline signing failed.",
                        "type": "string"
                    },
                    "purgeDocuments": {
                        "description": "When **true,** the user receives an email notification when a document purge occurs.",
                        "type": "string"
                    },
                    "reassignedSigner": {
                        "description": "When **true,** the user receives notification that the envelope has been reassigned.",
                        "type": "string"
                    },
                    "whenSigningGroupMember": {
                        "description": "When **true,** the user receives notification that he or she is a member of the signing group.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "signerEmailNotifications",
                "x-ms-summary": "An array of email notifications that specifies the email the user receives when they are a recipient. When the specific email notification is set to true, the user receives those types of email notifications from DocuSign. The user inherits the default account email notification settings when the user is created.\n"
            },
            "signHere": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "handDrawRequired": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "height": {
                        "description": "Not applicable to Sign Here tab.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "isSealSignTab": {
                        "description": "When **true,**  the tab contains a visual representation for an electronic seal in a document.",
                        "type": "string"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.\n",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "optional": {
                        "description": "When **true,** the recipient does not need to complete this tab to complete the signing process.",
                        "type": "string"
                    },
                    "optionalMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.\nMust be 1 for supplemental documents.\n",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "scaleValue": {
                        "description": "Scales the size of the tab. This field accepts values from 0.5 to 2.0, where  0.5 is half the normal size, 1.0 is normal size, and 2.0 is twice the normal size.",
                        "type": "string"
                    },
                    "scaleValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "stamp": {
                        "$ref": "#/components/schemas/stamp"
                    },
                    "stampType": {
                        "description": "The type of stamp. Valid values are:\n\n- `signature`: A signature image. This is the default value.\n- `stamp`: A stamp image.\n- null",
                        "type": "string"
                    },
                    "stampTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "Not applicable to Sign Here tab.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+1, -7)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (+1, -7)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to sign a document. May be\noptional.\n",
                "x-ds-definition-name": "signHere",
                "x-ms-summary": "A tab that allows the recipient to sign a document. May be\noptional.\n"
            },
            "signingGroup": {
                "type": "object",
                "properties": {
                    "created": {
                        "description": "The UTC DateTime when the signing group was created. This property is read-only.",
                        "type": "string"
                    },
                    "createdBy": {
                        "description": "The name of the user who created the signing group. This property is read-only.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "groupEmail": {
                        "description": "The email address for the signing group. You can use a group email address to email all of the group members at the same time.",
                        "type": "string"
                    },
                    "groupName": {
                        "description": "The name of the group.",
                        "type": "string"
                    },
                    "groupType": {
                        "description": "The type of the group. The only valid value for this request is `sharedSigningGroup`.",
                        "type": "string"
                    },
                    "modified": {
                        "description": "The UTC DateTime when the signing group was last modified. This property is read-only.",
                        "type": "string"
                    },
                    "modifiedBy": {
                        "description": "The user ID (GUID) of the user who last modified this user record. This property is read-only.",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "users": {
                        "description": "User management information.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signingGroupUser"
                        }
                    }
                },
                "description": "Contains details about a signing group. Signing groups enable you to send an envelope to a predefined group of recipients and have any one member of the group sign your documents. When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature.",
                "x-ds-definition-name": "signingGroup",
                "x-ms-summary": "Contains details about a signing group. Signing groups enable you to send an envelope to a predefined group of recipients and have any one member of the group sign your documents. When you send an envelope to a signing group, anyone in the group can open it and sign it with their own signature."
            },
            "signingGroupInformation": {
                "type": "object",
                "properties": {
                    "groups": {
                        "description": "A collection group objects containing information about the groups.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signingGroup"
                        }
                    }
                },
                "x-ds-definition-name": "signingGroupInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "signingGroupUser": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "userName": {
                        "description": "The name of the group member. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "signingGroupUser",
                "description": "",
                "x-ms-summary": ""
            },
            "signingGroupUsers": {
                "type": "object",
                "properties": {
                    "users": {
                        "description": "User management information.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signingGroupUser"
                        }
                    }
                },
                "x-ds-definition-name": "signingGroupUsers",
                "description": "",
                "x-ms-summary": ""
            },
            "smartContractInformation": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "uri": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "smartContractInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "smartSection": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caseSensitive": {
                        "description": "When **true,** the `startAnchor` and `endAnchor` for the Smart Section must match both the case and the content of the strings in the HTML.",
                        "type": "boolean"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "displaySettings": {
                        "$ref": "#/components/schemas/smartSectionDisplaySettings"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "endAnchor": {
                        "description": "Specifies the end of the area in the HTML where the display settings will be applied. If you do not specify an end anchor, the end of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
                        "type": "string"
                    },
                    "endPosition": {
                        "$ref": "#/components/schemas/smartSectionAnchorPosition"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "overlayType": {
                        "description": "The type of overlay to draw on the document. The following overlay types are supported:\n\n- `line`\n- `outline`\n",
                        "type": "string"
                    },
                    "overlayTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "removeEndAnchor": {
                        "description": "When **true,** removes the end anchor string for the Smart Section from the HTML, preventing it from displaying.",
                        "type": "boolean"
                    },
                    "removeStartAnchor": {
                        "description": "When **true,** removes the start anchor string for the Smart Section from the HTML, preventing it from displaying.",
                        "type": "boolean"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "startAnchor": {
                        "description": "Specifies the beginning of the area in the HTML where the display settings will be applied. If you do not specify a start anchor, the beginning of the document will be used by default.\n\n**Note:** A start anchor, an end anchor, or both are required.",
                        "type": "string"
                    },
                    "startPosition": {
                        "$ref": "#/components/schemas/smartSectionAnchorPosition"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "smartSection",
                "description": "",
                "x-ms-summary": ""
            },
            "smartSectionAnchorPosition": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "format": "int32",
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "integer"
                    },
                    "xPosition": {
                        "format": "double",
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "number"
                    },
                    "yPosition": {
                        "format": "double",
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "number"
                    }
                },
                "x-ds-definition-name": "smartSectionAnchorPosition",
                "description": "",
                "x-ms-summary": ""
            },
            "smartSectionCollapsibleDisplaySettings": {
                "type": "object",
                "properties": {
                    "arrowClosed": {
                        "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the closed state.\n\nOne of the following:\n\n- `up`: In the closed state, the disclosure arrow points up.\n- `down`: In the closed state, the disclosure arrow points down.\n- `left`: In the closed state, the disclosure arrow points left.\n- `right`: In the closed state, the disclosure arrow points right.\n",
                        "type": "string"
                    },
                    "arrowColor": {
                        "description": "A CSS color value (such as `#DCF851`) that indicates the color of the arrow.\n",
                        "type": "string"
                    },
                    "arrowLocation": {
                        "description": "The location of the arrow relative to the collapsible section's label. Possible values are:\n\n- `right` (default)\n- `left`\n",
                        "type": "string"
                    },
                    "arrowOpen": {
                        "description": "Indicates the direction of the disclosure arrow\nwhen the collapsible section is in the open state.\n\nOne of the following:\n\n- `up`: In the open state, the disclosure arrow points up.\n- `down`: In the open state, the disclosure arrow points down.\n- `left`: In the open state, the disclosure arrow points left.\n- `right`: In the open state, the disclosure arrow points right.\n",
                        "type": "string"
                    },
                    "arrowSize": {
                        "description": "Indicates the size of the collapsible arrows. Possible values are:\n\n- `small`\n- `large` (default)\n",
                        "type": "string"
                    },
                    "arrowStyle": {
                        "description": "The name of the CSS style to be used on collapsible arrow section.\n",
                        "type": "string"
                    },
                    "containerStyle": {
                        "description": "The name of the CSS style to be used for the collapsible container.\n",
                        "type": "string"
                    },
                    "labelStyle": {
                        "description": "The name of the CSS style to be used for the collapsible container's label.",
                        "type": "string"
                    },
                    "onlyArrowIsClickable": {
                        "description": "When **true,** only the arrow is clickable to expand or collapse the section.\nWhen **false** (the default), both the label and the arrow are clickable.\n\nIf no arrow is used, this setting is ignored.\n",
                        "type": "boolean"
                    },
                    "outerLabelAndArrowStyle": {
                        "description": "The name of the CSS style to be used for the collapsible container's outer label and arrow style.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "smartSectionCollapsibleDisplaySettings",
                "description": "",
                "x-ms-summary": ""
            },
            "smartSectionDisplaySettings": {
                "type": "object",
                "properties": {
                    "cellStyle": {
                        "description": "Specifies the valid CSS-formatted styles to use on responsive table cells. Only valid in display sections of `responsive_table` or `responsive_table_single_column` types.",
                        "type": "string"
                    },
                    "collapsibleSettings": {
                        "$ref": "#/components/schemas/smartSectionCollapsibleDisplaySettings"
                    },
                    "display": {
                        "description": "Indicates the display type. Must be one of the following enum values:\n\n- **inline:** Leaves the HTML where it is in the document. This allows for adding a label or presenting on a separate page.\n- **collapsible:** The HTML in the section may be expanded or collapsed. By default, the section is expanded.\n- **collapsed:** The HTML in the section may be expanded or collapsed. By default, the section is collapsed.\n- **responsive_table:** Converts the section into a responsive table. Note that this style is applied only on HTML tables that fall within the `startAnchor` and `endAnchor` positions.\n- **responsive_table_single_column:** Converts the section into a responsive, single-column table. Note that this style is applied only on HTML tables that fall within the `startAnchor` and `endAnchor` positions. The table is converted to a single column in which each column becomes a row and is stacked.\n- **print_only:** Prevents this portion of the HTML from displaying in the responsive signing view.",
                        "type": "string"
                    },
                    "displayLabel": {
                        "description": "The label to add to this display section in the signing page.\n",
                        "type": "string"
                    },
                    "displayOrder": {
                        "format": "int32",
                        "description": "The position on the page where the display section appears.",
                        "type": "integer"
                    },
                    "displayPageNumber": {
                        "format": "int32",
                        "description": "The number of the page on which the display section appears.",
                        "type": "integer"
                    },
                    "hideLabelWhenOpened": {
                        "description": "When **true,** the `displayLabel` is hidden when the display section is expanded and the display section is no longer collapsible. This property is valid only when the value of the `display` property is `collapsed`.",
                        "type": "boolean"
                    },
                    "inlineOuterStyle": {
                        "description": "Specifies the valid CSS-formatted styles to use on inline display sections. This property is valid only when the value of the `display` property is `inline`.",
                        "type": "string"
                    },
                    "labelWhenOpened": {
                        "description": "The label for the display section when it is expanded from a collapsed state. This label displays only on the first opening and is only valid with the value of the `display` property is `collapsed`.",
                        "type": "string"
                    },
                    "preLabel": {
                        "description": "Enables you to add descriptive text that appears before a collapsed section or continue button.",
                        "type": "string"
                    },
                    "scrollToTopWhenOpened": {
                        "description": "When **true** and the section is expanded,\nthe position of the section-close control\nscrolls to the top of the screen. This property is only valid when the value of the `display` property is `collapsed`.\n",
                        "type": "boolean"
                    },
                    "tableStyle": {
                        "description": "Specifies the valid CSS-formatted styles to use on responsive tables. This property is valid only when the value of the `display` property is `responsive_table` or `responsive_table_single_column`.",
                        "type": "string"
                    }
                },
                "description": "These properties define how a Smart Section displays. A Smart Section is a type of display section.",
                "x-ds-definition-name": "smartSectionDisplaySettings",
                "x-ms-summary": "These properties define how a Smart Section displays. A Smart Section is a type of display section."
            },
            "socialAccountInformation": {
                "type": "object",
                "properties": {
                    "email": {
                        "description": "The users email address.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "provider": {
                        "description": "The social account provider (Facebook, Yahoo, etc.)",
                        "type": "string"
                    },
                    "socialId": {
                        "description": "The ID provided by the Socal Account.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The full user name for the account.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "socialAccountInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "socialAuthentication": {
                "type": "object",
                "properties": {
                    "authentication": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "socialAuthentication",
                "description": "",
                "x-ms-summary": ""
            },
            "ssn": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderRequired": {
                        "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                        "type": "string"
                    },
                    "senderRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationMessageMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationPattern": {
                        "description": "A regular expression used to validate input for the tab.",
                        "type": "string"
                    },
                    "validationPatternMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n",
                "x-ds-definition-name": "ssn",
                "x-ms-summary": "A one-line field that allows the recipient to enter a Social\nSecurity Number. The SSN can be typed with or without\ndashes. It uses the same parameters as a Text tab, with the\nvalidation message and pattern set for SSN information.\n"
            },
            "ssn4InformationInput": {
                "type": "object",
                "properties": {
                    "displayLevelCode": {
                        "description": "Specifies the display level for the recipient. Valid values are:\n* `ReadOnly`\n* `Editable`\n* `DoNotDisplay`",
                        "type": "string"
                    },
                    "receiveInResponse": {
                        "description": "A Boolean value that specifies whether the information must be returned in the response.",
                        "type": "string"
                    },
                    "ssn4": {
                        "description": "The last four digits of the recipient's Social Security Number (SSN).",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "ssn4InformationInput",
                "description": "",
                "x-ms-summary": ""
            },
            "ssn9InformationInput": {
                "type": "object",
                "properties": {
                    "displayLevelCode": {
                        "description": "Specifies the display level for the recipient. Valid values are:\n* `ReadOnly`\n* `Editable`\n* `DoNotDisplay`",
                        "type": "string"
                    },
                    "ssn9": {
                        "description": "The recipient's full Social Security Number (SSN).",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "ssn9InformationInput",
                "description": "",
                "x-ms-summary": ""
            },
            "stamp": {
                "type": "object",
                "properties": {
                    "adoptedDateTime": {
                        "description": "The UTC date and time when the user adopted the signature.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "customField": {
                        "description": "",
                        "type": "string"
                    },
                    "dateStampProperties": {
                        "$ref": "#/components/schemas/dateStampProperties"
                    },
                    "disallowUserResizeStamp": {
                        "description": "When **true,** users may not resize the stamp.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "externalID": {
                        "description": "Optionally specify an external identifier for the user's signature.",
                        "type": "string"
                    },
                    "imageBase64": {
                        "description": "",
                        "type": "string"
                    },
                    "imageType": {
                        "description": "Specificies the type of image. Valid values:\n\n- `stamp_image`\n- `signature_image`\n- `initials_image`",
                        "type": "string"
                    },
                    "lastModifiedDateTime": {
                        "description": "The date and time that the item was last modified.",
                        "type": "string"
                    },
                    "phoneticName": {
                        "description": "The phonetic spelling of the `signatureName`.",
                        "type": "string"
                    },
                    "signatureName": {
                        "description": "Specifies the user's signature name.",
                        "type": "string"
                    },
                    "stampFormat": {
                        "description": "The format of a stamp. Valid values are:\n\n- `NameHanko`: The stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents the signer's name and the date. ",
                        "type": "string"
                    },
                    "stampImageUri": {
                        "description": "The URI for retrieving the image of the user's stamp.",
                        "type": "string"
                    },
                    "stampSizeMM": {
                        "description": "The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "stamp",
                "description": "",
                "x-ms-summary": ""
            },
            "supportedLanguages": {
                "type": "object",
                "properties": {
                    "languages": {
                        "description": "A list of languages that you can use for a recipient's language setting. These are the languages that you can set for the standard email format and signing view for each recipient.\n\nFor example, in the recipient's email notification, this setting affects elements such as the standard introductory text describing the request to sign. It also determines the language used for buttons and tabs in both the email notification and the signing experience.\n\n**Note:** Setting a language for a recipient affects only the DocuSign standard text. Any custom text that you enter for the `emailBody` and `emailSubject` of the notification is not translated, and appears exactly as you enter it.\n\nExample:\n\n```\n{\n    \"languages\": [\n        {\n            \"name\": \"Arabic (ar)\",\n            \"value\": \"ar\"\n        },\n        {\n            \"name\": \"Bulgarian (bg)\",\n            \"value\": \"bg\"\n        },\n        .\n        .\n        .\n}\n```",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    }
                },
                "description": "A list of supported languages.",
                "x-ds-definition-name": "supportedLanguages",
                "x-ms-summary": "A list of supported languages."
            },
            "tabAccountSettings": {
                "type": "object",
                "properties": {
                    "allowTabOrder": {
                        "description": "When **true,** account users can set a tab order for the signing process.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowTabOrderMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "approveDeclineTabsEnabled": {
                        "description": "When **true,** approve and decline tabs are enabled.",
                        "type": "string"
                    },
                    "approveDeclineTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "calculatedFieldsEnabled": {
                        "description": "When **true,** [calculated fields](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html) are enabled for tabs.",
                        "type": "string"
                    },
                    "calculatedFieldsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "checkboxTabsEnabled": {
                        "description": "When **true,** checkbox tabs are enabled.",
                        "type": "string"
                    },
                    "checkBoxTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "dataFieldRegexEnabled": {
                        "description": "When **true,** regular expressions are enabled for tabs that contain data fields.",
                        "type": "string"
                    },
                    "dataFieldRegexMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "dataFieldSizeEnabled": {
                        "description": "When **true,** setting character limits for input fields is enabled.",
                        "type": "string"
                    },
                    "dataFieldSizeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "drawTabsEnabled": {
                        "description": "",
                        "type": "string"
                    },
                    "drawTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "firstLastEmailTabsEnabled": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "firstLastEmailTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "listTabsEnabled": {
                        "description": "When **true,** list tabs are enabled.",
                        "type": "string"
                    },
                    "listTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "noteTabsEnabled": {
                        "description": "When **true,** note tabs are enabled.",
                        "type": "string"
                    },
                    "noteTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "numericalTabsEnabled": {
                        "description": "",
                        "type": "string"
                    },
                    "numericalTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "prefillTabsEnabled": {
                        "description": "",
                        "type": "string"
                    },
                    "prefillTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "radioTabsEnabled": {
                        "description": "When **true,** radio button tabs are enabled.",
                        "type": "string"
                    },
                    "radioTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "savingCustomTabsEnabled": {
                        "description": "When **true,** saving custom tabs is enabled.",
                        "type": "string"
                    },
                    "savingCustomTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "senderToChangeTabAssignmentsEnabled": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "senderToChangeTabAssignmentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "sharedCustomTabsEnabled": {
                        "description": "When **true,** shared custom tabs are enabled.",
                        "type": "string"
                    },
                    "sharedCustomTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "tabDataLabelEnabled": {
                        "description": "When **true,** [data\nlabels](https://support.docusign.com/en/videos/Data-Labels) are enabled.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "tabDataLabelMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "tabLocationEnabled": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "tabLocationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "tabLockingEnabled": {
                        "description": "When **true,** tab locking is enabled.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "tabLockingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "tabScaleEnabled": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "tabScaleMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "tabTextFormattingEnabled": {
                        "description": "When **true,** text formatting (such as font type, font size,\nfont color, bold, italic, and underline) is enabled for tabs that\nsupport formatting.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "tabTextFormattingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "textTabsEnabled": {
                        "description": "When **true,** text tabs are enabled.",
                        "type": "string"
                    },
                    "textTabsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    }
                },
                "x-ds-definition-name": "tabAccountSettings",
                "description": "",
                "x-ms-summary": ""
            },
            "tabGroup": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "groupLabel": {
                        "description": "A unique identifier for a tab group. To assign a tab to the `tabGroup`, you assign the `TabGroupLabel` to the `tab.TabGroupLabels` array.",
                        "type": "string"
                    },
                    "groupLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "groupRule": {
                        "description": "Specifies how `maximumAllowed` and `minimumRequired`\nare interpreted when selecting tabs in a `tabGroup`.\n\nPossible values are:\n\n- `SelectAtLeast`\n- `SelectAtMost`\n- `SelectExactly`\n- `SelectARange`\n\n",
                        "type": "string"
                    },
                    "groupRuleMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maximumAllowed": {
                        "description": "The maximum number of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.",
                        "type": "string"
                    },
                    "maximumAllowedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "minimumRequired": {
                        "description": "The minimum number of of tabs within the `tabGroup` that should be checked, populated, or signed. This property is used for validation.",
                        "type": "string"
                    },
                    "minimumRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "Specifies the page number on which the tab is located.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab group will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabScope": {
                        "description": "The scope of the tab group. Possible values are:\n\n- `document`\n- `envelope` (default)",
                        "type": "string"
                    },
                    "tabScopeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationMessageMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "x-ds-definition-name": "tabGroup",
                "description": "",
                "x-ms-summary": ""
            },
            "tabMetadata": {
                "type": "object",
                "properties": {
                    "anchor": {
                        "description": "An optional string that is used to auto-match tabs to strings located in the documents of an envelope.",
                        "type": "string"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "collaborative": {
                        "description": "",
                        "type": "string"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "createdByDisplayName": {
                        "description": "The user name of the DocuSign user who created this object.",
                        "type": "string"
                    },
                    "createdByUserId": {
                        "description": "The userId of the DocuSign user who created this object.",
                        "type": "string"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "editable": {
                        "description": "When **true,** the custom tab is editable. Otherwise the custom tab cannot be modified.",
                        "type": "string"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "includedInEmail": {
                        "description": "When **true,** the tab is included in e-mails related to the envelope on which it exists. This applies to only specific tabs.",
                        "type": "string"
                    },
                    "initialValue": {
                        "description": "The original value of the tab.",
                        "type": "string"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "items": {
                        "description": "If the tab is a list, this represents the values that are possible for the tab.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lastModified": {
                        "description": "The UTC DateTime this object was last modified. This is in ISO 8601 format.",
                        "type": "string"
                    },
                    "lastModifiedByDisplayName": {
                        "description": "The User Name of the DocuSign user who last modified this object.",
                        "type": "string"
                    },
                    "lastModifiedByUserId": {
                        "description": "The userId of the DocuSign user who last modified this object.",
                        "type": "string"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "maximumLength": {
                        "description": "The maximum number of entry characters supported by the custom tab.",
                        "type": "string"
                    },
                    "maxNumericalValue": {
                        "description": "",
                        "type": "string"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "minNumericalValue": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "numericalValue": {
                        "description": "",
                        "type": "string"
                    },
                    "paymentItemCode": {
                        "description": "If the custom tab is for a payment request, this is the external code for the item associated with the charge. For example, this might be your product id.\n\nExample: `SHAK1`\n\nMaximum Length: 100 characters.",
                        "type": "string"
                    },
                    "paymentItemDescription": {
                        "description": "If the custom tab is for a payment request, this is the description of the item associated with the charge.\n\nExample: `The Danish play by Shakespeare`\n\nMaximum Length: 100 characters.",
                        "type": "string"
                    },
                    "paymentItemName": {
                        "description": "If the custom tab is for a payment request, this is the name of the item associated with the charge.\n\nMaximum Length: 100 characters.\n\nExample: `Hamlet`",
                        "type": "string"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "scaleValue": {
                        "description": "Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.",
                        "type": "string"
                    },
                    "selected": {
                        "description": "When **true,** the radio button is selected.",
                        "type": "string"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "signatureProviderId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "stampType": {
                        "description": "The type of stamp. Valid values are:\n\n- `signature`: A signature image. This is the default value.\n- `stamp`: A stamp image.\n- null",
                        "type": "string"
                    },
                    "stampTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of this tab. Values are:\n\n- `Approve`\n- `CheckBox`\n- `Company`\n- `Date`\n- `DateSigned`\n- `Decline`\n- `Email`\n- `EmailAddress`\n- `EnvelopeId`\n- `FirstName`\n- `Formula`\n- `FullName`\n- `InitialHere`\n- `InitialHereOptional`\n- `LastName`\n- `List`\n- `Note`\n- `Number`\n- `Radio`\n- `SignerAttachment`\n- `SignHere`\n- `SignHereOptional`\n- `Ssn`\n- `Text`\n- `Title`\n- `Zip5`\n- `Zip5Dash4`",
                        "type": "string"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationPattern": {
                        "description": "A regular expression used to validate input for the tab.",
                        "type": "string"
                    },
                    "validationType": {
                        "description": "Specifies how numerical data is validated. Valid values:\n\n- `number`\n- `currency`\n",
                        "type": "string"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "tabMetadata",
                "description": "",
                "x-ms-summary": ""
            },
            "tabMetadataList": {
                "type": "object",
                "properties": {
                    "tabs": {
                        "description": "A list of tabs, which are represented graphically as symbols on documents at the time of signing. Tabs show recipients where to sign, initial, or enter data. They may also display data to the recipients.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tabMetadata"
                        }
                    }
                },
                "x-ds-definition-name": "tabMetadataList",
                "description": "",
                "x-ms-summary": ""
            },
            "tabs": {
                "type": "object",
                "properties": {
                    "approveTabs": {
                        "description": "A list of\n[Approve tabs][approve].\n\nAn Approve tab enables\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\nThe value of an approve tab can't be set.\n\n[approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/approve"
                        }
                    },
                    "checkboxTabs": {
                        "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/checkbox"
                        }
                    },
                    "commentThreadTabs": {
                        "description": "An array of tabs that represents a collection of comments in a comment thread. For example, if a recipient has questions about the content of a document, they can add a comment to the document and control who else can see the comment. This value can't be set.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commentThread"
                        }
                    },
                    "commissionCountyTabs": {
                        "description": "A list of\n[Commission County tabs][cc].\n\n\nA Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionCounty"
                        }
                    },
                    "commissionExpirationTabs": {
                        "description": "A list of\n[Commission Expiration tabs][tabref].\n\n\nA Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionExpiration"
                        }
                    },
                    "commissionNumberTabs": {
                        "description": "A list of\n[Commission Number tabs][tabref].\n\n\nA Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionNumber"
                        }
                    },
                    "commissionStateTabs": {
                        "description": "A list of\n[Commission State tabs][cc].\n\n\nA Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionState"
                        }
                    },
                    "companyTabs": {
                        "description": "A list of\n[Company tabs][company].\n\nA Company tab displays a field for the name of the recipient's company. This value can't be set.\n\n[company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company"
                        }
                    },
                    "dateSignedTabs": {
                        "description": "A list of\n[Date Signed tabs][dateSigned].\n\n\nA Date Signed tab displays the date that the recipient signed the document. This value can't be set.\n\n[dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/dateSigned"
                        }
                    },
                    "dateTabs": {
                        "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/date"
                        }
                    },
                    "declineTabs": {
                        "description": "A list of\n[Decline tabs][decline].\n\nA Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.\n\n\n[decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/decline"
                        }
                    },
                    "drawTabs": {
                        "description": "A list of Draw Tabs.\n\nA Draw Tab allows the recipient to add a free-form drawing to the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/draw"
                        }
                    },
                    "emailAddressTabs": {
                        "description": "A list of\n[Email Address tabs][emailAddress].\n\nAn Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.\n\n\n[emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailAddress"
                        }
                    },
                    "emailTabs": {
                        "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/email"
                        }
                    },
                    "envelopeIdTabs": {
                        "description": "A list of\n[Envelope ID tabs][envelopeId].\n\nAn Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.\n\n\n[envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeId"
                        }
                    },
                    "firstNameTabs": {
                        "description": "A list of\n[First Name tabs][firstName].\n\nA First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/firstName"
                        }
                    },
                    "formulaTabs": {
                        "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.\n\nThe `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].\n\nIf a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n[formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/formulaTab"
                        }
                    },
                    "fullNameTabs": {
                        "description": "A list of\n[Full Name tabs][fullName].\n\nA Full Name tab displays the recipient's full name. This value can't be set.\n\n\n[fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/fullName"
                        }
                    },
                    "initialHereTabs": {
                        "description": "A list of\n[Initial Here tabs][initialHere].\n\nThis type of tab enables the recipient to initial the document. May be optional. This value can't be set.\n\n[initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/initialHere"
                        }
                    },
                    "lastNameTabs": {
                        "description": "A list of\n[Last Name tabs][lastName].\n\nA Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/lastName"
                        }
                    },
                    "listTabs": {
                        "description": "An array of List tabs.\n\nA List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/list"
                        }
                    },
                    "notarizeTabs": {
                        "description": "A list of  [Notarize tabs][notarize].\n\nA Notarize tab alerts notary recipients that they must take action on the page. This value can be set.\n\n**Note:** Only one notarize tab can appear on a page.\n\n[notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarize"
                        }
                    },
                    "notarySealTabs": {
                        "description": "A list of Notary Seal tabs.\n\nA Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarySeal"
                        }
                    },
                    "noteTabs": {
                        "description": "A list of\n[Note tabs][note].\n\nA Note tab displays additional information to the recipient in the form of a note. This value can be set.\n\n[note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/note"
                        }
                    },
                    "numberTabs": {
                        "description": "A list of Number tabs.\n\nNumber tabs validate that the entered value is a number.\nThey do not support advanced validation or display options.\n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about number tabs\nsee [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/number"
                        }
                    },
                    "numericalTabs": {
                        "description": "A list of numerical tabs.\n\nNumerical  tabs provide robust display and validation features, including formatting for different regions and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about numerical tabs\nsee [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/numerical"
                        }
                    },
                    "phoneNumberTabs": {
                        "description": "A list of\n[Phone Number tabs][cc].\n\n\nA Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/phoneNumber"
                        }
                    },
                    "polyLineOverlayTabs": {
                        "description": "This type of tab enables the recipient to strike through document text. This value can't be set
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/polyLineOverlay"
                        }
                    },
                    "prefillTabs": {
                        "$ref": "#/components/schemas/prefillTabs"
                    },
                    "radioGroupTabs": {
                        "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/radioGroup"
                        }
                    },
                    "signerAttachmentTabs": {
                        "description": "A list of\n[Signer Attachment tabs][signerAttachment].\n\nThis type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.\n\n\n[signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signerAttachment"
                        }
                    },
                    "signHereTabs": {
                        "description": "A list of\n[Sign Here tabs][signHere].\n\nThis type of tab enables the recipient to sign a document. May be optional. This value can't be set.\n\n[signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signHere"
                        }
                    },
                    "smartSectionTabs": {
                        "description": "A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.\n\nSmart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.\n\n**Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/smartSection"
                        }
                    },
                    "ssnTabs": {
                        "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ssn"
                        }
                    },
                    "tabGroups": {
                        "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tabGroup"
                        }
                    },
                    "textTabs": {
                        "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/text"
                        }
                    },
                    "titleTabs": {
                        "description": "A list of\n[Title tabs][title].\n\nA Title tab displays the recipient's title.  This value can't be set.\n\n\n[title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/title"
                        }
                    },
                    "viewTabs": {
                        "description": "A list of\n[View tabs][view].\n\nA View tab is used with an Approve tab to handle supplemental documents.  This value can be set.\n\n[view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/view"
                        }
                    },
                    "zipTabs": {
                        "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/zip"
                        }
                    }
                },
                "description": "Tabs indicate to recipients where they should sign, initial, or enter data on a document. They are represented graphically as symbols on documents at the time of signing. Tabs can also display data to the recipients.",
                "x-ds-definition-name": "tabs",
                "x-ms-summary": "Tabs indicate to recipients where they should sign, initial, or enter data on a document. They are represented graphically as symbols on documents at the time of signing. Tabs can also display data to the recipients."
            },
            "templateCustomFields": {
                "type": "object",
                "properties": {
                    "listCustomFields": {
                        "description": "An array of list custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listCustomField"
                        }
                    },
                    "textCustomFields": {
                        "description": "An array of text custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/textCustomField"
                        }
                    }
                },
                "x-ds-definition-name": "templateCustomFields",
                "description": "",
                "x-ms-summary": ""
            },
            "templateDocumentsResult": {
                "type": "object",
                "properties": {
                    "templateDocuments": {
                        "description": "An array of document objects that contain information about the documents associated with the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument"
                        }
                    },
                    "templateId": {
                        "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "templateDocumentsResult",
                "description": "The results of this method.",
                "x-ms-summary": "The results of this method."
            },
            "templateDocumentVisibilityList": {
                "type": "object",
                "properties": {
                    "documentVisibility": {
                        "description": "An array of `documentVisibility` objects that specifies which documents are visible to which recipients.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    }
                },
                "description": "A list of `documentVisibility` objects that specify whether the documents associated with a template are visible to recipients.",
                "x-ds-definition-name": "templateDocumentVisibilityList",
                "x-ms-summary": "A list of `documentVisibility` objects that specify whether the documents associated with a template are visible to recipients."
            },
            "templateInformation": {
                "type": "object",
                "properties": {
                    "templates": {
                        "description": "An array of `templateSummary` objects that contain information about templates.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templateSummary"
                        }
                    }
                },
                "x-ds-definition-name": "templateInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "templateMatch": {
                "type": "object",
                "properties": {
                    "documentEndPage": {
                        "description": "",
                        "type": "string"
                    },
                    "documentStartPage": {
                        "description": "",
                        "type": "string"
                    },
                    "matchPercentage": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "templateMatch",
                "description": "",
                "x-ms-summary": ""
            },
            "templateNotificationRequest": {
                "type": "object",
                "properties": {
                    "expirations": {
                        "$ref": "#/components/schemas/expirations"
                    },
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "reminders": {
                        "$ref": "#/components/schemas/reminders"
                    },
                    "useAccountDefaults": {
                        "description": "When **true,** the account default notification settings are used for the envelope, overriding the reminders and expirations settings. When **false,** the reminders and expirations settings specified in this request are used. The default value is **false.**",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "templateNotificationRequest",
                "description": "",
                "x-ms-summary": ""
            },
            "templateRecipients": {
                "type": "object",
                "properties": {
                    "agents": {
                        "description": "A list of agent recipients assigned to the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/agent"
                        }
                    },
                    "carbonCopies": {
                        "description": "A list of carbon copy recipients assigned to the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/carbonCopy"
                        }
                    },
                    "certifiedDeliveries": {
                        "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/certifiedDelivery"
                        }
                    },
                    "currentRoutingOrder": {
                        "description": "The routing order of the current recipient. If this value equals a particular signer's routing order, it indicates that the envelope has been sent to that recipient, but he or she has not completed the required actions.",
                        "type": "string"
                    },
                    "editors": {
                        "description": "A list of users who can edit the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/editor"
                        }
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "inPersonSigners": {
                        "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/inPersonSigner"
                        }
                    },
                    "intermediaries": {
                        "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/intermediary"
                        }
                    },
                    "notaries": {
                        "description": "A list of notary recipients on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notaryRecipient"
                        }
                    },
                    "participants": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/participant"
                        }
                    },
                    "recipientCount": {
                        "description": "The list of recipient event statuses that will trigger Connect to send updates to the url. It can be a two-part list with:\n\n* recipientEventStatusCode - The recipient status, this can be Sent, Delivered, Completed, Declined, AuthenticationFailed, and AutoResponded.\n* includeDocuments - When **true,** the envelope time zone information is included in the message.",
                        "type": "string"
                    },
                    "seals": {
                        "description": "Specifies one or more electronic seals to apply on documents. For more information on Electronic Seals , see https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/sealSign"
                        }
                    },
                    "signers": {
                        "description": "A list of signers on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signer"
                        }
                    },
                    "witnesses": {
                        "description": "A list of signers who act as witnesses on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/witness"
                        }
                    }
                },
                "x-ds-definition-name": "templateRecipients",
                "description": "",
                "x-ms-summary": ""
            },
            "templateRole": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "defaultRecipient": {
                        "description": "When **true,** this recipient is the default recipient and any tabs generated by the `transformPdfFields` option are mapped to this recipient.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "email": {
                        "description": "The email address of the person associated with a role name. It is the email address of the person specified in the `name` property.\n\nFor an in-person signer, this is the email address of the host.",
                        "type": "string"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "inPersonSignerName": {
                        "description": "The full legal name of the in-person signer.\n\nMaximum Length: 100 characters.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Specifies the recipient's name.\n\nFor an in-person signer, this is the name of the host.",
                        "type": "string"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "recipientSignatureProviders": {
                        "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientSignatureProvider"
                        }
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    }
                },
                "description": "Information about a specific role.",
                "x-ds-definition-name": "templateRole",
                "x-ms-summary": "Information about a specific role."
            },
            "templateSharedItem": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "shared": {
                        "description": "How the template is shared. One of:\n\n- `not_shared`\n- `shared_to`\n",
                        "type": "string"
                    },
                    "sharedGroups": {
                        "description": "List of groups that share the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/memberGroupSharedItem"
                        }
                    },
                    "sharedUsers": {
                        "description": "List of users that share the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userSharedItem"
                        }
                    },
                    "templateId": {
                        "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                        "type": "string"
                    },
                    "templateName": {
                        "description": "The name of the shared template.",
                        "type": "string"
                    }
                },
                "description": "Information about shared templates.",
                "x-ds-definition-name": "templateSharedItem",
                "x-ms-summary": "Information about shared templates."
            },
            "templateSummary": {
                "type": "object",
                "properties": {
                    "applied": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing document's ID attribute.",
                        "type": "string"
                    },
                    "documentName": {
                        "description": "The name of the document.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "name": {
                        "description": "The name of the template.",
                        "type": "string"
                    },
                    "templateId": {
                        "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                        "type": "string"
                    },
                    "templateMatch": {
                        "$ref": "#/components/schemas/templateMatch"
                    },
                    "uri": {
                        "description": "A URI containing the user ID.",
                        "type": "string"
                    }
                },
                "description": "Summary of a template request.",
                "x-ds-definition-name": "templateSummary",
                "x-ms-summary": "Summary of a template request."
            },
            "templateTabs": {
                "type": "object",
                "properties": {
                    "approveTabs": {
                        "description": "A list of\n[Approve tabs][approve].\n\nAn Approve tab enables\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\nThe value of an approve tab can't be set.\n\n[approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/approve"
                        }
                    },
                    "checkboxTabs": {
                        "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/checkbox"
                        }
                    },
                    "commentThreadTabs": {
                        "description": "An array of tabs that represents a collection of comments in a comment thread. For example, if a recipient has questions about the content of a document, they can add a comment to the document and control who else can see the comment. This value can't be set.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commentThread"
                        }
                    },
                    "commissionCountyTabs": {
                        "description": "A list of\n[Commission County tabs][cc].\n\n\nA Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionCounty"
                        }
                    },
                    "commissionExpirationTabs": {
                        "description": "A list of\n[Commission Expiration tabs][tabref].\n\n\nA Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionExpiration"
                        }
                    },
                    "commissionNumberTabs": {
                        "description": "A list of\n[Commission Number tabs][tabref].\n\n\nA Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionNumber"
                        }
                    },
                    "commissionStateTabs": {
                        "description": "A list of\n[Commission State tabs][cc].\n\n\nA Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionState"
                        }
                    },
                    "companyTabs": {
                        "description": "A list of\n[Company tabs][company].\n\nA Company tab displays a field for the name of the recipient's company. This value can't be set.\n\n[company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company"
                        }
                    },
                    "dateSignedTabs": {
                        "description": "A list of\n[Date Signed tabs][dateSigned].\n\n\nA Date Signed tab displays the date that the recipient signed the document. This value can't be set.\n\n[dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/dateSigned"
                        }
                    },
                    "dateTabs": {
                        "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/date"
                        }
                    },
                    "declineTabs": {
                        "description": "A list of\n[Decline tabs][decline].\n\nA Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.\n\n\n[decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/decline"
                        }
                    },
                    "drawTabs": {
                        "description": "A list of Draw Tabs.\n\nA Draw Tab allows the recipient to add a free-form drawing to the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/draw"
                        }
                    },
                    "emailAddressTabs": {
                        "description": "A list of\n[Email Address tabs][emailAddress].\n\nAn Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.\n\n\n[emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailAddress"
                        }
                    },
                    "emailTabs": {
                        "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/email"
                        }
                    },
                    "envelopeIdTabs": {
                        "description": "A list of\n[Envelope ID tabs][envelopeId].\n\nAn Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.\n\n\n[envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeId"
                        }
                    },
                    "firstNameTabs": {
                        "description": "A list of\n[First Name tabs][firstName].\n\nA First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/firstName"
                        }
                    },
                    "formulaTabs": {
                        "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.\n\nThe `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].\n\nIf a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n[formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/formulaTab"
                        }
                    },
                    "fullNameTabs": {
                        "description": "A list of\n[Full Name tabs][fullName].\n\nA Full Name tab displays the recipient's full name. This value can't be set.\n\n\n[fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/fullName"
                        }
                    },
                    "initialHereTabs": {
                        "description": "A list of\n[Initial Here tabs][initialHere].\n\nThis type of tab enables the recipient to initial the document. May be optional. This value can't be set.\n\n[initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/initialHere"
                        }
                    },
                    "lastNameTabs": {
                        "description": "A list of\n[Last Name tabs][lastName].\n\nA Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/lastName"
                        }
                    },
                    "listTabs": {
                        "description": "An array of List tabs.\n\nA List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/list"
                        }
                    },
                    "notarizeTabs": {
                        "description": "A list of  [Notarize tabs][notarize].\n\nA Notarize tab alerts notary recipients that they must take action on the page. This value can be set.\n\n**Note:** Only one notarize tab can appear on a page.\n\n[notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarize"
                        }
                    },
                    "notarySealTabs": {
                        "description": "A list of Notary Seal tabs.\n\nA Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarySeal"
                        }
                    },
                    "noteTabs": {
                        "description": "A list of\n[Note tabs][note].\n\nA Note tab displays additional information to the recipient in the form of a note. This value can be set.\n\n[note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/note"
                        }
                    },
                    "numberTabs": {
                        "description": "A list of Number tabs.\n\nNumber tabs validate that the entered value is a number.\nThey do not support advanced validation or display options.\n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about number tabs\nsee [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/number"
                        }
                    },
                    "numericalTabs": {
                        "description": "A list of numerical tabs.\n\nNumerical  tabs provide robust display and validation features, including formatting for different regions and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about numerical tabs\nsee [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/numerical"
                        }
                    },
                    "phoneNumberTabs": {
                        "description": "A list of\n[Phone Number tabs][cc].\n\n\nA Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/phoneNumber"
                        }
                    },
                    "polyLineOverlayTabs": {
                        "description": "This type of tab enables the recipient to strike through document text. This value can't be set
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/polyLineOverlay"
                        }
                    },
                    "prefillTabs": {
                        "$ref": "#/components/schemas/prefillTabs"
                    },
                    "radioGroupTabs": {
                        "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/radioGroup"
                        }
                    },
                    "signerAttachmentTabs": {
                        "description": "A list of\n[Signer Attachment tabs][signerAttachment].\n\nThis type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.\n\n\n[signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signerAttachment"
                        }
                    },
                    "signHereTabs": {
                        "description": "A list of\n[Sign Here tabs][signHere].\n\nThis type of tab enables the recipient to sign a document. May be optional. This value can't be set.\n\n[signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signHere"
                        }
                    },
                    "smartSectionTabs": {
                        "description": "A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.\n\nSmart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.\n\n**Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/smartSection"
                        }
                    },
                    "ssnTabs": {
                        "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ssn"
                        }
                    },
                    "tabGroups": {
                        "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tabGroup"
                        }
                    },
                    "textTabs": {
                        "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/text"
                        }
                    },
                    "titleTabs": {
                        "description": "A list of\n[Title tabs][title].\n\nA Title tab displays the recipient's title.  This value can't be set.\n\n\n[title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/title"
                        }
                    },
                    "viewTabs": {
                        "description": "A list of\n[View tabs][view].\n\nA View tab is used with an Approve tab to handle supplemental documents.  This value can be set.\n\n[view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/view"
                        }
                    },
                    "zipTabs": {
                        "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/zip"
                        }
                    }
                },
                "x-ds-definition-name": "templateTabs",
                "description": "",
                "x-ms-summary": ""
            },
            "templateUpdateSummary": {
                "type": "object",
                "properties": {
                    "bulkEnvelopeStatus": {
                        "$ref": "#/components/schemas/bulkEnvelopeStatus"
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "listCustomFieldUpdateResults": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listCustomField"
                        }
                    },
                    "lockInformation": {
                        "$ref": "#/components/schemas/EnvelopeLocks"
                    },
                    "purgeState": {
                        "description": "Shows the current purge state for the envelope. Valid values:\n\n- `unpurged`: There has been no successful request to purge documents.\n- `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n- `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n- `documents_purged`: The envelope documents have been successfully purged.\n- `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n- `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n- `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.\n- `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.\n\n**Related topics**\n\n- [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)\n- [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)\n\n",
                        "type": "string"
                    },
                    "recipientUpdateResults": {
                        "description": "An array of `recipientUpdateResults` objects that contain details about the recipients.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientUpdateResponse"
                        }
                    },
                    "tabUpdateResults": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "textCustomFieldUpdateResults": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/textCustomField"
                        }
                    }
                },
                "x-ds-definition-name": "templateUpdateSummary",
                "description": "",
                "x-ms-summary": ""
            },
            "text": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formula": {
                        "description": "Contains the formula\nfor calculating the value of\nthis tab.\n\nUse a tab's `tabLabel`,\nenclosed in brackets,\nto refer to it.\n\nFor example,\nyou want to present the total cost\nof two items, tax included.\n\nThe cost of each item is stored\nin number tabs labeled Item1 and Item2.\nThe tax rate is in a number tab\nlabeled TaxRate.\n\nThe formula string for this property\nwould be:\n`([Item1] + [Item2]) * (1 + [TaxRate])`\n\nSee [Calculated Fields][calculatedfields]\nin the DocuSign Support Center\nto learn more about formulas.\n\nMaximum Length: 2000 characters\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n",
                        "type": "string"
                    },
                    "formulaMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderRequired": {
                        "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                        "type": "string"
                    },
                    "senderRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationMessageMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationPattern": {
                        "description": "A regular expression used to validate input for the tab.",
                        "type": "string"
                    },
                    "validationPatternMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "The value of the text tab.\n\nMaximum length: 4000 bytes.",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to enter any type of text.\n",
                "x-ds-definition-name": "text",
                "x-ms-summary": "A tab that allows the recipient to enter any type of text.\n"
            },
            "textCustomField": {
                "type": "object",
                "properties": {
                    "configurationType": {
                        "description": "If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "fieldId": {
                        "description": "The ID of the custom field.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the custom field.",
                        "type": "string"
                    },
                    "required": {
                        "description": "When **true,** senders are required to enter or select information for the field before they can send the envelope.",
                        "type": "string"
                    },
                    "show": {
                        "description": "When **true,** the field displays in the **Envelope Custom Fields** section when a user creates or sends an envelope.",
                        "type": "string"
                    },
                    "value": {
                        "description": "The value of the custom field. The user who creates or sends the envelope provides this value. Maximum length: 100 characters.",
                        "type": "string"
                    }
                },
                "description": "This object represents a free text custom field where envelope creators and senders can enter custom data.",
                "x-ds-definition-name": "textCustomField",
                "x-ms-summary": "This object represents a free text custom field where envelope creators and senders can enter custom data."
            },
            "title": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that displays the recipient's title.\n",
                "x-ds-definition-name": "title",
                "x-ms-summary": "A tab that displays the recipient's title.\n"
            },
            "usageHistory": {
                "description": "A complex element consisting of: \n\n* lastSentDateTime - the date and time the user last sent an envelope. \n* lastSignedDateTime - the date and time the user last signed an envelope.\n* sentCount - the number of envelopes the user has sent.\n* signedCount - the number of envelopes the user has signed.",
                "type": "object",
                "properties": {
                    "lastSentDateTime": {
                        "description": "The date and time the user last sent an envelope. ",
                        "type": "string"
                    },
                    "lastSignedDateTime": {
                        "description": "The date and time the user last signed an envelope.",
                        "type": "string"
                    },
                    "sentCount": {
                        "description": "The number of envelopes the user has sent. ",
                        "type": "string"
                    },
                    "signedCount": {
                        "description": "The number of envelopes the user has signed. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "usageHistory",
                "x-ms-summary": "A complex element consisting of: \n\n* lastSentDateTime - the date and time the user last sent an envelope. \n* lastSignedDateTime - the date and time the user last signed an envelope.\n* sentCount - the number of envelopes the user has sent.\n* signedCount - the number of envelopes the user has signed."
            },
            "userAccountManagementGranularInformation": {
                "type": "object",
                "properties": {
                    "canManageAccountSecuritySettings": {
                        "description": "**True** if the user can manage account security settings.",
                        "type": "string"
                    },
                    "canManageAccountSecuritySettingsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageAccountSettings": {
                        "description": "**True** if the user can manage account settings.",
                        "type": "string"
                    },
                    "canManageAccountSettingsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageAdmins": {
                        "description": "**True** if the user can manage administrators.",
                        "type": "string"
                    },
                    "canManageAdminsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageConnect": {
                        "description": "",
                        "type": "string"
                    },
                    "canManageConnectMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageDocumentRetention": {
                        "description": "",
                        "type": "string"
                    },
                    "canManageDocumentRetentionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageEnvelopeTransfer": {
                        "description": "",
                        "type": "string"
                    },
                    "canManageEnvelopeTransferMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageGroupsButNotUsers": {
                        "description": "",
                        "type": "string"
                    },
                    "canManageGroupsButNotUsersMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageJointAgreements": {
                        "description": "",
                        "type": "string"
                    },
                    "canManageJointAgreementsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageReporting": {
                        "description": "**True** if the user can manage reporting.",
                        "type": "string"
                    },
                    "canManageReportingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageSharing": {
                        "description": "**True** if the user can manage sharing.",
                        "type": "string"
                    },
                    "canManageSharingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageSigningGroups": {
                        "description": "**True** if the user can manage signing groups.",
                        "type": "string"
                    },
                    "canManageSigningGroupsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageStamps": {
                        "description": "",
                        "type": "string"
                    },
                    "canManageStampsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageUsers": {
                        "description": "**True** if the user can manage users.",
                        "type": "string"
                    },
                    "canManageUsersMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canViewUsers": {
                        "description": "",
                        "type": "string"
                    }
                },
                "description": "Describes which account management capabilities a user has.",
                "x-ds-definition-name": "userAccountManagementGranularInformation",
                "x-ms-summary": "Describes which account management capabilities a user has."
            },
            "userAuthorization": {
                "type": "object",
                "properties": {
                    "agentUser": {
                        "$ref": "#/components/schemas/authorizationUser"
                    },
                    "authorizationId": {
                        "description": "The ID of the user authorization.",
                        "type": "string"
                    },
                    "created": {
                        "description": "The UTC DateTime when the workspace user authorization was created.",
                        "type": "string"
                    },
                    "createdBy": {
                        "description": "The name and email of the user who created the authorization, in the following format: `[Francis Beagle email@example.com]`",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "The UTC DateTime at which the authorization will expire.",
                        "type": "string"
                    },
                    "modified": {
                        "description": "The UTC DateTime when the workspace user authorization was last updated.",
                        "type": "string"
                    },
                    "modifiedBy": {
                        "description": "The name and email of the user who created the authorization, in the following format: `[Francis Beagle email@example.com]`",
                        "type": "string"
                    },
                    "permission": {
                        "description": "The [permission level](/docs/esign-rest-api/esign101/concepts/envelopes/shared-access/) to grant the agent. Valid values:\n* `Send`\n* `Manage`\n* `Sign`\n* `Edit`\n\nThis property is required.",
                        "type": "string"
                    },
                    "principalUser": {
                        "$ref": "#/components/schemas/authorizationUser"
                    },
                    "startDate": {
                        "description": "The UTC DateTime at which the authorization will start.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userAuthorization",
                "description": "A complex object describing a user authorization.",
                "x-ms-summary": "A complex object describing a user authorization."
            },
            "userAuthorizationCreateRequest": {
                "type": "object",
                "properties": {
                    "agentUser": {
                        "$ref": "#/components/schemas/authorizationUser"
                    },
                    "endDate": {
                        "description": "The UTC DateTime to end the authorization. The default value is the max UTC value (`9999-12-31T23:59:59.0000000+00:00`).",
                        "type": "string"
                    },
                    "permission": {
                        "description": "The permission level to grant the agent. Valid values:\n* `Send`\n* `Manage`\n* `Sign`\n\nThis property is required.",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The UTC DateTime to initiate the authorization. The default value is the current date and time.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userAuthorizationCreateRequest",
                "description": "The request object to create a user authorization.",
                "x-ms-summary": "The request object to create a user authorization."
            },
            "userAuthorizationCreateRequestWithId": {
                "type": "object",
                "properties": {
                    "agentUser": {
                        "$ref": "#/components/schemas/authorizationUser"
                    },
                    "authorizationId": {
                        "description": "The ID of the user authorization. This property is required to update an existing authorization.",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "The UTC DateTime to end the authorization. The default value is the max UTC value: `9999-12-31T23:59:59.0000000+00:00`.",
                        "type": "string"
                    },
                    "permission": {
                        "description": "The permission level to grant the agent. Valid values:\n\n- `Send`\n- `Manage`\n- `Sign`\n\nThis property is required if you are creating a new authorization.",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The UTC DateTime to initiate the authorization. The default value is the current date and time.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userAuthorizationCreateRequestWithId",
                "description": "A user authorizations to create or update.",
                "x-ms-summary": "A user authorizations to create or update."
            },
            "userAuthorizationIdWithStatus": {
                "type": "object",
                "properties": {
                    "authorizationId": {
                        "description": "",
                        "type": "string"
                    },
                    "errorMessage": {
                        "description": "",
                        "type": "string"
                    },
                    "success": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userAuthorizationIdWithStatus",
                "description": "",
                "x-ms-summary": ""
            },
            "userAuthorizations": {
                "type": "object",
                "properties": {
                    "authorizations": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userAuthorization"
                        }
                    },
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userAuthorizations",
                "description": "",
                "x-ms-summary": ""
            },
            "userAuthorizationsDeleteRequest": {
                "type": "object",
                "properties": {
                    "authorizations": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-ds-definition-name": "userAuthorizationsDeleteRequest",
                "description": "",
                "x-ms-summary": ""
            },
            "userAuthorizationsDeleteResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userAuthorizationIdWithStatus"
                        }
                    }
                },
                "x-ds-definition-name": "userAuthorizationsDeleteResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "userAuthorizationsRequest": {
                "type": "object",
                "properties": {
                    "authorizations": {
                        "description": "The list of user authorizations to create and/or update.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userAuthorizationCreateRequestWithId"
                        }
                    }
                },
                "x-ds-definition-name": "userAuthorizationsRequest",
                "description": "An object that describes the user authorizations to create or update.\n",
                "x-ms-summary": "An object that describes the user authorizations to create or update.\n"
            },
            "userAuthorizationsResponse": {
                "type": "object",
                "properties": {
                    "results": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userAuthorizationWithStatus"
                        }
                    }
                },
                "x-ds-definition-name": "userAuthorizationsResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "userAuthorizationUpdateRequest": {
                "type": "object",
                "properties": {
                    "endDate": {
                        "description": "The end date for the user authorization. The default value is the max UTC value: `9999-12-31T23:59:59.0000000+00:00`.",
                        "type": "string"
                    },
                    "startDate": {
                        "description": "The start date for the user authorization. The default value is the current date and time.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userAuthorizationUpdateRequest",
                "description": "The request object to update a user authorization.",
                "x-ms-summary": "The request object to update a user authorization."
            },
            "userAuthorizationWithStatus": {
                "type": "object",
                "properties": {
                    "authorization": {
                        "$ref": "#/components/schemas/userAuthorization"
                    },
                    "errorMessage": {
                        "description": "",
                        "type": "string"
                    },
                    "success": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userAuthorizationWithStatus",
                "description": "",
                "x-ms-summary": ""
            },
            "userInfo": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The account ID associated with the envelope.",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "The name on the account.",
                        "type": "string"
                    },
                    "activationAccessCode": {
                        "description": "Access code provided to the user to activate the account.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user's email address.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "ipAddress": {
                        "description": "",
                        "type": "string"
                    },
                    "loginStatus": {
                        "description": "When **true,** indicates that the user is logged in. This is a read-only property.",
                        "type": "string"
                    },
                    "membershipId": {
                        "description": "The user's membership ID.",
                        "type": "string"
                    },
                    "sendActivationEmail": {
                        "description": "This field is no longer supported for most accounts. To create an eSignature user without sending an activation email, use the Admin API by following [these steps](/docs/admin-api/how-to/create-active-user/).",
                        "type": "string"
                    },
                    "uri": {
                        "description": "A URI containing the user ID.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "userStatus": {
                        "description": "Status of the user's account. One of:\n\n- `ActivationRequired`\n- `ActivationSent`\n- `Active`\n- `Closed`\n- `Disabled`\n",
                        "type": "string"
                    },
                    "userType": {
                        "description": "The type of user, for example `CompanyUser`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userInfo",
                "description": "",
                "x-ms-summary": ""
            },
            "userInfoList": {
                "type": "object",
                "properties": {
                    "users": {
                        "description": "An array of `userInfo` objects containing information about the users in the group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    }
                },
                "x-ds-definition-name": "userInfoList",
                "description": "",
                "x-ms-summary": ""
            },
            "userInformation": {
                "type": "object",
                "properties": {
                    "activationAccessCode": {
                        "description": "Access code provided to the user to activate the account.",
                        "type": "string"
                    },
                    "company": {
                        "description": "The name of the user's company.",
                        "type": "string"
                    },
                    "connectConfigurations": {
                        "description": "Object representing the user's custom Connect configuration.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectUserObject"
                        }
                    },
                    "countryCode": {
                        "description": "The two-letter code for the user's country.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "customSettings": {
                        "description": "The name/value pair information for the user custom setting.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    },
                    "defaultAccountId": {
                        "description": "The default account ID associated with the user.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user's email address.",
                        "type": "string"
                    },
                    "enableConnectForUser": {
                        "description": "Boolean value that specifies whether the user is enabled for updates from DocuSign Connect.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "firstName": {
                        "description": "The user's first name. \nMaximum Length: 50 characters.",
                        "type": "string"
                    },
                    "forgottenPasswordInfo": {
                        "$ref": "#/components/schemas/forgottenPasswordInformation"
                    },
                    "groupList": {
                        "description": "A list of the group information for groups to add the user to.\nUse [UserGroups: listGroups](/docs/esign-rest-api/reference/usergroups/groups/list/) to get information about groups.\n\nWhen setting a user's group, only the `groupId` is required.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/group"
                        }
                    },
                    "hasRemoteNotary": {
                        "description": "",
                        "type": "boolean"
                    },
                    "homeAddress": {
                        "$ref": "#/components/schemas/addressInformation"
                    },
                    "initialsImageUri": {
                        "description": "The URI for retrieving the image of the user's initials.",
                        "type": "string"
                    },
                    "isAdmin": {
                        "description": "Determines if the feature set is actively set as part of the plan.",
                        "type": "string"
                    },
                    "isAlternateAdmin": {
                        "description": "",
                        "type": "string"
                    },
                    "isNAREnabled": {
                        "description": "When **true,** National Association of Realtors (NAR) signature logos are enabled for the user.",
                        "type": "string"
                    },
                    "jobTitle": {
                        "description": "The user's job title.",
                        "type": "string"
                    },
                    "lastLogin": {
                        "description": "The date and time when the user last logged in to the system.",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The user's last name. \nMaximum Length: 50 characters.",
                        "type": "string"
                    },
                    "loginStatus": {
                        "description": "Boolean value that indicates whether the user is currently logged in or not.",
                        "type": "string"
                    },
                    "middleName": {
                        "description": "The user's middle name. \nLimit: 50 characters.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "passwordExpiration": {
                        "description": "If password expiration is enabled, the date-time when the user's password expires.",
                        "type": "string"
                    },
                    "permissionProfileId": {
                        "description": "The ID of the permission profile.\n\nUse [AccountPermissionProfiles: list](/docs/esign-rest-api/reference/accounts/accountpermissionprofiles/list/)\nto get a list of permission profiles and their IDs.\n\nYou can also download a CSV file of all permission profiles\nand their IDs from the **Settings > Permission Profiles** page\nof your eSignature account page.\n",
                        "type": "string"
                    },
                    "permissionProfileName": {
                        "description": "The name of the account permission profile. \n\nExample: `Account Administrator`",
                        "type": "string"
                    },
                    "profileImageUri": {
                        "description": "The URL for retrieving the user's profile image.",
                        "type": "string"
                    },
                    "sendActivationEmail": {
                        "description": "This field is no longer supported for most accounts. To create an eSignature user without sending an activation email, use the Admin API by following [these steps](/docs/admin-api/how-to/create-active-user/).",
                        "type": "string"
                    },
                    "sendActivationOnInvalidLogin": {
                        "description": "When **true,** specifies that an additional activation email be sent if user's log on fails before the account is activated.",
                        "type": "string"
                    },
                    "signatureImageUri": {
                        "description": "An endpoint URI that you can use to retrieve the user's signature image.",
                        "type": "string"
                    },
                    "subscribe": {
                        "description": "",
                        "type": "string"
                    },
                    "suffixName": {
                        "description": "The suffix for the user's name, such as Jr, IV, PhD, etc.\n\nLimit: 50 characters. ",
                        "type": "string"
                    },
                    "title": {
                        "description": "The title of the user.",
                        "type": "string"
                    },
                    "uri": {
                        "description": "A URI containing the user ID.",
                        "type": "string"
                    },
                    "userAddedToAccountDateTime": {
                        "description": "The date and time that the user was added to the account.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "userProfileLastModifiedDate": {
                        "description": "The date and time that the user's profile was last modified.",
                        "type": "string"
                    },
                    "userSettings": {
                        "$ref": "#/components/schemas/userSettingsInformation"
                    },
                    "userStatus": {
                        "description": "Status of the user's account. One of:\n\n- `ActivationRequired`\n- `ActivationSent`\n- `Active`\n- `Closed`\n- `Disabled`\n",
                        "type": "string"
                    },
                    "userType": {
                        "description": "The type of user, for example `CompanyUser`.",
                        "type": "string"
                    },
                    "workAddress": {
                        "$ref": "#/components/schemas/addressInformation"
                    }
                },
                "description": "User information.",
                "x-ds-definition-name": "userInformation",
                "x-ms-summary": "User information."
            },
            "userInformationList": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    },
                    "users": {
                        "description": "User management information.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInformation"
                        }
                    }
                },
                "description": "Contains a list of account users.",
                "x-ds-definition-name": "userInformationList",
                "x-ms-summary": "Contains a list of account users."
            },
            "userPasswordInformation": {
                "type": "object",
                "properties": {
                    "currentPassword": {
                        "description": "The user's current password to be changed.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user's email address for the associated account.",
                        "type": "string"
                    },
                    "forgottenPasswordInfo": {
                        "$ref": "#/components/schemas/forgottenPasswordInformation"
                    },
                    "newPassword": {
                        "description": "The user's new password.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userPasswordInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "userPasswordRules": {
                "type": "object",
                "properties": {
                    "passwordRules": {
                        "$ref": "#/components/schemas/accountPasswordRules"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "description": "Contains details about the password rules for a user.",
                "x-ds-definition-name": "userPasswordRules",
                "x-ms-summary": "Contains details about the password rules for a user."
            },
            "userProfile": {
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/addressInformation"
                    },
                    "authenticationMethods": {
                        "description": "Indicates the authentication methods that the user uses. These properties cannot be modified by the PUT operation. ",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/authenticationMethod"
                        }
                    },
                    "companyName": {
                        "description": "The name of the user's company.",
                        "type": "string"
                    },
                    "displayOrganizationInfo": {
                        "description": " When **true,** the user's company and title information display on the ID card. ",
                        "type": "string"
                    },
                    "displayPersonalInfo": {
                        "description": "When **true,** the user's address and phone number display on the ID card.",
                        "type": "string"
                    },
                    "displayProfile": {
                        "description": "When **true,** the user's ID card can be viewed from signed documents and envelope history.",
                        "type": "string"
                    },
                    "displayUsageHistory": {
                        "description": "When **true,** the user's usage information displays on the ID card.",
                        "type": "string"
                    },
                    "profileImageUri": {
                        "description": "The URL for retrieving the user's profile image.",
                        "type": "string"
                    },
                    "title": {
                        "description": "The title of the user.",
                        "type": "string"
                    },
                    "usageHistory": {
                        "$ref": "#/components/schemas/usageHistory"
                    },
                    "userDetails": {
                        "$ref": "#/components/schemas/userInformation"
                    },
                    "userProfileLastModifiedDate": {
                        "description": "The date and time that the user's profile was last modified.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userProfile",
                "description": "",
                "x-ms-summary": ""
            },
            "userSettingsInformation": {
                "type": "object",
                "properties": {
                    "accountManagementGranular": {
                        "$ref": "#/components/schemas/userAccountManagementGranularInformation"
                    },
                    "adminOnly": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "adminOnlyMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowAutoTagging": {
                        "description": "When **true,** the API returns suggested tabs for documents for this user.",
                        "type": "string"
                    },
                    "allowedOrchestrationAccess": {
                        "description": "",
                        "type": "string"
                    },
                    "allowedOrchestrationAccessMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEnvelopeTransferTo": {
                        "description": "When **true,** this user can participate in envelope transfers on the account.",
                        "type": "string"
                    },
                    "allowEnvelopeTransferToMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowEsealRecipients": {
                        "description": "When **true,** this user can create [electronic seal recipients][eseal].\n\n[eseal]: /docs/esign-rest-api/reference/envelopes/enveloperecipients/#seal-recipient",
                        "type": "string"
                    },
                    "allowEsealRecipientsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowPowerFormsAdminToAccessAllPowerFormEnvelope": {
                        "description": "When **true** and this user is an administrator, they can view all of the envelopes generated from PowerForms. The default value is **false.**",
                        "type": "string"
                    },
                    "allowPowerFormsAdminToAccessAllPowerFormEnvelopeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowRecipientLanguageSelection": {
                        "description": "When **true,** this user can set the language used in the standard email format for a recipient when creating an envelope.",
                        "type": "string"
                    },
                    "allowRecipientLanguageSelectionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSendOnBehalfOf": {
                        "description": "When **true,** this user can send envelopes \"on behalf of\" other users through the API.",
                        "type": "string"
                    },
                    "allowSendOnBehalfOfMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowSupplementalDocuments": {
                        "description": "When **true,** this user can include supplemental documents.",
                        "type": "string"
                    },
                    "allowSupplementalDocumentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "allowTransactions": {
                        "description": "",
                        "type": "string"
                    },
                    "allowTransactionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "anchorTagVersionedPlacementEnabled": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "apiAccountWideAccess": {
                        "description": "When **true,** indicates that this user can send envelope-specific API requests on the account.",
                        "type": "string"
                    },
                    "apiAccountWideAccessMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "apiCanExportAC": {
                        "description": "When **true,** this user can export authoritative copy for the account.",
                        "type": "string"
                    },
                    "apiCanExportACMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "bulkSend": {
                        "description": "When **true,** this user can use the bulk send feature for the account.",
                        "type": "string"
                    },
                    "bulkSendMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canChargeAccount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "canChargeAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canCreateTransaction": {
                        "description": "",
                        "type": "string"
                    },
                    "canCreateTransactionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canDeleteDocumentsInTransaction": {
                        "description": "",
                        "type": "string"
                    },
                    "canDeleteDocumentsInTransactionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canDeleteTransaction": {
                        "description": "",
                        "type": "string"
                    },
                    "canDeleteTransactionMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canEditSharedAddressbook": {
                        "description": "When true, this user can edit the shared address book for the account.",
                        "type": "string"
                    },
                    "canEditSharedAddressbookMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canLockEnvelopes": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "canLockEnvelopesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageAccount": {
                        "description": "When **true,** this user is an administrator for the account.",
                        "type": "string"
                    },
                    "canManageAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageDistributor": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "canManageDistributorMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canManageTemplates": {
                        "description": "When **true,** this user can manage templates for the account.",
                        "type": "string"
                    },
                    "canManageTemplatesMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canSendAPIRequests": {
                        "description": "When **true,** this user can send API requests on the account.",
                        "type": "string"
                    },
                    "canSendAPIRequestsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canSendEnvelope": {
                        "description": "When **true,** this user can send envelopes on the account.",
                        "type": "string"
                    },
                    "canSendEnvelopeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canSendEnvelopesViaSMS": {
                        "description": "",
                        "type": "string"
                    },
                    "canSendEnvelopesViaSMSMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canSignEnvelope": {
                        "description": "When **true,** this user can sign envelopes.",
                        "type": "string"
                    },
                    "canSignEnvelopeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canUseScratchpad": {
                        "description": "When **true,** this user can use a scratchpad to edit information.",
                        "type": "string"
                    },
                    "canUseScratchpadMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "canUseSmartContracts": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "canUseSmartContractsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableDocumentUpload": {
                        "description": "When **true,** this user is prohibited from uploading documents during sending.",
                        "type": "string"
                    },
                    "disableDocumentUploadMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "disableOtherActions": {
                        "description": "When **true,** this user can access the **Other Actions** menu.",
                        "type": "string"
                    },
                    "disableOtherActionsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableDSPro": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "enableDSProMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableKeyTermsSuggestionsByDocumentType": {
                        "description": "",
                        "type": "string"
                    },
                    "enableKeyTermsSuggestionsByDocumentTypeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSequentialSigningAPI": {
                        "description": "When **true,** the account can define the routing\norder of recipients for envelopes sent by using the eSignature API.\n\n**Note:** Only SysAdmin users can change this setting.",
                        "type": "string"
                    },
                    "enableSequentialSigningAPIMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSequentialSigningUI": {
                        "description": "When **true,** the account can define the routing order\nof recipients for envelopes sent by using the DocuSign application.\n\n**Note:** Only SysAdmin users can change this setting.\n",
                        "type": "string"
                    },
                    "enableSequentialSigningUIMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSignerAttachments": {
                        "description": "When **true,** this user can use the signing attachments feature.",
                        "type": "string"
                    },
                    "enableSignerAttachmentsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableSignOnPaperOverride": {
                        "description": "When **true,** a user can override the default default account setting for the Sign on Paper option, which specifies whether signers can sign documents on paper as an option to signing electronically.\n\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "enableSignOnPaperOverrideMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableTransactionPoint": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "enableTransactionPointMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "enableVaulting": {
                        "description": "When **true,** Vaulting is enabled for the account.",
                        "type": "string"
                    },
                    "enableVaultingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "expressSendOnly": {
                        "description": "When **false,** this user can apply tabs to documents during the sending experience.",
                        "type": "string"
                    },
                    "locale": {
                        "description": "The user's locale code. Valid values are:\n- `zh_CN`\n- `zh_TW`\n- `nl`\n- `en`\n- `fr`\n- `de`\n- `it`\n- `ja`\n- `ko`\n- `pt`\n- `pt_BR`\n- `ru`\n- `es`",
                        "type": "string"
                    },
                    "localeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicy"
                    },
                    "manageClickwrapsMode": {
                        "description": "When **true,** this user can create and manage [Clickwraps](/docs/click-api/).",
                        "type": "string"
                    },
                    "manageClickwrapsModeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "modifiedBy": {
                        "description": "The user ID (GUID) of the user who last modified this user record. This property is read-only.",
                        "type": "string"
                    },
                    "modifiedByMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "modifiedDate": {
                        "description": "The date on which this user record was last modified.",
                        "type": "string"
                    },
                    "modifiedDateMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "modifiedPage": {
                        "description": "Note referencing the page that modified this user record.",
                        "type": "string"
                    },
                    "modifiedPageMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "newSendUI": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "newSendUIMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "powerFormMode": {
                        "description": "Indicates the Power Form mode setting for the user:\n- `none`\n- `admin`\n- `user`",
                        "type": "string"
                    },
                    "powerFormModeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "recipientViewedNotification": {
                        "description": "When **true,** this user receives notifications when envelopes are viewed.",
                        "type": "string"
                    },
                    "recipientViewedNotificationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "sealIdentifiers": {
                        "description": "Information about the seals associated with this user.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/sealIdentifier"
                        }
                    },
                    "selfSignedRecipientEmailDocument": {
                        "description": "Sets how self-signed documents are presented to the email recipients.\nValid values are:\n\n- `include_pdf`: A PDF of the completed document is attached to the email.\n- `include_link`: A secure link to the self-signed documents is included\n   in the email.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "selfSignedRecipientEmailDocumentMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "senderEmailNotifications": {
                        "$ref": "#/components/schemas/senderEmailNotifications"
                    },
                    "signerEmailNotifications": {
                        "$ref": "#/components/schemas/signerEmailNotifications"
                    },
                    "supplementalDocumentIncludeInDownload": {
                        "description": "When **true,** this user gets supplemental documents when downloading documents.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustAccept": {
                        "description": "When **true,** this user must accept supplemental documents.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustAcceptMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "supplementalDocumentsMustRead": {
                        "description": "When **true,** this user must both view and accept supplemental documents.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustReadMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "supplementalDocumentsMustView": {
                        "description": "When **true,** this user must view supplemental documents.",
                        "type": "string"
                    },
                    "supplementalDocumentsMustViewMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "templateActiveCreation": {
                        "description": "When **true,** a new template is created each time the user sends an envelope.",
                        "type": "string"
                    },
                    "templateActiveCreationMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "templateApplyNotify": {
                        "description": "When **true,** the system notifies this user before applying a matching template.",
                        "type": "string"
                    },
                    "templateApplyNotifyMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "templateAutoMatching": {
                        "description": "When **true,** the system automatically applies a matching template to a document if only one template matches. If there are multiple matches, it displays a list of matches to select from.",
                        "type": "string"
                    },
                    "templateAutoMatchingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "templateMatchingSensitivity": {
                        "description": "Percentage used when matching templates.",
                        "type": "string"
                    },
                    "templateMatchingSensitivityMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "templatePageLevelMatching": {
                        "description": "When **true,** users see template matching functionality.",
                        "type": "string"
                    },
                    "templatePageLevelMatchingMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "timezoneDST": {
                        "description": "When true, daylight savings time is in effect for this user's time zone.",
                        "type": "string"
                    },
                    "timezoneDSTMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "timezoneMask": {
                        "description": "The custom DateTime format setting for this user.",
                        "type": "string"
                    },
                    "timezoneMaskMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "timezoneOffset": {
                        "description": "The timezone offset for the user. Valid values:\n- `tz_01_afghanistan`\n- `tz_02_alaskan`\n- `tz_03_arab`\n- `tz_04_arabian`\n- `tz_05_arabic`\n- `tz_06_argentina`\n- `tz_07_atlantic`\n- `tz_08_aus_central`\n- `tz_09_aus_eastern`\n- `tz_10_azerbaijan`\n- `tz_11_azores`\n- `tz_12_bangladesh`\n- `tz_13_canada_central`\n- `tz_14_cape_verde`\n- `tz_15_caucasus`\n- `tz_16_central_australia`\n- `tz_17_central_america`\n- `tz_18_central_asia`\n- `tz_19_central_brazilian`\n- `tz_20_central_europe`\n- `tz_21_central_european`\n- `tz_22_central_pacific`\n- `tz_23_central`\n- `tz_24_central_mexico`\n- `tz_25_china`\n- `tz_26_dateline`\n- `tz_27_east_africa`\n- `tz_28_east_australia`\n- `tz_29_east_europe`\n- `tz_30_east_south_america`\n- `tz_31_eastern`\n- `tz_32_egypt`\n- `tz_33_ekaterinburg`\n- `tz_34_fiji`\n- `tz_35_fli`\n- `tz_36_georgian`\n- `tz_37_gmt`\n- `tz_38_greenland`\n- `tz_39_greenwich`\n- `tz_40_gtb`\n- `tz_41_hawaiian`\n- `tz_42_india`\n- `tz_43_iran`\n- `tz_44_israel`\n- `tz_45_jordan`\n- `tz_46_kaliningrad`\n- `tz_47_kamchatka`\n- `tz_48_korea`\n- `tz_49_magadan`\n- `tz_50_mauritius`\n- `tz_51_mid_atlantic`\n- `tz_52_middle_east`\n- `tz_53_montevideo`\n- `tz_54_morocco`\n- `tz_55_mountain`\n- `tz_56_mountain_mexico`\n- `tz_57_myanmar`\n- `tz_58_north_central_asia`\n- `tz_59_namibia`\n- `tz_60_nepal`\n- `tz_61_new_zealand`\n- `tz_62_new_foundland`\n- `tz_63_north_asia_east`\n- `tz_64_north_asia`\n- `tz_65_pacific_sa`\n- `tz_66_pacific`\n- `tz_67_pacific_mexico`\n- `tz_68_pakistan`\n- `tz_69_paraguay`\n- `tz_70_romance`\n- `tz_71_russian`\n- `tz_72_sa_eastern`\n- `tz_73_sa_pacific`\n- `tz_74_sa_western`\n- `tz_75_samoa`\n- `tz_76_se_asia`\n- `tz_77_singapore`\n- `tz_78_south_africa`\n- `tz_79_sriLanka`\n- `tz_80_syria`\n- `tz_81_taipei`\n- `tz_82_tasmania`\n- `tz_83_tokyo`\n- `tz_84_tonga`\n- `tz_85_turkey`\n- `tz_86_ulaanbaatar`\n- `tz_87_us_eastern`\n- `tz_88_us_mountain`\n- `tz_89_venezuela`\n- `tz_90_vladivostok`\n- `tz_91_west_australia`\n- `tz_92_west_central_africa`\n- `tz_93_west_europe`\n- `tz_94_west_asia`\n- `tz_95_west_pacific`\n- `tz_96_yakutsk`",
                        "type": "string"
                    },
                    "timezoneOffsetMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "timezoneSendingPref": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "timezoneSendingPrefMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "timezoneSigningPref": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "timezoneSigningPrefMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "transactionPointSiteNameURL": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "transactionPointSiteNameURLMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "transactionPointUserName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "transactionPointUserNameMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "vaultingMode": {
                        "description": "Indicates the specified Vaulting mode:\n- `none`\n- `estored`\n- `electronic_original`",
                        "type": "string"
                    },
                    "vaultingModeMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "webForms": {
                        "description": "",
                        "type": "string"
                    },
                    "webFormsMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    }
                },
                "description": "Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following:\n- `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`)\n- `uiHint`: Internally used to build UIs (can be `available` or `hidden`)\n- `options`: The values supported for this setting (not all settings have this element)",
                "x-ds-definition-name": "userSettingsInformation",
                "x-ms-summary": "Properties that configure the settings for a user. Some elements of this object have a `metadata` property, which includes the following:\n- `rights`: The calling users permissions to edit this setting (can be `editable` or `read_only`)\n- `uiHint`: Internally used to build UIs (can be `available` or `hidden`)\n- `options`: The values supported for this setting (not all settings have this element)"
            },
            "userSharedItem": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "shared": {
                        "description": "How the item is shared. One of:\n\n- `not_shared`\n- `shared_to`\n- `shared_from`\n- `shared_to_and_from`\n",
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/userInfo"
                    }
                },
                "description": "Information about a shared item.",
                "x-ds-definition-name": "userSharedItem",
                "x-ms-summary": "Information about a shared item."
            },
            "userSignature": {
                "type": "object",
                "properties": {
                    "adoptedDateTime": {
                        "description": "The date and time the user adopted their signature.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "customField": {
                        "description": "",
                        "type": "string"
                    },
                    "dateStampProperties": {
                        "$ref": "#/components/schemas/dateStampProperties"
                    },
                    "disallowUserResizeStamp": {
                        "description": "When **true,** users may not resize the stamp.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "externalID": {
                        "description": "Optionally specify an external identifier for the user's signature.",
                        "type": "string"
                    },
                    "imageBase64": {
                        "description": "A Base64-encoded representation of the signature image.",
                        "type": "string"
                    },
                    "imageType": {
                        "description": "Specificies the type of image. Valid values:\n\n- `stamp_image`\n- `signature_image`\n- `initials_image`",
                        "type": "string"
                    },
                    "initials150ImageId": {
                        "description": "The ID of the user's initials image.",
                        "type": "string"
                    },
                    "initialsImageUri": {
                        "description": "The URI for retrieving the image of the user's initials.",
                        "type": "string"
                    },
                    "isDefault": {
                        "description": "Boolean that specifies whether the signature is the default signature for the user.",
                        "type": "string"
                    },
                    "lastModifiedDateTime": {
                        "description": "The date and time that the item was last modified.",
                        "type": "string"
                    },
                    "nrdsId": {
                        "description": "The National Association of Realtors (NAR) membership ID for a user who is a realtor.",
                        "type": "string"
                    },
                    "nrdsLastName": {
                        "description": "The realtor's last name.",
                        "type": "string"
                    },
                    "nrdsStatus": {
                        "description": "The realtor's NAR membership status. The value `active` verifies that the user is a current NAR member. Valid values are:\n\n- `Active`\n- `Inactive`\n- `Terminate`\n- `Provisional`\n- `Deceased`\n- `Suspend`\n- `Unknown`",
                        "type": "string"
                    },
                    "phoneticName": {
                        "description": "The phonetic spelling of the `signatureName`.",
                        "type": "string"
                    },
                    "signature150ImageId": {
                        "description": "The ID of the user's signature image.",
                        "type": "string"
                    },
                    "signatureFont": {
                        "description": "The font type for the signature, if the signature is not drawn. The supported font types are:\n\n\"7_DocuSign\", \"1_DocuSign\", \"6_DocuSign\", \"8_DocuSign\", \"3_DocuSign\", \"Mistral\", \"4_DocuSign\", \"2_DocuSign\", \"5_DocuSign\", \"Rage Italic\"\n",
                        "type": "string"
                    },
                    "signatureId": {
                        "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
                        "type": "string"
                    },
                    "signatureImageUri": {
                        "description": "An endpoint URI that you can use to retrieve the user's signature image.",
                        "type": "string"
                    },
                    "signatureInitials": {
                        "description": " The initials associated with the signature.",
                        "type": "string"
                    },
                    "signatureName": {
                        "description": "Specifies the user's signature name.",
                        "type": "string"
                    },
                    "signatureRights": {
                        "description": "The rights that the user has to the signature. Valid values are:\n\n- `none`\n- `read`\n- `admin`",
                        "type": "string"
                    },
                    "signatureType": {
                        "description": "Specifies the type of signature.",
                        "type": "string"
                    },
                    "stampFormat": {
                        "description": "The format of a stamp. Valid values are:\n\n- `NameHanko`: The stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents the signer's name and the date. ",
                        "type": "string"
                    },
                    "stampImageUri": {
                        "description": "The URI for retrieving the image of the user's stamp.",
                        "type": "string"
                    },
                    "stampSizeMM": {
                        "description": "The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
                        "type": "string"
                    },
                    "stampType": {
                        "description": "The type of stamp. Valid values are:\n\n- `signature`: A signature image. This is the default value.\n- `stamp`: A stamp image.\n- null",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userSignature",
                "description": "",
                "x-ms-summary": ""
            },
            "userSignatureDefinition": {
                "type": "object",
                "properties": {
                    "dateStampProperties": {
                        "$ref": "#/components/schemas/dateStampProperties"
                    },
                    "disallowUserResizeStamp": {
                        "description": "When **true,** users may not resize the stamp.",
                        "type": "string"
                    },
                    "externalID": {
                        "description": "Optionally specify an external identifier for the user's signature.",
                        "type": "string"
                    },
                    "imageType": {
                        "description": "Specificies the type of image. Valid values:\n\n- `stamp_image`\n- `signature_image`\n- `initials_image`",
                        "type": "string"
                    },
                    "isDefault": {
                        "description": "Boolean that specifies whether the signature is the default signature for the user.",
                        "type": "string"
                    },
                    "nrdsId": {
                        "description": "The National Association of Realtors (NAR) membership ID for a user who is a realtor.",
                        "type": "string"
                    },
                    "nrdsLastName": {
                        "description": "The realtor's last name.",
                        "type": "string"
                    },
                    "phoneticName": {
                        "description": "The phonetic spelling of the `signatureName`.",
                        "type": "string"
                    },
                    "signatureFont": {
                        "description": "The font type to use for the signature if the signature is not drawn. The following font styles  are supported. The quotes are to indicate that these values are strings, not `enums`.\n\n- `\"1_DocuSign\"`\n- `\"2_DocuSign\"`\n- `\"3_DocuSign\"`\n- `\"4_DocuSign\"`\n- `\"5_DocuSign\"`\n- `\"6_DocuSign\"`\n- `\"7_DocuSign\"`\n- `\"8_DocuSign\"`\n- `\"Mistral\"`\n- `\"Rage Italic\"`\n",
                        "type": "string"
                    },
                    "signatureId": {
                        "description": "Specifies the signature ID associated with the signature name. You can use the signature ID in the URI in place of the signature name, and the value stored in the `signatureName` property in the body is used. This allows the use of special characters (such as \"&\", \"<\", \">\") in a the signature name. Note that with each update to signatures, the returned signature ID might change, so the caller will need to trigger off the signature name to get the new signature ID.",
                        "type": "string"
                    },
                    "signatureInitials": {
                        "description": "Specifies the user's signature in initials format.",
                        "type": "string"
                    },
                    "signatureName": {
                        "description": "Specifies the user's signature name.",
                        "type": "string"
                    },
                    "signatureType": {
                        "description": "Specifies the type of signature.",
                        "type": "string"
                    },
                    "stampFormat": {
                        "description": "The format of a stamp. Valid values are:\n\n- `NameHanko`: The stamp represents only the signer's name.\n- `NameDateHanko`: The stamp represents the signer's name and the date. ",
                        "type": "string"
                    },
                    "stampSizeMM": {
                        "description": "The physical height of the stamp image (in millimeters) that the stamp vendor recommends for displaying the image in PDF documents.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userSignatureDefinition",
                "description": "",
                "x-ms-summary": ""
            },
            "userSignaturesInformation": {
                "type": "object",
                "properties": {
                    "userSignatures": {
                        "description": "An array of  `userSignature` objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userSignature"
                        }
                    }
                },
                "x-ds-definition-name": "userSignaturesInformation",
                "description": "",
                "x-ms-summary": ""
            },
            "userSocialIdResult": {
                "type": "object",
                "properties": {
                    "socialAccountInformation": {
                        "description": "Contains properties that map a DocuSign user to a social account such as Facebook or Yahoo.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAccountInformation"
                        }
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "userSocialIdResult",
                "description": "",
                "x-ms-summary": ""
            },
            "usersResponse": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    },
                    "users": {
                        "description": "User management information.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    }
                },
                "x-ds-definition-name": "usersResponse",
                "description": "",
                "x-ms-summary": ""
            },
            "view": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "buttonText": {
                        "description": "The text to display on the button.",
                        "type": "string"
                    },
                    "buttonTextMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "The ID of the recipient to whom the tab will be assigned. This value should match the `recipientId` defined in the recipient object.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the recipient must click the **View** button for the supporting document prior to completing the signing process.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requiredRead": {
                        "description": "When **true,** the recipient must read through the document.",
                        "type": "string"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "This tab is used with the Approve tab to handle supplemental documents.",
                "x-ds-definition-name": "view",
                "x-ms-summary": "This tab is used with the Approve tab to handle supplemental documents."
            },
            "viewUrl": {
                "type": "object",
                "properties": {
                    "url": {
                        "description": "URL to the Review ID page.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "viewUrl",
                "description": "",
                "x-ms-summary": ""
            },
            "watermark": {
                "type": "object",
                "properties": {
                    "displayAngle": {
                        "description": "The display angle of the watermark. Valid values:\n\n* 0 (horizontal)\n* 45 (diagonal)\n* 90 (vertical)",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "When **true,** the watermark will be applied to documents that are still in progress. When **false,** the watermark will not be applied.",
                        "type": "string"
                    },
                    "font": {
                        "description": "The watermark's font. Valid values:\n\n- `courier`\n- `helvetica`\n- `timesnewroman`\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The watermark's font color. Valid values:\n\n* `black`\n* `blue`\n* `red`\n* `gray`\n* `yellow`",
                        "type": "string"
                    },
                    "fontSize": {
                        "description": "The watermark's font size. Valid values:\n\n* `30`\n* `40`\n* `50`\n* `60`\n* `70`\n* `80`\n* `90`",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the watermark.",
                        "type": "string"
                    },
                    "imageBase64": {
                        "description": "The Base64 representation of the watermark image.\n\nThis property is read-only.",
                        "type": "string"
                    },
                    "transparency": {
                        "description": "The transparency percentage of the watermark image. Valid values:\n\n* `5`\n* `10`\n* `15`\n* `20`\n* `25`\n* `30`\n* `35`\n* `40`\n* `45`",
                        "type": "string"
                    },
                    "watermarkText": {
                        "description": "The text for the watermark.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "watermark",
                "description": "",
                "x-ms-summary": ""
            },
            "witness": {
                "type": "object",
                "properties": {
                    "accessCode": {
                        "description": "If a value is provided, the recipient must enter the value as the access code to view and sign the envelope. \n\nMaximum Length: 50 characters and it must conform to the account's access code format setting.\n\nIf blank, but the signer `accessCode` property is set in the envelope, then that value is used.\n\nIf blank and the signer `accessCode` property is not set, then the access code is not required.",
                        "type": "string"
                    },
                    "accessCodeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "addAccessCodeToEmail": {
                        "description": "Optional. When **true,** the access code will be added to the email sent to the recipient. This nullifies the security measure of `accessCode` on the recipient.",
                        "type": "string"
                    },
                    "additionalNotifications": {
                        "description": "An array of additional notification objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAdditionalNotification"
                        }
                    },
                    "agentCanEditEmail": {
                        "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated email address. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "agentCanEditName": {
                        "description": "Optional element. When **true,** the agents recipient associated with this recipient can change the recipient's pre-populated name. This element is only active if enabled for the account.",
                        "type": "string"
                    },
                    "allowSystemOverrideForLockedRecipient": {
                        "description": "When **true,** if the recipient is locked on a template, advanced recipient routing can override the lock.",
                        "type": "string"
                    },
                    "autoNavigation": {
                        "description": "When **true,** autonavigation is set for the recipient.\n",
                        "type": "string"
                    },
                    "autoRespondedReason": {
                        "description": "Error message provided by the destination email system. This field is only provided if the email notification to the recipient fails to send. This property is read-only.\n",
                        "type": "string"
                    },
                    "bulkRecipientsUri": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "bulkSendV2Recipient": {
                        "description": "",
                        "type": "string"
                    },
                    "canSignOffline": {
                        "description": "When **true,** specifies that the signer can perform the signing ceremony offline.",
                        "type": "string"
                    },
                    "clientUserId": {
                        "description": "Specifies whether the recipient is embedded or remote. \n\nIf the `clientUserId` property is not null then the recipient is embedded. Use this field to associate the signer with their userId in your app. Authenticating the user is the responsibility of your app when you use embedded signing.\n\nIf the `clientUserId` property is set and either `SignerMustHaveAccount` or `SignerMustLoginToSign` property of the account settings is set to  **true,** an error is generated on sending.\n\n**Note:** This property is not returned by the [listStatusChanges](/docs/esign-rest-api/reference/envelopes/envelopes/liststatuschanges/) endpoint.\n\nMaximum length: 100 characters. \n",
                        "type": "string"
                    },
                    "completedCount": {
                        "description": "Indicates the number of times that the recipient has been through a signing completion for the envelope. If this number is greater than 0 for a signing group, only the user who previously completed may sign again. This property is read-only.",
                        "type": "string"
                    },
                    "consentDetailsList": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/consentDetails"
                        }
                    },
                    "creationReason": {
                        "description": "The reason why the recipient was created (for example, `sender`). This property is read-only.",
                        "type": "string"
                    },
                    "customFields": {
                        "description": "An optional array of strings that allows the sender to provide custom data about the recipient. This information is returned in the envelope status but otherwise not used by DocuSign. Each customField string can be a maximum of 100 characters.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "declinedReason": {
                        "description": "The reason the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "defaultRecipient": {
                        "description": "When **true,** this recipient is the default recipient and any tabs generated by the transformPdfFields option are mapped to this recipient.",
                        "type": "string"
                    },
                    "delegatedBy": {
                        "$ref": "#/components/schemas/delegationInfo"
                    },
                    "delegatedTo": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/delegationInfo"
                        }
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMethod": {
                        "description": "The delivery method. One of:\n\n- `email`\n- `fax`\n- `SMS`\n- `WhatsApp`\n- `offline`\n\nThe `SMS` and `WhatsApp` delivery methods\nare limited to `signer`, `carbonCopy`, and `certifiedDelivery`\nrecipients.\n\n**Related topics**\n\n- [Using SMS delivery with the eSignature API][smsconcept]\n- [How to request a signature by SMS delivery][howto]\n\n[smsconcept]: /docs/esign-rest-api/esign101/concepts/sms-delivery/using-sms-esignature/\n[howto]: /docs/esign-rest-api/how-to/request-signature-sms/",
                        "type": "string"
                    },
                    "deliveryMethodMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "designatorId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "designatorIdGuid": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "documentVisibility": {
                        "description": "A list of `documentVisibility` objects. Each object in the list specifies whether a document in the envelope is visible to this recipient. For the envelope to use this functionality, Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true.**",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/documentVisibility"
                        }
                    },
                    "email": {
                        "description": "The recipient's email address.",
                        "type": "string"
                    },
                    "emailMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "emailNotification": {
                        "$ref": "#/components/schemas/recipientEmailNotification"
                    },
                    "emailRecipientPostSigningURL": {
                        "description": "",
                        "type": "string"
                    },
                    "embeddedRecipientStartURL": {
                        "description": "Specifies a sender-provided valid URL string for redirecting an embedded recipient. When using this option, the embedded recipient still receives an email from DocuSign, just as a remote recipient would. When the document link in the email is clicked the recipient is redirected, through DocuSign, to the supplied URL to complete their actions. When routing to the URL, the sender's system (the server responding to the URL) must request a recipient token to launch a signing session. \n\nWhen `SIGN_AT_DOCUSIGN`, the recipient is directed to an embedded signing or viewing process directly at DocuSign. The signing or viewing action is initiated by the DocuSign system and the transaction activity and Certificate of Completion records will reflect this. In all other ways the process is identical to an embedded signing or viewing operation launched by a partner.\n\nIt is important to understand that in a typical embedded workflow, the authentication of an embedded recipient is the responsibility of the sending application. DocuSign expects that senders will follow their own processes for establishing the recipient's identity. In this workflow the recipient goes through the sending application before the embedded signing or viewing process is initiated. However, when the sending application sets `EmbeddedRecipientStartURL=SIGN_AT_DOCUSIGN`, the recipient goes directly to the embedded signing or viewing process, bypassing the sending application and any authentication steps the sending application would use. In this case, DocuSign recommends that you use one of the normal DocuSign authentication features (Access Code, Phone Authentication, SMS Authentication, etc.) to verify the identity of the recipient.\n\nIf the `clientUserId` property is NOT set, and the `embeddedRecipientStartURL` is set, DocuSign will ignore the redirect URL and launch the standard signing process for the email recipient. Information can be appended to the embedded recipient start URL using merge fields. The available merge fields items are: `envelopeId`, `recipientId`, `recipientName`, `recipientEmail`, and `customFields`. The `customFields` property must be set for the recipient or envelope. The merge fields are enclosed in double brackets. \n\n*Example*: \n\n`http://senderHost/[[mergeField1]]/ beginSigningSession? [[mergeField2]]&[[mergeField3]]` ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "excludedDocuments": {
                        "description": "Specifies the documents that are not visible to this recipient. Document Visibility must be enabled for the account and the `enforceSignerVisibility` property must be set to **true** for the envelope to use this.\n\nWhen enforce signer visibility is enabled, documents with tabs can only be viewed by signers that have a tab on that document. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all the documents in an envelope, unless they are specifically excluded using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded using this setting when an envelope is sent.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "faxNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "faxNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "firstName": {
                        "description": "The recipient's first name. Maximum Length: 50 characters.",
                        "type": "string"
                    },
                    "firstNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fullName": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "fullNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckConfigurationName": {
                        "description": "The name of the authentication check to use. This value must match one of the authentication types that the account uses. The names of these authentication types appear in the web console sending interface in the Identify list for a recipient. This setting overrides any default authentication setting. Valid values are:\n\n- `Phone Auth $`: The recipient must authenticate by using two-factor authentication (2FA). You provide the phone number to use for 2FA in the `phoneAuthentication` object.\n- `SMS Auth $`: The recipient must authenticate via SMS. You provide the phone number to use in the `smsAuthentication` object.\n- `ID Check $`: The  recipient must answer detailed security questions. \n\n**Example:** Your account has ID Check and SMS Authentication available. In the web console Identify list, these appear as ID Check $ and SMS Auth $. To use ID Check in an envelope, the idCheckConfigurationName should be ID Check $. For SMS, you would use SMS Auth $, and you would also need to add a phone number to the smsAuthentication node.",
                        "type": "string"
                    },
                    "idCheckConfigurationNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "idCheckInformationInput": {
                        "$ref": "#/components/schemas/idCheckInformationInput"
                    },
                    "identityVerification": {
                        "$ref": "#/components/schemas/recipientIdentityVerification"
                    },
                    "inheritEmailNotificationConfiguration": {
                        "description": "When **true** and the envelope recipient creates a DocuSign account after signing, the Manage Account Email Notification settings are used as the default settings for the recipient's account. ",
                        "type": "string"
                    },
                    "isBulkRecipient": {
                        "description": "Reserved for DocuSign.\n",
                        "type": "string"
                    },
                    "isBulkRecipientMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lastName": {
                        "description": "The recipient's last name.",
                        "type": "string"
                    },
                    "lastNameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "lockedRecipientPhoneAuthEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockedRecipientSmsEditable": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The full legal name of the recipient. Maximum Length: 100 characters.\n\n**Note:** You must always set a value for this property in requests, even if `firstName` and `lastName` are set.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "notaryId": {
                        "description": "",
                        "type": "string"
                    },
                    "notarySignerEmailSent": {
                        "description": "",
                        "type": "string"
                    },
                    "note": {
                        "description": "A note sent to the recipient in the signing email.\nThis note is unique to this recipient.\nIn the user interface,\nit appears near the upper left corner\nof the document\non the signing screen.\n\nMaximum Length: 1000 characters.\n",
                        "type": "string"
                    },
                    "noteMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "offlineAttributes": {
                        "$ref": "#/components/schemas/offlineAttributes"
                    },
                    "phoneAuthentication": {
                        "$ref": "#/components/schemas/recipientPhoneAuthentication"
                    },
                    "phoneNumber": {
                        "$ref": "#/components/schemas/recipientPhoneNumber"
                    },
                    "proofFile": {
                        "$ref": "#/components/schemas/recipientProofFile"
                    },
                    "recipientAttachments": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientAttachment"
                        }
                    },
                    "recipientAuthenticationStatus": {
                        "$ref": "#/components/schemas/authenticationStatus"
                    },
                    "recipientFeatureMetadata": {
                        "description": "Metadata about the features that are supported for the recipient type. This property is read-only.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/featureAvailableMetadata"
                        }
                    },
                    "recipientId": {
                        "description": "Unique for the recipient. It is used by the tab element to indicate which recipient is to sign the Document.",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientSignatureProviders": {
                        "description": "The default signature provider is the DocuSign Electronic signature system. This parameter is used to specify one or more Standards Based Signature (digital signature) providers for the signer to use. [More information.](/docs/esign-rest-api/esign101/concepts/standards-based-signatures/)",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientSignatureProvider"
                        }
                    },
                    "recipientSuppliesTabs": {
                        "description": "When **true,** specifies that the recipient creates the tabs.",
                        "type": "string"
                    },
                    "recipientType": {
                        "description": "The recipient type, as specified by the following values:\n- `agent`: Agent recipients can add name and email information for recipients that appear after the agent in routing order.\n- `carbonCopy`: Carbon copy recipients get a copy of the envelope but don't need to sign, initial, date, or add information to any of the documents. This type of recipient can be used in any routing order.\n- `certifiedDelivery`: Certified delivery recipients must receive the completed documents for the envelope to be completed. They don't need to sign, initial, date, or add information to any of the documents.\n- `editor`: Editors have the same management and access rights for the envelope as the sender. Editors can add name and email information, add or change the routing order, set authentication options, and can edit signature/initial tabs and data fields for the remaining recipients.\n- `inPersonSigner`: In-person recipients are DocuSign users who act as signing hosts in the same physical location as the signer.\n- `intermediaries`: Intermediary recipients can optionally add name and email information for recipients at the same or subsequent level in the routing order.\n- `seal`: Electronic seal recipients represent legal entities.\n- `signer`: Signers are recipients who must sign, initial, date, or add data to form fields on the documents in the envelope.\n- `witness`: Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                        "type": "string"
                    },
                    "recipientTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireIdLookup": {
                        "description": "When **true,** the recipient is required to use the specified ID check method (including Phone and SMS authentication) to validate their identity. ",
                        "type": "string"
                    },
                    "requireIdLookupMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireSignerCertificate": {
                        "description": "By default, DocuSign signers create electronic signatures. This field can be used to require the signer to use a SAFE-BioPharma digital certificate for signing.\n\nThis parameter should only be used to select a SAFE-BioPharma certificate. New integrations should use the `recipientSignatureProviders` parameter for other types of digital certificates. \n\nSet this parameter to `safe` to use a SAFE-BioPharma certificate.\n\nThe signer must be enrolled in the SAFE program to sign with a SAFE certificate.",
                        "type": "string"
                    },
                    "requireSignOnPaper": {
                        "description": "When **true,** the signer must print, sign, and upload or fax the signed documents to DocuSign.",
                        "type": "string"
                    },
                    "requireUploadSignature": {
                        "description": "When **true,** the signer is required to upload a new signature, even if they have a pre-adopted signature in their personal DocuSign account.",
                        "type": "string"
                    },
                    "roleName": {
                        "description": "Optional element. Specifies the role name associated with the recipient.<br/><br/>This property is required when you are working with template recipients.",
                        "type": "string"
                    },
                    "routingOrder": {
                        "description": "Specifies the routing order of the recipient in the envelope. ",
                        "type": "string"
                    },
                    "routingOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signatureInfo": {
                        "$ref": "#/components/schemas/recipientSignatureInformation"
                    },
                    "signedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "signInEachLocation": {
                        "description": "When **true** and the feature is enabled in the sender's account, the signing recipient is required to draw signatures and initials at each signature/initial tab (instead of adopting a signature/initial style or only drawing a signature/initial once).",
                        "type": "string"
                    },
                    "signInEachLocationMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupId": {
                        "description": "The ID of the [signing group](https://support.docusign.com/s/document-item?bundleId=gav1643676262430&topicId=zgn1578456447934.html).\n",
                        "type": "string"
                    },
                    "signingGroupIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "signingGroupName": {
                        "description": "Optional. The name of the signing group. \n\nMaximum Length: 100 characters. ",
                        "type": "string"
                    },
                    "signingGroupUsers": {
                        "description": "A complex type that contains information about users in the signing group.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/userInfo"
                        }
                    },
                    "smsAuthentication": {
                        "$ref": "#/components/schemas/recipientSMSAuthentication"
                    },
                    "socialAuthentications": {
                        "description": "Deprecated.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/socialAuthentication"
                        }
                    },
                    "status": {
                        "description": "The recipient's status. This property is read-only. \n\nValid values:\n\n- `autoresponded`: The recipient's email system auto-responded to the email from DocuSign. This status is used in the web console to inform senders about the bounced-back email. This recipient status is only used if **Send-on-behalf-of** is turned off for the account.\n- `completed`: The recipient has completed their actions (signing or other required actions if not a signer) for an envelope.\n- `created`: The recipient is in a draft state. This value is only associated with draft envelopes (envelopes that have a status of `created`).\n- `declined`: The recipient declined to sign the documents in the envelope.\n- `delivered`: The recipient has viewed the documents in an envelope through the DocuSign signing website. This is not an email delivery of the documents in an envelope.\n- `faxPending`: The recipient has finished signing and the system is waiting for a fax attachment from the recipient before completing their signing step.\n- `sent`: The recipient has been sent an email notification that it is their turn to sign an envelope.\n- `signed`: The recipient has completed (signed) all required tags in an envelope. This is a temporary state during processing, after which the recipient's status automatically switches to `completed`.",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "The code associated with the recipient's status. This property is read-only.",
                        "type": "string"
                    },
                    "suppressEmails": {
                        "description": "When **true,** email notifications are suppressed for the recipient, and they must access envelopes and documents from their DocuSign inbox.",
                        "type": "string"
                    },
                    "tabs": {
                        "$ref": "#/components/schemas/EnvelopeRecipientTabs"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "totalTabCount": {
                        "description": "The total number of tabs in the documents. This property is read-only.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the user to access.\n\n**Note:** Users can only access their own information. A user, even one with Admin rights, cannot access another user's settings.",
                        "type": "string"
                    },
                    "witnessFor": {
                        "description": "The `recipientId` of the person or party for whom the recipient is a witness.",
                        "type": "string"
                    },
                    "witnessForGuid": {
                        "description": "Not used. Use the `witnessFor` property instead.",
                        "type": "string"
                    }
                },
                "description": "A complex type containing information about a witness recipient. Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope.",
                "x-ds-definition-name": "witness",
                "x-ms-summary": "A complex type containing information about a witness recipient. Witnesses are recipients whose signatures affirm that the identified signers have signed the documents in the envelope."
            },
            "workflow": {
                "type": "object",
                "properties": {
                    "currentWorkflowStepId": {
                        "description": "The `workflowStepId` of the current step.\nThis is not an index into the `workflowSteps` array in this object.\nSee the `workflowStep` object.",
                        "type": "string"
                    },
                    "resumeDate": {
                        "description": "The ISO 8601 timestamp of when the envelope is scheduled to be sent, if applicable. Its value is the maximum of the `resumeDate` property on `scheduledSending` and the `resumeDate` property on the current `workflowStep`.\n\nThis property is read-only.",
                        "type": "string"
                    },
                    "scheduledSending": {
                        "$ref": "#/components/schemas/scheduledSending"
                    },
                    "workflowStatus": {
                        "description": "The status of the workflow:\n\n- `paused` if the workflow is paused\n- `in_progress` if the workflow is in progress",
                        "type": "string"
                    },
                    "workflowSteps": {
                        "description": "An array of workflow steps.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/workflowStep"
                        }
                    }
                },
                "description": "Describes the workflow for an envelope.",
                "x-ds-definition-name": "workflow",
                "x-ms-summary": "Describes the workflow for an envelope."
            },
            "workflowStep": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "Indicates the action to perform. Valid values:\n\n- `pause_before`: The workflow should pause before the trigger described by `triggerOnItem` is reached.\n",
                        "type": "string"
                    },
                    "completedDate": {
                        "description": "The timestamp of when the workflow step transitioned to `completed` status.\n\nThis property is read-only.",
                        "type": "string"
                    },
                    "delayedRouting": {
                        "$ref": "#/components/schemas/delayedRouting"
                    },
                    "itemId": {
                        "description": "The unique ID of the item being triggered.",
                        "type": "string"
                    },
                    "recipientRouting": {
                        "$ref": "#/components/schemas/recipientRouting"
                    },
                    "status": {
                        "description": "The status of the step. Valid values:\n\n- `inactive`\n- `in_progress`\n- `paused`\n- `pending`\n- `completed`\n\nThis property is read-only.",
                        "type": "string"
                    },
                    "triggeredDate": {
                        "description": "The timestamp of when the workflow step transitioned to `in_progress` status.\n\nThis property is read-only.",
                        "type": "string"
                    },
                    "triggerOnItem": {
                        "description": "The type of item that triggers this workflow step. Valid values:\n\n* `routing_order`",
                        "type": "string"
                    },
                    "workflowStepId": {
                        "description": "A unique identifier for this workflow step.\n\nThis property is read-only.",
                        "type": "string"
                    }
                },
                "description": "Describes a single step in a workflow.",
                "x-ds-definition-name": "workflowStep",
                "x-ms-summary": "Describes a single step in a workflow."
            },
            "workspace": {
                "description": "A DocuSign workspace is a collaboration area for sharing files and data.",
                "type": "object",
                "properties": {
                    "billableAccountId": {
                        "description": "The ID of the account to bill.",
                        "type": "string"
                    },
                    "callerInformation": {
                        "$ref": "#/components/schemas/workspaceUser"
                    },
                    "created": {
                        "description": "The UTC DateTime when the workspace user authorization was created.",
                        "type": "string"
                    },
                    "createdByInformation": {
                        "$ref": "#/components/schemas/workspaceUser"
                    },
                    "lastModified": {
                        "description": "Utc date and time the comment was last updated (can only be done by creator.)",
                        "type": "string"
                    },
                    "lastModifiedByInformation": {
                        "$ref": "#/components/schemas/workspaceUser"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/workspaceSettings"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* sent - The envelope is sent to the recipients. \n* created - The envelope is saved as a draft and can be modified and sent later.",
                        "type": "string"
                    },
                    "workspaceBaseUrl": {
                        "description": "The relative URL for accessing the workspace.",
                        "type": "string"
                    },
                    "workspaceDescription": {
                        "description": "Text describing the purpose of the workspace.",
                        "type": "string"
                    },
                    "workspaceId": {
                        "description": "The ID of the workspace, always populated.",
                        "type": "string"
                    },
                    "workspaceName": {
                        "description": "The name of the workspace.",
                        "type": "string"
                    },
                    "workspaceUri": {
                        "description": "The relative URI for accessing the workspace.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "workspace",
                "x-ms-summary": "A DocuSign workspace is a collaboration area for sharing files and data."
            },
            "workspaceFolderContents": {
                "description": "This object's properties describe the contents of a workspace folder.",
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "folder": {
                        "$ref": "#/components/schemas/workspaceItem"
                    },
                    "items": {
                        "description": "A list of workspace items.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/workspaceItem"
                        }
                    },
                    "parentFolders": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/workspaceItem"
                        }
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    },
                    "workspaceId": {
                        "description": "The ID of the workspace, always populated.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "workspaceFolderContents",
                "x-ms-summary": "This object's properties describe the contents of a workspace folder."
            },
            "workspaceItem": {
                "description": "This object represents an item in a workspace, which can be either a file or folder.",
                "type": "object",
                "properties": {
                    "callerAuthorization": {
                        "$ref": "#/components/schemas/workspaceUserAuthorization"
                    },
                    "contentType": {
                        "description": "If the item is a file, this property specifies the content type of the file.",
                        "type": "string"
                    },
                    "created": {
                        "description": "The UTC DateTime when the workspace item was created.",
                        "type": "string"
                    },
                    "createdById": {
                        "description": "The ID of the user who created the workspace item.",
                        "type": "string"
                    },
                    "createdByInformation": {
                        "$ref": "#/components/schemas/workspaceUser"
                    },
                    "extension": {
                        "description": "The file extension of a file item.",
                        "type": "string"
                    },
                    "fileSize": {
                        "description": "The size of the file in bytes.",
                        "type": "string"
                    },
                    "fileUri": {
                        "description": "The URI for retrieving the file.",
                        "type": "string"
                    },
                    "id": {
                        "description": "A unique ID for the Salesforce object.",
                        "type": "string"
                    },
                    "isPublic": {
                        "description": " When **true,** the item is public.",
                        "type": "string"
                    },
                    "lastModified": {
                        "description": "The UTC date and time that the comment was last updated.\n\n**Note:** This can only be done by the creator.",
                        "type": "string"
                    },
                    "lastModifiedById": {
                        "description": "The ID of the user who last modified the item.",
                        "type": "string"
                    },
                    "lastModifiedByInformation": {
                        "$ref": "#/components/schemas/workspaceUser"
                    },
                    "name": {
                        "description": "The name of the file or folder.",
                        "type": "string"
                    },
                    "pageCount": {
                        "description": "The number of pages in a file.",
                        "type": "string"
                    },
                    "parentFolderId": {
                        "description": "The ID of the parent folder, or the special value `root` for the root folder.",
                        "type": "string"
                    },
                    "parentFolderUri": {
                        "description": "The URI of the parent folder.",
                        "type": "string"
                    },
                    "sha256": {
                        "description": "A 64-byte, Secure Hash Algorithm 256 (SHA256) checksum that the caller computes across the entirety of the original content of a file. DocuSign compares this value to its own computation. If the two values are not equal, the original content and received content are not the same and the upload is refused.",
                        "type": "string"
                    },
                    "thumbHeight": {
                        "description": "The height of the thumbnail image.",
                        "type": "string"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/page"
                    },
                    "thumbWidth": {
                        "description": "The width of the thumbnail image.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of the workspace item. Valid values are file, folder.",
                        "type": "string"
                    },
                    "uri": {
                        "description": "A URI containing the user ID.",
                        "type": "string"
                    },
                    "userAuthorization": {
                        "$ref": "#/components/schemas/workspaceUserAuthorization"
                    }
                },
                "x-ds-definition-name": "workspaceItem",
                "x-ms-summary": "This object represents an item in a workspace, which can be either a file or folder."
            },
            "workspaceItemList": {
                "description": "An array of objects that describe the items in a workspace.",
                "type": "object",
                "properties": {
                    "items": {
                        "description": "A list of workspace items.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/workspaceItem"
                        }
                    }
                },
                "x-ds-definition-name": "workspaceItemList",
                "x-ms-summary": "An array of objects that describe the items in a workspace."
            },
            "workspaceList": {
                "description": "This object contains a list of available workspaces.",
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    },
                    "workspaces": {
                        "description": "A list of workspaces.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/workspace"
                        }
                    }
                },
                "x-ds-definition-name": "workspaceList",
                "x-ms-summary": "This object contains a list of available workspaces."
            },
            "workspaceSettings": {
                "type": "object",
                "properties": {
                    "commentsAllowed": {
                        "description": "When **true,** commenting on the documents in the workspace is allowed.",
                        "type": "string"
                    }
                },
                "description": "This object provides information about the settings for the workspace.",
                "x-ds-definition-name": "workspaceSettings",
                "x-ms-summary": "This object provides information about the settings for the workspace."
            },
            "workspaceUser": {
                "description": "This object represents the workspace user. This property is only returned in response to user specific GET call. ",
                "type": "object",
                "properties": {
                    "accountId": {
                        "description": "The account ID associated with the workspace user.",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "The name of the account that the workspace user belongs to.",
                        "type": "string"
                    },
                    "activeSince": {
                        "description": "The UTC DateTime when the user joined the workspace.",
                        "type": "string"
                    },
                    "created": {
                        "description": "The UTC DateTime when the workspace user was created.",
                        "type": "string"
                    },
                    "createdById": {
                        "description": "The ID of the user who created this workspace user.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The workspace user's email address.",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "invitationEmailBlurb": {
                        "description": "The text of the workspace invitation email message sent to the user.",
                        "type": "string"
                    },
                    "invitationEmailSubject": {
                        "description": "The subject line of the workspace invitation email message sent to the user.",
                        "type": "string"
                    },
                    "lastModified": {
                        "description": "The UTC DateTime that the workspace user was last modified.",
                        "type": "string"
                    },
                    "lastModifiedById": {
                        "description": "The ID of the user who last modified the workspace user.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Filters the results by user status.\nYou can specify a comma-separated\nlist of the following statuses:\n\n* ActivationRequired \n* ActivationSent \n* Active\n* Closed \n* Disabled",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the user. Valid values: type_owner, type_participant.",
                        "type": "string"
                    },
                    "userId": {
                        "description": "The ID of the workspace user.",
                        "type": "string"
                    },
                    "userName": {
                        "description": "The name of workspace user.",
                        "type": "string"
                    },
                    "workspaceId": {
                        "description": "The ID of the workspace.",
                        "type": "string"
                    },
                    "workspaceUserBaseUrl": {
                        "description": "The URL for accessing the workspace user.",
                        "type": "string"
                    },
                    "workspaceUserId": {
                        "description": "The ID of the workspace user.",
                        "type": "string"
                    },
                    "workspaceUserUri": {
                        "description": "The URI for accessing the workspace user.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "workspaceUser",
                "x-ms-summary": "This object represents the workspace user. This property is only returned in response to user specific GET call. "
            },
            "workspaceUserAuthorization": {
                "description": "Provides properties that describe user authorization to a workspace.",
                "type": "object",
                "properties": {
                    "canDelete": {
                        "description": "When **true,** the workspace user can delete items from the workspace.",
                        "type": "string"
                    },
                    "canMove": {
                        "description": "When **true,** the workspace user can move the items in the workspace.",
                        "type": "string"
                    },
                    "canTransact": {
                        "description": "When **true,** the workspace user can create transactions from the workspace.",
                        "type": "string"
                    },
                    "canView": {
                        "description": "When **true,** the workspace user can view the items in the workspace.",
                        "type": "string"
                    },
                    "created": {
                        "description": "The UTC DateTime when the workspace user authorization was created.",
                        "type": "string"
                    },
                    "createdById": {
                        "description": "The ID of the user who created the workspace user authorization. ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "modified": {
                        "description": "The UTC DateTime when the workspace user authorization was last modified.",
                        "type": "string"
                    },
                    "modifiedById": {
                        "description": "The ID of the user who last modified the workspace user authorization.",
                        "type": "string"
                    },
                    "workspaceUserId": {
                        "description": "The ID of the workspace user.",
                        "type": "string"
                    },
                    "workspaceUserInformation": {
                        "$ref": "#/components/schemas/workspaceUser"
                    }
                },
                "x-ds-definition-name": "workspaceUserAuthorization",
                "x-ms-summary": "Provides properties that describe user authorization to a workspace."
            },
            "zip": {
                "type": "object",
                "properties": {
                    "anchorAllowWhiteSpaceInCharacters": {
                        "description": "When **true,** the text string in the document may have extra whitespace and still match the anchor string. This occurs in two cases.\n\nFirst, it matches if the document string has a single extra whitespace character following a non-whitespace character in the anchor string. For example, if the anchor string is `DocuSign`, then `Docu Sign` will match. However, <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will not match.\n\nSecond, it matches if the document string has one or more extra whitespace characters following a whitespace character in the anchor string. For example, if the anchor string is `Docu Sign`, then <code>Docu&nbsp;&nbsp;&nbsp;Sign</code> will match.\n\nThe default value is **true.**\n",
                        "type": "string"
                    },
                    "anchorAllowWhiteSpaceInCharactersMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorCaseSensitiveMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorHorizontalAlignmentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorMatchWholeWordMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorString": {
                        "description": "Specifies the string to find in the document and use as the basis for tab placement.",
                        "type": "string"
                    },
                    "anchorStringMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorTabProcessorVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "anchorTabProcessorVersionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorUnitsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorXOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffsetMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "boldMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "caption": {
                        "description": "",
                        "type": "string"
                    },
                    "captionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "concealValueOnDocumentMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentLabel": {
                        "description": "For conditional fields this is the `tabLabel` of the parent tab that controls this tab's visibility.",
                        "type": "string"
                    },
                    "conditionalParentLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "conditionalParentValue": {
                        "description": "For conditional fields, this is the value of the parent tab that controls the tab's visibility.\n\nIf the parent tab is a Checkbox, Radio button, Optional Signature, or Optional Initial use \"on\" as the value to show that the parent tab is active.\n",
                        "type": "string"
                    },
                    "conditionalParentValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "customTabId": {
                        "description": "The DocuSign generated custom tab ID for the custom tab to be applied. This can only be used when adding new tabs for a recipient. When used, the new tab inherits all the custom tab properties.",
                        "type": "string"
                    },
                    "customTabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "disableAutoSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "documentId": {
                        "description": "Specifies the document ID number that the tab is placed on. This must refer to an existing Document's ID attribute.",
                        "type": "string"
                    },
                    "documentIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontColorMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "fontSizeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formOrder": {
                        "description": "An integer specifying the order in which the guided form HTML should render. The order is relative to the `formPageLabel`, the group by which to place the guided form HTML block.",
                        "type": "string"
                    },
                    "formOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageLabel": {
                        "description": "A string specifying the group in which to place the guided form HTML. Each group displays as a separate guided forms page in the signing experience.",
                        "type": "string"
                    },
                    "formPageLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "formPageNumber": {
                        "description": "An integer specifying the order in which to present the guided form pages.",
                        "type": "string"
                    },
                    "formPageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "heightMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "italicMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "lockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "maxLength": {
                        "description": "An optional value that describes the maximum length of the property when the property is a string.",
                        "type": "string"
                    },
                    "maxLengthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "mergeFieldXml": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the tab. For example, `Sign Here` or `Initial Here`.\n\nIf the `tooltip` attribute is not set, this value will be displayed as the custom tooltip text.",
                        "type": "string"
                    },
                    "nameMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "originalValue": {
                        "description": "The initial value of the tab. ",
                        "type": "string"
                    },
                    "originalValueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "pageNumber": {
                        "description": "The page number on which the tab is located. For supplemental documents, this value must be `1`.",
                        "type": "string"
                    },
                    "pageNumberMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientId": {
                        "description": "A local reference used to map\nrecipients to other objects, such as specific\ndocument tabs.\n\nA `recipientId` must be\neither an integer or a GUID,\nand the `recipientId` must be\nunique within an envelope.\n\nFor example, many envelopes assign the first recipient\na `recipientId` of `1`.\n",
                        "type": "string"
                    },
                    "recipientIdGuid": {
                        "description": "The globally-unique identifier (GUID) for a specific recipient on a specific envelope. If the same recipient is associated with multiple envelopes, they will have a different GUID for each one. This property is read-only.",
                        "type": "string"
                    },
                    "recipientIdGuidMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "recipientIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "requireAllMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChangeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "senderRequired": {
                        "description": "When **true,** the sender must populate the tab before an envelope can be sent using the template. \n\nThis value tab can only be changed by modifying (PUT) the template. \n\nTabs with a `senderRequired` value of true cannot be deleted from an envelope.",
                        "type": "string"
                    },
                    "senderRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "sharedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "shareToRecipients": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "shareToRecipientsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "smartContractInformation": {
                        "$ref": "#/components/schemas/smartContractInformation"
                    },
                    "source": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The status of the tab. Possible values are:\n\n- `active`: The tab is active, but the recipient has not yet interacted with it.\n- `signed`: The recipient signed the tab.\n- `declined`: The recipient declined the envelope.\n- `na`: Used when the `status` property is not applicable to the tab type. (For example, a tab that has the `tabType` `SignerAttachmentOptional`).\n",
                        "type": "string"
                    },
                    "statusMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabGroupLabels": {
                        "description": "An array of tab groups that this tab belongs to. Tab groups are identified by their `groupLabel` property.\n\nTo associate this tab with a tab group, add the tab group's `groupLabel` to this array.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tabGroupLabelsMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabId": {
                        "description": "The unique identifier for the tab.",
                        "type": "string"
                    },
                    "tabIdMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "tabLabelMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabOrder": {
                        "description": "A positive integer that sets the order the tab is navigated to during signing.\n\nTabs on a page are navigated to in ascending order, starting with the lowest number and moving to the highest. If two or more tabs have the same `tabOrder` value, the normal auto-navigation setting behavior for the envelope is used.",
                        "type": "string"
                    },
                    "tabOrderMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabType": {
                        "description": "Indicates the type of tab (for example, `signHere` or `initialHere`).",
                        "type": "string"
                    },
                    "tabTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateLocked": {
                        "description": "When **true,** the sender cannot change any attributes of the recipient. Used only when working with template recipients. ",
                        "type": "string"
                    },
                    "templateLockedMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "templateRequired": {
                        "description": "When **true,** the sender may not remove the recipient. Used only when working with template recipients.",
                        "type": "string"
                    },
                    "templateRequiredMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tooltip": {
                        "description": "The text of a tooltip that appears when a user hovers over a form field or tab.\n",
                        "type": "string"
                    },
                    "toolTipMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "underlineMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "useDash4": {
                        "description": "When **true,** ZIP+4 format is used.",
                        "type": "string"
                    },
                    "useDash4Metadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationMessageMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "validationPattern": {
                        "description": "A regular expression used to validate input for the tab.",
                        "type": "string"
                    },
                    "validationPatternMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "value": {
                        "description": "Specifies the value of the tab. ",
                        "type": "string"
                    },
                    "valueMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "widthMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "xPosition": {
                        "description": "This property indicates the horizontal offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "xPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "yPosition": {
                        "description": "This property indicates the vertical offset of the object on the page.\nDocuSign uses 72 DPI when determining position.\nRequired. Must be an integer. May be zero.\n\nTo improve the tab's position on the document,\nDocuSign recommends\nadjusting `xPosition`\nand `yPosition`\ncoordinates\nby (-3, -2)\n",
                        "type": "string"
                    },
                    "yPositionMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    }
                },
                "description": "A tab that allows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n",
                "x-ds-definition-name": "zip",
                "x-ms-summary": "A tab that allows the recipient to enter a ZIP code. The ZIP\ncode can be five digits or nine digits in the ZIP+4 format.\nThe zip code can be typed with or without dashes. It uses\nthe same parameters as a Text tab, with the validation\nmessage and pattern set for ZIP code information.\n"
            },
            "AccountBrands": {
                "type": "object",
                "properties": {
                    "brands": {
                        "description": "A list of brands.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/brand"
                        }
                    },
                    "recipientBrandIdDefault": {
                        "description": "The brand that envelope recipients see when a brand is not explicitly set.",
                        "type": "string"
                    },
                    "senderBrandIdDefault": {
                        "description": "The brand that envelope senders see when a brand is not explicitly set.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "brandsResponse",
                "description": "The AccountBrands resource enables you to use account-level brands to customize the styles and text that recipients see.",
                "x-ds-category": "Accounts",
                "x-ds-order": "10",
                "x-ms-summary": "The AccountBrands resource enables you to use account-level brands to customize the styles and text that recipients see."
            },
            "AccountConsumerDisclosures": {
                "type": "object",
                "properties": {
                    "accountEsignId": {
                        "description": "The GUID of the account associated with the consumer disclosure.",
                        "type": "string"
                    },
                    "allowCDWithdraw": {
                        "description": "When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.**\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowCDWithdrawMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "changeEmail": {
                        "description": "If the customer needs to change their email address, this is the email address to which they should the change request.\n\nMaximum length: 100 characters.",
                        "type": "string"
                    },
                    "changeEmailOther": {
                        "description": "Other information about the requirements for the user to change their email address.\n\nMaximum length: 255 characters.\n\nExample: \n\n`We do not require any other information from you to change your email address.`",
                        "type": "string"
                    },
                    "companyName": {
                        "description": "Specifies the company name used in the disclosure. The default value is the account name.\n\nHowever, if your account uses signing brands that specify a company name, you can substitute the brand's company name by setting the `useBrand` property to **true.** Whenever an envelope is sent from the account that uses a signing brand with a specified `companyName`, that value is used in email notifications and in the signing experience.\n\n**Note:** This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. You must also set the value of the `useBrand` property to **true.**",
                        "type": "string"
                    },
                    "companyPhone": {
                        "description": "The phone number of the company associated with the consumer disclosure, as a free-formatted string.",
                        "type": "string"
                    },
                    "copyCostPerPage": {
                        "description": "The cost per page if the customer requests paper copies.\n\nExample: \n\n`0.0000`",
                        "type": "string"
                    },
                    "copyFeeCollectionMethod": {
                        "description": "Specifies the fee collection method for cases in which the customer requires paper copies of the document.\n\nMaximum length: 255 characters.\n\nExample: \n\n`We will bill you for any fees at that time, if any.`",
                        "type": "string"
                    },
                    "copyRequestEmail": {
                        "description": "The email address to which the customer should send a request for copies of a document.\n\nMaximum length: 100 characters.",
                        "type": "string"
                    },
                    "custom": {
                        "description": "When **true,** indicates that the consumer disclosure is a custom disclosure. The default is **false.**",
                        "type": "string"
                    },
                    "enableEsign": {
                        "description": "When **true** (default), indicates that eSign is enabled.",
                        "type": "string"
                    },
                    "esignAgreement": {
                        "description": "The final, assembled text of the Electronic Record and Signature Disclosure that includes the appropriate `companyName` and other specifics. It also includes the HTML tags used for formatting.",
                        "type": "string"
                    },
                    "esignText": {
                        "description": "The template for the Electronic Record and Signature Disclosure, which contains placeholders for information such as the `companyName`. It also includes the HTML tags used for formatting.\n\n**Note:** If you are switching to or updating a custom disclosure, you can edit both the text and the HTML formatting.",
                        "type": "string"
                    },
                    "languageCode": {
                        "description": "The code for the language version of the disclosure. The following languages are supported:\n\n- Arabic (`ar`)\n- Bulgarian (`bg`)\n- Czech (`cs`)\n- Chinese Simplified (`zh_CN`)\n- Chinese Traditional (`zh_TW`)\n- Croatian (`hr`)\n- Danish (`da`)\n- Dutch (`nl`)\n- English US (`en`)\n- English UK (`en_GB`)\n- Estonian (`et`)\n- Farsi (`fa`)\n- Finnish (`fi`)\n- French (`fr`)\n- French Canadian (`fr_CA`)\n- German (`de`)\n- Greek (`el`)\n- Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Bahasa Indonesian (`id`)\n- Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n- Latvian (`lv`)\n- Lithuanian (`lt`)\n- Bahasa Melayu (`ms`)\n- Norwegian (`no`)\n- Polish (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brazil (`pt_BR`)\n- Romanian (`ro`)\n- Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n- Slovenian (`sl`)\n- Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n- Swedish (`sv`)\n- Thai (`th`)\n- Turkish (`tr`)\n- Ukrainian (`uk`) \n- Vietnamese (`vi`)\n\nAdditionally, you can automatically detect the browser language being used by the viewer and display the disclosure in that language by setting the value to `browser`.",
                        "type": "string"
                    },
                    "mustAgreeToEsign": {
                        "description": "When **true,** the  recipient must agree to the consumer disclosure. The value of this property is read-only. It is calculated based on the account setting `consumerDisclosureFrequency` and the user's actions.",
                        "type": "string"
                    },
                    "pdfId": {
                        "description": "**Deprecated.** \n\nThe `pdfId` property in the consumer_disclosure PUT request is deprecated. For security reasons going forward, any value provided in the request packet must be ignored. ",
                        "type": "string"
                    },
                    "useBrand": {
                        "description": "When **true,** specifies that the company name in the signing brand is used for the disclosure. Whenever an envelope is sent from the account that uses a signing brand with a specified company name, that value is used in email notifications and in the signing experience.  \n\nWhen **false** (default), or if the signing brand does not specify a company name, the account name is used instead.\n\n**Note:** This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. ",
                        "type": "string"
                    },
                    "useConsumerDisclosureWithinAccount": {
                        "description": "When **true,** specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.",
                        "type": "string"
                    },
                    "useConsumerDisclosureWithinAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "withdrawAddressLine1": {
                        "description": "Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "withdrawAddressLine2": {
                        "description": "Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "withdrawByEmail": {
                        "description": "When **true** (default), indicates that the customer can withdraw consent by email.",
                        "type": "string"
                    },
                    "withdrawByMail": {
                        "description": "When **true,** indicates that the customer can withdraw consent by postal mail. The default is **false.**",
                        "type": "string"
                    },
                    "withdrawByPhone": {
                        "description": "When **true,** indicates that the customer can withdraw consent by phone. The default is **false.**",
                        "type": "string"
                    },
                    "withdrawCity": {
                        "description": "Contains the city of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 50 characters. ",
                        "type": "string"
                    },
                    "withdrawConsequences": {
                        "description": "Text indicating the consequences of withdrawing consent.\n\nMaximum length: 255 characters.",
                        "type": "string"
                    },
                    "withdrawEmail": {
                        "description": "Contains the email address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "withdrawOther": {
                        "description": "Contains any other information needed to withdraw consent.\n\nMaximum length: 255 characters.\n\nExample:\n\n`We do not need any other information from you to withdraw consent.`",
                        "type": "string"
                    },
                    "withdrawPhone": {
                        "description": "Contains the phone number that a customer can call to register consent withdrawal notification as a free-formatted string.\n\nMaximum length: 20 characters. ",
                        "type": "string"
                    },
                    "withdrawPostalCode": {
                        "description": "Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 20 characters. ",
                        "type": "string"
                    },
                    "withdrawState": {
                        "description": "Contains the state of the postal address to which a customer can send a consent withdrawal notification.\n\nExample: `PA`",
                        "type": "string"
                    }
                },
                "description": "Details about account consumer disclosures.",
                "x-ds-definition-name": "consumerDisclosure",
                "x-ds-category": "Accounts",
                "x-ds-order": "20",
                "x-ms-summary": "Details about account consumer disclosures."
            },
            "AccountCustomFields": {
                "description": "An `accountCustomField` is an envelope custom field that you set at the account level.\nApplying custom fields enables account administrators to group and manage envelopes.\n",
                "type": "object",
                "properties": {
                    "listCustomFields": {
                        "description": "An array of list custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listCustomField"
                        }
                    },
                    "textCustomFields": {
                        "description": "An array of text custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/textCustomField"
                        }
                    }
                },
                "x-ds-definition-name": "customFields",
                "x-ds-category": "Accounts",
                "x-ds-order": "30",
                "x-ms-summary": "An `accountCustomField` is an envelope custom field that you set at the account level.\nApplying custom fields enables account administrators to group and manage envelopes.\n"
            },
            "EnvelopeCustomFields": {
                "description": "An envelope custom field enables you to collect custom data about envelopes on a per-envelope basis. You can then use the custom data for sorting, organizing, searching, and other downstream processes. For example, you can use custom fields to copy envelopes or data to multiple areas in Salesforce. eOriginal customers can eVault their documents from the web app on a per-envelope basis by setting an envelope custom field with a name like \"eVault with eOriginal?\" to \"Yes\" or \"No\".\n\nWhen a user creates an envelope, the envelope custom fields display in the **Envelope Settings** section of the DocuSign console. Envelope recipients do not see the envelope custom fields. For more information, see [Envelope Custom Fields](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=qor1583277385137.html).",
                "type": "object",
                "properties": {
                    "listCustomFields": {
                        "description": "An array of list custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listCustomField"
                        }
                    },
                    "textCustomFields": {
                        "description": "An array of text custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/textCustomField"
                        }
                    }
                },
                "x-ds-definition-name": "customFields",
                "x-ds-category": "Envelopes",
                "x-ds-order": "70",
                "x-ms-summary": "An envelope custom field enables you to collect custom data about envelopes on a per-envelope basis. You can then use the custom data for sorting, organizing, searching, and other downstream processes. For example, you can use custom fields to copy envelopes or data to multiple areas in Salesforce. eOriginal customers can eVault their documents from the web app on a per-envelope basis by setting an envelope custom field with a name like \"eVault with eOriginal?\" to \"Yes\" or \"No\".\n\nWhen a user creates an envelope, the envelope custom fields display in the **Envelope Settings** section of the DocuSign console. Envelope recipients do not see the envelope custom fields. For more information, see [Envelope Custom Fields](https://support.docusign.com/s/document-item?bundleId=pik1583277475390&topicId=qor1583277385137.html)."
            },
            "EnvelopeDocumentFields": {
                "type": "object",
                "properties": {
                    "documentFields": {
                        "description": "The array of name/value custom data strings to be added to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the elements: \n\n* name - A string that can be a maximum of 50 characters. \n* value - A string that can be a maximum of 200 characters.\n\n*IMPORTANT*: If you are using xml, the name/value pair is contained in a nameValue element. \n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    }
                },
                "x-ds-definition-name": "documentFieldsInformation",
                "description": "Envelope document fields",
                "x-ds-category": "Envelopes",
                "x-ds-order": "60",
                "x-ms-summary": "Envelope document fields"
            },
            "EnvelopeLocks": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "lockDurationInSeconds": {
                        "description": "\nThe number of seconds until the lock expires when there is no activity on the envelope.\n\nThe default value is 300 seconds. The maximum value is 1,800 seconds.\n\nThe lock duration can be extended.\n",
                        "type": "string"
                    },
                    "lockedByApp": {
                        "description": "The human-readable name of the application that is locking the envelope or template. This value displays to the user in error messages when lock conflicts occur.",
                        "type": "string"
                    },
                    "lockedByUser": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "lockedUntilDateTime": {
                        "description": "The date and time that the lock expires.",
                        "type": "string"
                    },
                    "lockToken": {
                        "description": "A unique identifier provided to the owner of the lock. You must use this token with subsequent calls to prove ownership of the lock.",
                        "type": "string"
                    },
                    "lockType": {
                        "description": "The type of lock.  Currently `edit` is the only supported type.",
                        "type": "string"
                    },
                    "useScratchPad": {
                        "description": "When **true,** a scratchpad is used to edit information.\n ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "lockInformation",
                "description": "Envelope locks let you lock an envelope to prevent any changes while you are updating an envelope.\n",
                "x-ds-category": "Envelopes",
                "x-ds-order": "80",
                "x-ms-summary": "Envelope locks let you lock an envelope to prevent any changes while you are updating an envelope.\n"
            },
            "EnvelopeRecipients": {
                "description": "Envelope recipients",
                "type": "object",
                "properties": {
                    "agents": {
                        "description": "A list of agent recipients assigned to the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/agent"
                        }
                    },
                    "carbonCopies": {
                        "description": "A list of carbon copy recipients assigned to the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/carbonCopy"
                        }
                    },
                    "certifiedDeliveries": {
                        "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/certifiedDelivery"
                        }
                    },
                    "currentRoutingOrder": {
                        "description": "The routing order of the current recipient. If this value equals a particular signer's routing order, it indicates that the envelope has been sent to that recipient, but he or she has not completed the required actions.",
                        "type": "string"
                    },
                    "editors": {
                        "description": "A list of users who can edit the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/editor"
                        }
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "inPersonSigners": {
                        "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/inPersonSigner"
                        }
                    },
                    "intermediaries": {
                        "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/intermediary"
                        }
                    },
                    "notaries": {
                        "description": "A list of notary recipients on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notaryRecipient"
                        }
                    },
                    "participants": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/participant"
                        }
                    },
                    "recipientCount": {
                        "description": "The number of recipients in the envelope.",
                        "type": "string"
                    },
                    "seals": {
                        "description": "A list of electronic seals to apply to documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/sealSign"
                        }
                    },
                    "signers": {
                        "description": "A list of signers on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signer"
                        }
                    },
                    "witnesses": {
                        "description": "A list of signers who act as witnesses on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/witness"
                        }
                    }
                },
                "x-ds-definition-name": "recipients",
                "x-ds-category": "Envelopes",
                "x-ds-order": "20",
                "x-ms-summary": "Envelope recipients"
            },
            "EnvelopeRecipientTabs": {
                "type": "object",
                "properties": {
                    "approveTabs": {
                        "description": "A list of\n[Approve tabs][approve].\n\nAn Approve tab enables\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\nThe value of an approve tab can't be set.\n\n[approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/approve"
                        }
                    },
                    "checkboxTabs": {
                        "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/checkbox"
                        }
                    },
                    "commentThreadTabs": {
                        "description": "An array of tabs that represents a collection of comments in a comment thread. For example, if a recipient has questions about the content of a document, they can add a comment to the document and control who else can see the comment. This value can't be set.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commentThread"
                        }
                    },
                    "commissionCountyTabs": {
                        "description": "A list of\n[Commission County tabs][cc].\n\n\nA Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionCounty"
                        }
                    },
                    "commissionExpirationTabs": {
                        "description": "A list of\n[Commission Expiration tabs][tabref].\n\n\nA Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionExpiration"
                        }
                    },
                    "commissionNumberTabs": {
                        "description": "A list of\n[Commission Number tabs][tabref].\n\n\nA Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionNumber"
                        }
                    },
                    "commissionStateTabs": {
                        "description": "A list of\n[Commission State tabs][cc].\n\n\nA Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionState"
                        }
                    },
                    "companyTabs": {
                        "description": "A list of\n[Company tabs][company].\n\nA Company tab displays a field for the name of the recipient's company. This value can't be set.\n\n[company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company"
                        }
                    },
                    "dateSignedTabs": {
                        "description": "A list of\n[Date Signed tabs][dateSigned].\n\n\nA Date Signed tab displays the date that the recipient signed the document. This value can't be set.\n\n[dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/dateSigned"
                        }
                    },
                    "dateTabs": {
                        "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/date"
                        }
                    },
                    "declineTabs": {
                        "description": "A list of\n[Decline tabs][decline].\n\nA Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.\n\n\n[decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/decline"
                        }
                    },
                    "drawTabs": {
                        "description": "A list of Draw Tabs.\n\nA Draw Tab allows the recipient to add a free-form drawing to the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/draw"
                        }
                    },
                    "emailAddressTabs": {
                        "description": "A list of\n[Email Address tabs][emailAddress].\n\nAn Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.\n\n\n[emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailAddress"
                        }
                    },
                    "emailTabs": {
                        "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/email"
                        }
                    },
                    "envelopeIdTabs": {
                        "description": "A list of\n[Envelope ID tabs][envelopeId].\n\nAn Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.\n\n\n[envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeId"
                        }
                    },
                    "firstNameTabs": {
                        "description": "A list of\n[First Name tabs][firstName].\n\nA First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/firstName"
                        }
                    },
                    "formulaTabs": {
                        "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.\n\nThe `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].\n\nIf a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n[formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/formulaTab"
                        }
                    },
                    "fullNameTabs": {
                        "description": "A list of\n[Full Name tabs][fullName].\n\nA Full Name tab displays the recipient's full name. This value can't be set.\n\n\n[fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/fullName"
                        }
                    },
                    "initialHereTabs": {
                        "description": "A list of\n[Initial Here tabs][initialHere].\n\nThis type of tab enables the recipient to initial the document. May be optional. This value can't be set.\n\n[initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/initialHere"
                        }
                    },
                    "lastNameTabs": {
                        "description": "A list of\n[Last Name tabs][lastName].\n\nA Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/lastName"
                        }
                    },
                    "listTabs": {
                        "description": "An array of List tabs.\n\nA List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/list"
                        }
                    },
                    "notarizeTabs": {
                        "description": "A list of  [Notarize tabs][notarize].\n\nA Notarize tab alerts notary recipients that they must take action on the page. This value can be set.\n\n**Note:** Only one notarize tab can appear on a page.\n\n[notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarize"
                        }
                    },
                    "notarySealTabs": {
                        "description": "A list of Notary Seal tabs.\n\nA Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarySeal"
                        }
                    },
                    "noteTabs": {
                        "description": "A list of\n[Note tabs][note].\n\nA Note tab displays additional information to the recipient in the form of a note. This value can be set.\n\n[note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/note"
                        }
                    },
                    "numberTabs": {
                        "description": "A list of Number tabs.\n\nNumber tabs validate that the entered value is a number.\nThey do not support advanced validation or display options.\n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about number tabs\nsee [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/number"
                        }
                    },
                    "numericalTabs": {
                        "description": "A list of numerical tabs.\n\nNumerical  tabs provide robust display and validation features, including formatting for different regions and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about numerical tabs\nsee [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/numerical"
                        }
                    },
                    "phoneNumberTabs": {
                        "description": "A list of\n[Phone Number tabs][cc].\n\n\nA Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/phoneNumber"
                        }
                    },
                    "polyLineOverlayTabs": {
                        "description": "This type of tab enables the recipient to strike through document text. This value can't be set
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/polyLineOverlay"
                        }
                    },
                    "prefillTabs": {
                        "$ref": "#/components/schemas/prefillTabs"
                    },
                    "radioGroupTabs": {
                        "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/radioGroup"
                        }
                    },
                    "signerAttachmentTabs": {
                        "description": "A list of\n[Signer Attachment tabs][signerAttachment].\n\nThis type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.\n\n\n[signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signerAttachment"
                        }
                    },
                    "signHereTabs": {
                        "description": "A list of\n[Sign Here tabs][signHere].\n\nThis type of tab enables the recipient to sign a document. May be optional. This value can't be set.\n\n[signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signHere"
                        }
                    },
                    "smartSectionTabs": {
                        "description": "A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.\n\nSmart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.\n\n**Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/smartSection"
                        }
                    },
                    "ssnTabs": {
                        "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ssn"
                        }
                    },
                    "tabGroups": {
                        "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tabGroup"
                        }
                    },
                    "textTabs": {
                        "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/text"
                        }
                    },
                    "titleTabs": {
                        "description": "A list of\n[Title tabs][title].\n\nA Title tab displays the recipient's title.  This value can't be set.\n\n\n[title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/title"
                        }
                    },
                    "viewTabs": {
                        "description": "A list of\n[View tabs][view].\n\nA View tab is used with an Approve tab to handle supplemental documents.  This value can be set.\n\n[view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/view"
                        }
                    },
                    "zipTabs": {
                        "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/zip"
                        }
                    }
                },
                "description": "All of the tabs associated with a recipient. Each property is a list of a type of tab.\n",
                "x-ds-definition-name": "tabs",
                "x-ds-category": "Envelopes",
                "x-ds-order": "50",
                "x-ms-summary": "All of the tabs associated with a recipient. Each property is a list of a type of tab.\n"
            },
            "EnvelopeDocumentTabs": {
                "type": "object",
                "properties": {
                    "approveTabs": {
                        "description": "A list of\n[Approve tabs][approve].\n\nAn Approve tab enables\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\nThe value of an approve tab can't be set.\n\n[approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/approve"
                        }
                    },
                    "checkboxTabs": {
                        "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/checkbox"
                        }
                    },
                    "commentThreadTabs": {
                        "description": "An array of tabs that represents a collection of comments in a comment thread. For example, if a recipient has questions about the content of a document, they can add a comment to the document and control who else can see the comment. This value can't be set.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commentThread"
                        }
                    },
                    "commissionCountyTabs": {
                        "description": "A list of\n[Commission County tabs][cc].\n\n\nA Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionCounty"
                        }
                    },
                    "commissionExpirationTabs": {
                        "description": "A list of\n[Commission Expiration tabs][tabref].\n\n\nA Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionExpiration"
                        }
                    },
                    "commissionNumberTabs": {
                        "description": "A list of\n[Commission Number tabs][tabref].\n\n\nA Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionNumber"
                        }
                    },
                    "commissionStateTabs": {
                        "description": "A list of\n[Commission State tabs][cc].\n\n\nA Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionState"
                        }
                    },
                    "companyTabs": {
                        "description": "A list of\n[Company tabs][company].\n\nA Company tab displays a field for the name of the recipient's company. This value can't be set.\n\n[company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company"
                        }
                    },
                    "dateSignedTabs": {
                        "description": "A list of\n[Date Signed tabs][dateSigned].\n\n\nA Date Signed tab displays the date that the recipient signed the document. This value can't be set.\n\n[dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/dateSigned"
                        }
                    },
                    "dateTabs": {
                        "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/date"
                        }
                    },
                    "declineTabs": {
                        "description": "A list of\n[Decline tabs][decline].\n\nA Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.\n\n\n[decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/decline"
                        }
                    },
                    "drawTabs": {
                        "description": "A list of Draw Tabs.\n\nA Draw Tab allows the recipient to add a free-form drawing to the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/draw"
                        }
                    },
                    "emailAddressTabs": {
                        "description": "A list of\n[Email Address tabs][emailAddress].\n\nAn Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.\n\n\n[emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailAddress"
                        }
                    },
                    "emailTabs": {
                        "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/email"
                        }
                    },
                    "envelopeIdTabs": {
                        "description": "A list of\n[Envelope ID tabs][envelopeId].\n\nAn Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.\n\n\n[envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeId"
                        }
                    },
                    "firstNameTabs": {
                        "description": "A list of\n[First Name tabs][firstName].\n\nA First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/firstName"
                        }
                    },
                    "formulaTabs": {
                        "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.\n\nThe `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].\n\nIf a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n[formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/formulaTab"
                        }
                    },
                    "fullNameTabs": {
                        "description": "A list of\n[Full Name tabs][fullName].\n\nA Full Name tab displays the recipient's full name. This value can't be set.\n\n\n[fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/fullName"
                        }
                    },
                    "initialHereTabs": {
                        "description": "A list of\n[Initial Here tabs][initialHere].\n\nThis type of tab enables the recipient to initial the document. May be optional. This value can't be set.\n\n[initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/initialHere"
                        }
                    },
                    "lastNameTabs": {
                        "description": "A list of\n[Last Name tabs][lastName].\n\nA Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/lastName"
                        }
                    },
                    "listTabs": {
                        "description": "An array of List tabs.\n\nA List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/list"
                        }
                    },
                    "notarizeTabs": {
                        "description": "A list of  [Notarize tabs][notarize].\n\nA Notarize tab alerts notary recipients that they must take action on the page. This value can be set.\n\n**Note:** Only one notarize tab can appear on a page.\n\n[notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarize"
                        }
                    },
                    "notarySealTabs": {
                        "description": "A list of Notary Seal tabs.\n\nA Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarySeal"
                        }
                    },
                    "noteTabs": {
                        "description": "A list of\n[Note tabs][note].\n\nA Note tab displays additional information to the recipient in the form of a note. This value can be set.\n\n[note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/note"
                        }
                    },
                    "numberTabs": {
                        "description": "A list of Number tabs.\n\nNumber tabs validate that the entered value is a number.\nThey do not support advanced validation or display options.\n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about number tabs\nsee [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/number"
                        }
                    },
                    "numericalTabs": {
                        "description": "A list of numerical tabs.\n\nNumerical  tabs provide robust display and validation features, including formatting for different regions and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about numerical tabs\nsee [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/numerical"
                        }
                    },
                    "phoneNumberTabs": {
                        "description": "A list of\n[Phone Number tabs][cc].\n\n\nA Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/phoneNumber"
                        }
                    },
                    "polyLineOverlayTabs": {
                        "description": "This type of tab enables the recipient to strike through document text. This value can't be set
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/polyLineOverlay"
                        }
                    },
                    "prefillTabs": {
                        "$ref": "#/components/schemas/prefillTabs"
                    },
                    "radioGroupTabs": {
                        "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/radioGroup"
                        }
                    },
                    "signerAttachmentTabs": {
                        "description": "A list of\n[Signer Attachment tabs][signerAttachment].\n\nThis type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.\n\n\n[signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signerAttachment"
                        }
                    },
                    "signHereTabs": {
                        "description": "A list of\n[Sign Here tabs][signHere].\n\nThis type of tab enables the recipient to sign a document. May be optional. This value can't be set.\n\n[signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signHere"
                        }
                    },
                    "smartSectionTabs": {
                        "description": "A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.\n\nSmart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.\n\n**Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/smartSection"
                        }
                    },
                    "ssnTabs": {
                        "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ssn"
                        }
                    },
                    "tabGroups": {
                        "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tabGroup"
                        }
                    },
                    "textTabs": {
                        "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/text"
                        }
                    },
                    "titleTabs": {
                        "description": "A list of\n[Title tabs][title].\n\nA Title tab displays the recipient's title.  This value can't be set.\n\n\n[title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/title"
                        }
                    },
                    "viewTabs": {
                        "description": "A list of\n[View tabs][view].\n\nA View tab is used with an Approve tab to handle supplemental documents.  This value can be set.\n\n[view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/view"
                        }
                    },
                    "zipTabs": {
                        "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/zip"
                        }
                    }
                },
                "description": "Document tabs are tabs that are associated with a document rather than with a recipient.",
                "x-ds-definition-name": "tabs",
                "x-ds-category": "Envelopes",
                "x-ds-order": "50",
                "x-ms-summary": "Document tabs are tabs that are associated with a document rather than with a recipient."
            },
            "TemplateDocumentTabs": {
                "type": "object",
                "properties": {
                    "approveTabs": {
                        "description": "A list of\n[Approve tabs][approve].\n\nAn Approve tab enables\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\nThe value of an approve tab can't be set.\n\n[approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/approve"
                        }
                    },
                    "checkboxTabs": {
                        "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/checkbox"
                        }
                    },
                    "commentThreadTabs": {
                        "description": "An array of tabs that represents a collection of comments in a comment thread. For example, if a recipient has questions about the content of a document, they can add a comment to the document and control who else can see the comment. This value can't be set.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commentThread"
                        }
                    },
                    "commissionCountyTabs": {
                        "description": "A list of\n[Commission County tabs][cc].\n\n\nA Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionCounty"
                        }
                    },
                    "commissionExpirationTabs": {
                        "description": "A list of\n[Commission Expiration tabs][tabref].\n\n\nA Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionExpiration"
                        }
                    },
                    "commissionNumberTabs": {
                        "description": "A list of\n[Commission Number tabs][tabref].\n\n\nA Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionNumber"
                        }
                    },
                    "commissionStateTabs": {
                        "description": "A list of\n[Commission State tabs][cc].\n\n\nA Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionState"
                        }
                    },
                    "companyTabs": {
                        "description": "A list of\n[Company tabs][company].\n\nA Company tab displays a field for the name of the recipient's company. This value can't be set.\n\n[company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company"
                        }
                    },
                    "dateSignedTabs": {
                        "description": "A list of\n[Date Signed tabs][dateSigned].\n\n\nA Date Signed tab displays the date that the recipient signed the document. This value can't be set.\n\n[dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/dateSigned"
                        }
                    },
                    "dateTabs": {
                        "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/date"
                        }
                    },
                    "declineTabs": {
                        "description": "A list of\n[Decline tabs][decline].\n\nA Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.\n\n\n[decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/decline"
                        }
                    },
                    "drawTabs": {
                        "description": "A list of Draw Tabs.\n\nA Draw Tab allows the recipient to add a free-form drawing to the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/draw"
                        }
                    },
                    "emailAddressTabs": {
                        "description": "A list of\n[Email Address tabs][emailAddress].\n\nAn Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.\n\n\n[emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailAddress"
                        }
                    },
                    "emailTabs": {
                        "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/email"
                        }
                    },
                    "envelopeIdTabs": {
                        "description": "A list of\n[Envelope ID tabs][envelopeId].\n\nAn Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.\n\n\n[envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeId"
                        }
                    },
                    "firstNameTabs": {
                        "description": "A list of\n[First Name tabs][firstName].\n\nA First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/firstName"
                        }
                    },
                    "formulaTabs": {
                        "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.\n\nThe `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].\n\nIf a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n[formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/formulaTab"
                        }
                    },
                    "fullNameTabs": {
                        "description": "A list of\n[Full Name tabs][fullName].\n\nA Full Name tab displays the recipient's full name. This value can't be set.\n\n\n[fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/fullName"
                        }
                    },
                    "initialHereTabs": {
                        "description": "A list of\n[Initial Here tabs][initialHere].\n\nThis type of tab enables the recipient to initial the document. May be optional. This value can't be set.\n\n[initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/initialHere"
                        }
                    },
                    "lastNameTabs": {
                        "description": "A list of\n[Last Name tabs][lastName].\n\nA Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/lastName"
                        }
                    },
                    "listTabs": {
                        "description": "An array of List tabs.\n\nA List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/list"
                        }
                    },
                    "notarizeTabs": {
                        "description": "A list of  [Notarize tabs][notarize].\n\nA Notarize tab alerts notary recipients that they must take action on the page. This value can be set.\n\n**Note:** Only one notarize tab can appear on a page.\n\n[notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarize"
                        }
                    },
                    "notarySealTabs": {
                        "description": "A list of Notary Seal tabs.\n\nA Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarySeal"
                        }
                    },
                    "noteTabs": {
                        "description": "A list of\n[Note tabs][note].\n\nA Note tab displays additional information to the recipient in the form of a note. This value can be set.\n\n[note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/note"
                        }
                    },
                    "numberTabs": {
                        "description": "A list of Number tabs.\n\nNumber tabs validate that the entered value is a number.\nThey do not support advanced validation or display options.\n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about number tabs\nsee [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/number"
                        }
                    },
                    "numericalTabs": {
                        "description": "A list of numerical tabs.\n\nNumerical  tabs provide robust display and validation features, including formatting for different regions and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about numerical tabs\nsee [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/numerical"
                        }
                    },
                    "phoneNumberTabs": {
                        "description": "A list of\n[Phone Number tabs][cc].\n\n\nA Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/phoneNumber"
                        }
                    },
                    "polyLineOverlayTabs": {
                        "description": "This type of tab enables the recipient to strike through document text. This value can't be set
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/polyLineOverlay"
                        }
                    },
                    "prefillTabs": {
                        "$ref": "#/components/schemas/prefillTabs"
                    },
                    "radioGroupTabs": {
                        "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/radioGroup"
                        }
                    },
                    "signerAttachmentTabs": {
                        "description": "A list of\n[Signer Attachment tabs][signerAttachment].\n\nThis type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.\n\n\n[signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signerAttachment"
                        }
                    },
                    "signHereTabs": {
                        "description": "A list of\n[Sign Here tabs][signHere].\n\nThis type of tab enables the recipient to sign a document. May be optional. This value can't be set.\n\n[signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signHere"
                        }
                    },
                    "smartSectionTabs": {
                        "description": "A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.\n\nSmart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.\n\n**Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/smartSection"
                        }
                    },
                    "ssnTabs": {
                        "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ssn"
                        }
                    },
                    "tabGroups": {
                        "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tabGroup"
                        }
                    },
                    "textTabs": {
                        "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/text"
                        }
                    },
                    "titleTabs": {
                        "description": "A list of\n[Title tabs][title].\n\nA Title tab displays the recipient's title.  This value can't be set.\n\n\n[title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/title"
                        }
                    },
                    "viewTabs": {
                        "description": "A list of\n[View tabs][view].\n\nA View tab is used with an Approve tab to handle supplemental documents.  This value can be set.\n\n[view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/view"
                        }
                    },
                    "zipTabs": {
                        "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/zip"
                        }
                    }
                },
                "description": "",
                "x-ds-definition-name": "tabs",
                "x-ds-category": "Templates",
                "x-ds-order": "50",
                "x-ms-summary": ""
            },
            "EnvelopeViews": {
                "type": "object",
                "properties": {
                    "url": {
                        "description": "The view URL to be navigated to.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "viewUrl",
                "description": "Provides a URL that you can embed in your application\nto provide access to the DocuSign UI.\n\n### Related topics\n\n- [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)\n- [Send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)\n- [Introducing customizable embedded sending](https://www.docusign.com/blog/developers/introducing-customizable-embedded-sending)\n\n",
                "x-ds-category": "Envelopes",
                "x-ds-order": "1",
                "x-ms-summary": "Provides a URL that you can embed in your application\nto provide access to the DocuSign UI.\n\n### Related topics\n\n- [Embedded signing and sending](/docs/esign-rest-api/esign101/concepts/embedding/)\n- [Send an envelope via your app](/docs/esign-rest-api/how-to/embedded-sending/)\n- [Introducing customizable embedded sending](https://www.docusign.com/blog/developers/introducing-customizable-embedded-sending)\n\n"
            },
            "AccountSealProviders": {
                "type": "object",
                "properties": {
                    "seals": {
                        "description": "A list of electronic seals to apply to documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/sealIdentifier"
                        }
                    }
                },
                "x-ds-definition-name": "accountSeals",
                "description": "",
                "x-ds-category": "Accounts",
                "x-ds-order": "10",
                "x-ms-summary": ""
            },
            "Accounts": {
                "description": "Account management",
                "type": "object",
                "properties": {
                    "accountIdGuid": {
                        "description": "The GUID associated with the account ID.",
                        "type": "string"
                    },
                    "accountName": {
                        "description": "The name on the account.",
                        "type": "string"
                    },
                    "accountSettings": {
                        "$ref": "#/components/schemas/accountSettingsInformation"
                    },
                    "allowTransactionRooms": {
                        "description": "When **true,** the transaction rooms feature exposed through the Workspaces API is enabled.",
                        "type": "string"
                    },
                    "billingPeriodDaysRemaining": {
                        "description": "Number of days remaining in the current billing period.",
                        "type": "string"
                    },
                    "billingPeriodEndDate": {
                        "description": "The billing period end date in UTC timedate format.",
                        "type": "string"
                    },
                    "billingPeriodEnvelopesAllowed": {
                        "description": "The number of envelopes that can be sent in the current billing period (can be unlimited).",
                        "type": "string"
                    },
                    "billingPeriodEnvelopesSent": {
                        "description": "The number of envelopes that have been sent in the current billing period.",
                        "type": "string"
                    },
                    "billingPeriodStartDate": {
                        "description": "The billing period start date in UTC timedate format.",
                        "type": "string"
                    },
                    "billingProfile": {
                        "description": "The type of billing method on the account. Valid values are: \n\n- `direct`\n- `web`",
                        "type": "string"
                    },
                    "brands": {
                        "$ref": "#/components/schemas/AccountBrands"
                    },
                    "canUpgrade": {
                        "description": "When **true,** specifies that you can upgrade the account through the API. For GET methods, you must set the `include_metadata` query parameter to **true** for this property to appear in the response.",
                        "type": "string"
                    },
                    "connectPermission": {
                        "description": "",
                        "type": "string"
                    },
                    "createdDate": {
                        "description": "The creation date of the account in UTC timedate format.",
                        "type": "string"
                    },
                    "currencyCode": {
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code.\n",
                        "type": "string"
                    },
                    "currentPlanId": {
                        "description": "ID of the plan used to create this account.",
                        "type": "string"
                    },
                    "displayApplianceStartUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "displayApplianceUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "distributorCode": {
                        "description": "The code that identifies the billing plan groups and plans for the new account.",
                        "type": "string"
                    },
                    "docuSignLandingUrl": {
                        "description": "URL of the landing page used to create the account.",
                        "type": "string"
                    },
                    "dssValues": {
                        "description": "",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "envelopeSendingBlocked": {
                        "description": "When **true,** the ability to send envelopes is blocked. When **false,** envelopes can be sent.",
                        "type": "string"
                    },
                    "envelopeUnitPrice": {
                        "description": "The price of sending an envelope, represented in the account's local currency.",
                        "type": "string"
                    },
                    "externalAccountId": {
                        "description": "The Account ID displayed on the user's Account page.",
                        "type": "string"
                    },
                    "forgottenPasswordQuestionsCount": {
                        "description": " A complex element that contains up to four Question/Answer pairs for forgotten password information for a user.",
                        "type": "string"
                    },
                    "isDowngrade": {
                        "description": "When **true,** the account has been downgraded from a premium account type. Otherwise **false.**",
                        "type": "string"
                    },
                    "paymentMethod": {
                        "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
                        "type": "string"
                    },
                    "planClassification": {
                        "description": "Identifies the type of plan. Examples include:\n\n- `business`\n- `corporate`\n- `enterprise` \n- `free`",
                        "type": "string"
                    },
                    "planEndDate": {
                        "description": "The date that the current plan will end.",
                        "type": "string"
                    },
                    "planName": {
                        "description": "The name of the billing plan used for the account.\n\nExamples: \n\n- `Personal - Annual`\n- `Unlimited Envelope Subscription - Annual Billing`",
                        "type": "string"
                    },
                    "planStartDate": {
                        "description": "The date that the Account started using the current plan.",
                        "type": "string"
                    },
                    "recipientDomains": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/recipientDomain"
                        }
                    },
                    "seatsAllowed": {
                        "description": "The number of active users the account can have at one time.",
                        "type": "string"
                    },
                    "seatsInUse": {
                        "description": "The number of users currently active on the account.",
                        "type": "string"
                    },
                    "status21CFRPart11": {
                        "description": "The status of the account content per (Title 21 CFR Part 11)[https://www.fda.gov/regulatory-information/search-fda-guidance-documents/part-11-electronic-records-electronic-signatures-scope-and-application]. This regulation defines the criteria under which electronic records and electronic signatures are considered trustworthy.",
                        "type": "string"
                    },
                    "suspensionDate": {
                        "description": "The date on which the account was suspended.",
                        "type": "string"
                    },
                    "suspensionStatus": {
                        "description": "Indicates whether the account is currently suspended.",
                        "type": "string"
                    },
                    "useDisplayAppliance": {
                        "description": "",
                        "type": "boolean"
                    }
                },
                "x-ds-definition-name": "accountInformation",
                "x-ds-category": "Accounts",
                "x-ds-order": "1",
                "x-ms-summary": "Account management"
            },
            "AccountSignatureProviders": {
                "type": "object",
                "properties": {
                    "signatureProviders": {
                        "description": "Names of electronic or digital signature providers that can be used.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/accountSignatureProvider"
                        }
                    }
                },
                "x-ds-definition-name": "accountSignatureProviders",
                "description": "This resource provides information on the Standards Based Signature providers that have been provisioned for an account.\n",
                "x-ds-category": "Accounts",
                "x-ds-order": "30",
                "x-ms-summary": "This resource provides information on the Standards Based Signature providers that have been provisioned for an account.\n"
            },
            "BillingPlans": {
                "description": "Billing plans",
                "type": "object",
                "properties": {
                    "billingAddress": {
                        "$ref": "#/components/schemas/accountAddress"
                    },
                    "billingAddressIsCreditCardAddress": {
                        "description": "When **true,** the credit card address information is the same as that returned as the billing address. If false, then the billing address is considered a billing contact address, and the credit card address can be different.",
                        "type": "string"
                    },
                    "billingPlan": {
                        "$ref": "#/components/schemas/accountBillingPlan"
                    },
                    "creditCardInformation": {
                        "$ref": "#/components/schemas/creditCardInformation"
                    },
                    "directDebitProcessorInformation": {
                        "$ref": "#/components/schemas/directDebitProcessorInformation"
                    },
                    "downgradePlanInformation": {
                        "$ref": "#/components/schemas/downgradePlanUpdateResponse"
                    },
                    "downgradeRequestInformation": {
                        "$ref": "#/components/schemas/downgradeRequestInformation"
                    },
                    "entityInformation": {
                        "$ref": "#/components/schemas/billingEntityInformationResponse"
                    },
                    "paymentMethod": {
                        "description": "The payment method used for the billing plan. Valid values are:\n\n- `NotSupported`\n- `CreditCard`\n- `PurchaseOrder`\n- `Premium`\n- `Freemium`\n- `FreeTrial`\n- `AppStore`\n- `DigitalExternal`\n- `DirectDebit`",
                        "type": "string"
                    },
                    "paymentProcessorInformation": {
                        "$ref": "#/components/schemas/paymentProcessorInformation"
                    },
                    "referralInformation": {
                        "$ref": "#/components/schemas/referralInformation"
                    },
                    "successorPlans": {
                        "description": "A list of billing plans that the current billing plan can be rolled into.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingPlan"
                        }
                    },
                    "taxExemptId": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "accountBillingPlanResponse",
                "x-ds-category": "Billing",
                "x-ds-order": "10",
                "x-ms-summary": "Billing plans"
            },
            "Invoices": {
                "description": "Invoices",
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "balance": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "dueDate": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "invoiceId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "invoiceItems": {
                        "description": "Reserved for DocuSign.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/billingInvoiceItem"
                        }
                    },
                    "invoiceNumber": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "invoiceUri": {
                        "description": "Contains a URI for an endpoint that you can use to retrieve invoice information.",
                        "type": "string"
                    },
                    "nonTaxableAmount": {
                        "description": "",
                        "type": "string"
                    },
                    "pdfAvailable": {
                        "description": "",
                        "type": "string"
                    },
                    "taxableAmount": {
                        "description": "",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingInvoice",
                "x-ds-category": "Billing",
                "x-ds-order": "20",
                "x-ms-summary": "Invoices"
            },
            "Payments": {
                "description": "Payments",
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "description": {
                        "description": "A sender-defined description of the line item.\n",
                        "type": "string"
                    },
                    "paymentDate": {
                        "description": "",
                        "type": "string"
                    },
                    "paymentId": {
                        "description": "The ID of the payment.",
                        "type": "string"
                    },
                    "paymentNumber": {
                        "description": "When **true,** a PDF version of the invoice is available. \n\nTo get the PDF, make the call again and change \"Accept:\" in the header to \"Accept: application/pdf\".",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "billingPaymentItem",
                "x-ds-category": "Billing",
                "x-ds-order": "30",
                "x-ms-summary": "Payments"
            },
            "CloudStorage": {
                "type": "object",
                "properties": {
                    "endPosition": {
                        "description": "The last index position in the result set. ",
                        "type": "string"
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/externalDocServiceErrorDetails"
                    },
                    "id": {
                        "description": "A unique ID for the Salesforce object.",
                        "type": "string"
                    },
                    "items": {
                        "description": "A list of objects that contain information about a file or folder in cloud storage.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/externalFile"
                        }
                    },
                    "name": {
                        "description": "The name of the cloud storage item.",
                        "type": "string"
                    },
                    "nextUri": {
                        "description": "The URI for the next chunk of records based on the search request. It is `null` if this is the last set of results for the search. ",
                        "type": "string"
                    },
                    "previousUri": {
                        "description": "The URI for the prior chunk of records based on the search request. It is `null` if this is the first set of results for the search. ",
                        "type": "string"
                    },
                    "resultSetSize": {
                        "description": "The number of results in this response. Because you can filter which entries are included in the response, this value is always less than or equal to the `totalSetSize`.",
                        "type": "string"
                    },
                    "startPosition": {
                        "description": "The starting index position of the current result set.",
                        "type": "string"
                    },
                    "totalSetSize": {
                        "description": "The total number of items in the result set. This value is always greater than or equal to the value of `resultSetSize`.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "externalFolder",
                "description": "Cloud storage",
                "x-ds-category": "CloudStorage",
                "x-ds-order": "10",
                "x-ms-summary": "Cloud storage"
            },
            "CloudStorageProviders": {
                "type": "object",
                "properties": {
                    "storageProviders": {
                        "description": "An Array containing the storage providers associated with the user.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/cloudStorageProvider"
                        }
                    }
                },
                "x-ds-definition-name": "cloudStorageProviders",
                "description": "The CloudStorageProviders resource provides methods that allow you to manage the cloud storage providers associate with an account.",
                "x-ds-category": "CloudStorage",
                "x-ds-order": "20",
                "x-ms-summary": "The CloudStorageProviders resource provides methods that allow you to manage the cloud storage providers associate with an account."
            },
            "ConnectConfigurations": {
                "type": "object",
                "properties": {
                    "allowEnvelopePublish": {
                        "description": "When **true,** data is sent to the `urlToPublishTo` web address. The default value for this property is **false,** which will stop sending data while maintaining the Connect configuration information.",
                        "type": "string"
                    },
                    "allowSalesforcePublish": {
                        "description": "When **true,** DocuSign sends data to the designated Salesforce account through Connect. The default value is **true.**",
                        "type": "string"
                    },
                    "allUsers": {
                        "description": "When **true,** the tracked envelope and recipient events for all users, including users that are added a later time, are sent through Connect. The default value is **false.**\n\n**Note:** If this property is **false,** make sure you set the `userIds` property to a non-empty array of user IDs.",
                        "type": "string"
                    },
                    "allUsersExcept": {
                        "description": "This flag allows you to toggle between including and excluding specified users from the configuration. When **false,** the users corresponding to the IDs in `userIds` will be included in the configuration. Conversely, when **true,** the users will be excluded from the configuration. The default value is **false.**",
                        "type": "string"
                    },
                    "configurationType": {
                        "description": "If you are using merge fields, this property specifies the type of the merge field. The only supported value is `salesforce`.",
                        "type": "string"
                    },
                    "connectId": {
                        "description": "The DocuSign-generated ID for the Connect configuration. This property is read-only.",
                        "type": "string"
                    },
                    "deliveryMode": {
                        "description": "",
                        "type": "string"
                    },
                    "disabledBy": {
                        "description": "",
                        "type": "string"
                    },
                    "enableLog": {
                        "description": "When **true,** Connect logging is turned on. DocuSign recommends that you enable this functionality to help troubleshoot any issues. \n\nYou can have a maximum of 100 active logs in your account. You can view the entries in active logs in the **Logs** tab in the Connect console.",
                        "type": "string"
                    },
                    "envelopeEvents": {
                        "description": "An array of strings that lists envelope-related events to track through Connect. The possible event values are: \n\n- `sent`: An envelope has the status `sent` in the following scenarios:\n   - When the envelope has been sent to recipients.\n   - When using remote signing, this event is triggered when the email notification with a link to the documents is sent to at least one recipient.\n   - When using embedded signing, this event is triggered when the link is ready for the recipient to sign the envelope.\n\n   An envelope remains in this state until all recipients have viewed or taken action on the envelope.\n\n- `delivered`: This status is triggered when all recipients have opened the envelope, selected the **Continue** button in the interface, and viewed the documents.\n- `completed`: This status is triggered when all recipients have completed their assigned actions on an envelope.\n- `declined`: This status is triggered when a recipient has declined to sign the envelope.\n- `voided`: The voided status indicates that the sender has voided the envelope.\n\n**Note:** In previous versions of the API, this value was a single comma-separated string.\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "eventData": {
                        "$ref": "#/components/schemas/connectEventData"
                    },
                    "events": {
                        "description": "A comma-separated list of envelope-level event statuses that will trigger Connect to send updates to the endpoint specified in the `urlToPublishTo` property.\n\nSet this property when you are using the [JSON SIM event model](/platform/webhooks/connect/improved-json-sim-event-model/). If you are instead using any of [the legacy event message formats](/platform/webhooks/connect/legacy-message-formats/), set either the `envelopeEvents` property or the `recipientEvents` property.\n\nThe [possible event statuses](/platform/webhooks/connect/improved-json-sim-event-model/#eventreference) are:\n\n* `envelope-created`\n* `envelope-sent`\n* `envelope-resent`\n* `envelope-delivered`\n* `envelope-completed`\n* `envelope-declined`\n* `envelope-voided`\n* `recipient-authenticationfailed`\n* `recipient-autoresponded`\n* `recipient-declined`\n* `recipient-delivered`\n* `recipient-completed`\n* `recipient-sent`\n* `recipient-resent`\n* `template-created`\n* `template-modified`\n* `template-deleted`\n* `envelope-corrected`\n* `envelope-purge`\n* `envelope-deleted`\n* `envelope-discard`\n* `recipient-reassign`\n* `recipient-delegate`\n* `recipient-finish-later`\n* `click-agreed`\n* `click-declined`\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "externalFolderId": {
                        "description": "The ID of an external folder.",
                        "type": "string"
                    },
                    "externalFolderLabel": {
                        "description": "The label for an external folder.",
                        "type": "string"
                    },
                    "groupIds": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "includeCertificateOfCompletion": {
                        "description": "When **true,** the Connect Service includes the Certificate of Completion with completed envelopes. ",
                        "type": "string"
                    },
                    "includeCertSoapHeader": {
                        "description": "When **true,** a certificate for a SOAP header is included in messages sent through Connect.",
                        "type": "string"
                    },
                    "includeDocumentFields": {
                        "description": "When **true,** the Document Fields associated with the envelope's documents are included in the notification messages. Document Fields are optional custom name-value pairs added to documents using the API. ",
                        "type": "string"
                    },
                    "includeDocuments": {
                        "description": "When **true,**\nConnect attaches the envelope documents\nto the payloads of your event notification messages.\n\n**Note:** Consider resources and scaling when adding documents\nto your event payloads. Documents attached to these messages\nare sent as base64 strings,\nwhich are larger than binary document data.\nThis can significantly increase your payload size,\nopening up windows for failure.\nIf you include documents,\nyou must build your application to scale in these situations.",
                        "type": "string"
                    },
                    "includeEnvelopeVoidReason": {
                        "description": "When **true,** Connect will include the voidedReason for voided envelopes.",
                        "type": "string"
                    },
                    "includeHMAC": {
                        "description": "When **true,** a Hash-based Message Authentication Code (HMAC) signature is included in messages sent through Connect.\nFor more information, see [Using HMAC Security with DocuSign Connect](/platform/webhooks/connect/hmac/).",
                        "type": "string"
                    },
                    "includeOAuth": {
                        "description": "",
                        "type": "string"
                    },
                    "includeSenderAccountasCustomField": {
                        "description": "When **true,** Connect will include the sender account as Custom Field in the data.",
                        "type": "string"
                    },
                    "includeTimeZoneInformation": {
                        "description": "When **true,** Connect will include the envelope time zone information.",
                        "type": "string"
                    },
                    "integratorManaged": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the Connect configuration. The name helps identify the configuration in the list.",
                        "type": "string"
                    },
                    "password": {
                        "description": "The user's encrypted password hash.",
                        "type": "string"
                    },
                    "recipientEvents": {
                        "description": "An array of strings that lists of recipient-related events that trigger a notification\nto your webhook Connect listener. The possible event values are:\n\n- `sent`: If a recipient type is set to receive an email notification to take action on an envelope, the recipient status is set to `sent` upon delivery of the email.\n- `delivered`: The recipient has viewed the documents in the envelope. This recipient status does not indicate email delivery of the documents in the envelope.\n- `completed`: The recipient has completed their assigned actions on an envelope.\n- `declined`: The recipient has declined to sign a document in the envelope.\n- `authenticationfailed`: At least one signer has failed the authentication check on the document. If this occurs, you have two options:\n   - Send a reminder to the recipients, which provides the signer with another chance to access and pass the authentication.\n   - Correct the document and modify the authentication setting.\n- `autoresponded`: The recipient's email system sent back an automatic response. This status is only used when **Send-on-behalf-of** is turned off for the account.\n\n**Note:** In previous versions of the API, this value was a single comma-separated string.\n",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requireMutualTls": {
                        "description": "When **true,** [Mutual TLS](/platform/webhooks/mutual-tls/) authentication is enabled.",
                        "type": "string"
                    },
                    "requiresAcknowledgement": {
                        "description": "When **true,** event delivery acknowledgements are enabled for your Connect configuration.\n\nDocuSign Connect awaits a valid 200 response from your application acknowledging that it received a message. If you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and places it into a failure queue. It is imperative that you acknowledge successful receipt of Connect events as they occur by sending a 200 event back.\n\n#### When **true** and Send Individual Messages (SIM) mode is activated\n\nIf the HTTP status response to a notification message is not in the range of 200-299,\nthen the message delivery failed, and the configuration is marked as down.\n\nThe message will be queued and retried once per day.\nWhile a Connect configuration is marked down, subsequent notifications will not be tried. Instead they will be immediately queued with the reason `Pending`.\nWhen a message succeeds, all queued messages for the configuration will be tried immediately, in order.\n\nThere is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.\n\n#### When **true** and SIM mode is not activated\n\nIf the HTTP Status response to a notification message is not in the range of 200-299,  then the message delivery failed, and the message is queued.\n\nThe message will be retried after at least a day the next time a subsequent message is successfully sent to this configuration (subscription).  Subsequent notifications will be tried when they occur.\nThere is a maximum of ten retries. Alternately, you can use **Republish Connect Information** to manually republish the notification.\n\n#### When **false**\n\nWhen `requiresAcknowledgement` is set to **false** and you do not acknowledge receiving an event notification message within 100 seconds, DocuSign treats the message as a failure and determines that the server is unavailable. It does not retry to send the notification message, and you must handle the failure manually.\n\n",
                        "type": "string"
                    },
                    "salesforceApiVersion": {
                        "description": "The version of the Salesforce API that you are using.",
                        "type": "string"
                    },
                    "salesforceAuthcode": {
                        "description": "",
                        "type": "string"
                    },
                    "salesforceCallBackUrl": {
                        "description": "",
                        "type": "string"
                    },
                    "salesforceDocumentsAsContentFiles": {
                        "description": "When **true,** DocuSign can use documents in your Salesforce account for sending and signing.",
                        "type": "string"
                    },
                    "senderOverride": {
                        "description": "",
                        "type": "string"
                    },
                    "senderSelectableItems": {
                        "description": "This property sets the items that are available for selection when adding or editing Connect objects. ",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sfObjects": {
                        "description": "An array of Salesforce objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/connectSalesforceObject"
                        }
                    },
                    "signMessageWithX509Certificate": {
                        "description": "When **true,** Mutual TLS will be enabled for notifications. Mutual TLS must be initiated by the listener (the customer's web server) during the TLS handshake protocol. ",
                        "type": "string"
                    },
                    "soapNamespace": {
                        "description": "The namespace of the SOAP interface.\n\n**Note:** If `useSoapInterface` is set to **true,** you must set this value.",
                        "type": "string"
                    },
                    "urlToPublishTo": {
                        "description": "The endpoint to which Connect should send webhook notification messages via an HTTPS POST request. The URL must start with `https`. The customer's web server must use an SSL/TLS certificate whose CA is in the Microsoft list of trusted CAs. Self-signed certificates are not acceptable, but you can use free certificates from Let's Encrypt.\n\nThe maximum length of this property is 4096 bytes.",
                        "type": "string"
                    },
                    "userIds": {
                        "description": "A comma-separated list of user IDs. This sets the users associated with the tracked envelope and recipient events. When a tracked event occurs for a set user, the a notification message is sent to your Connect listener.\n\nBy default, the users will be included in the configuration. If you want to exclude the users, set the `allUsersExcept` property to **true.**\n\n**Note:** If `allUsers` is set to `false`, then you must provide a list of user IDs.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userName": {
                        "description": "The name of the user.",
                        "type": "string"
                    },
                    "useSoapInterface": {
                        "description": "When **true,** indicates that the `urlToPublishTo` property contains a SOAP endpoint.",
                        "type": "string"
                    }
                },
                "description": "Contains information about a DocuSign Connect configuration.",
                "x-ds-definition-name": "connectCustomConfiguration",
                "x-ds-category": "Connect",
                "x-ds-order": "10",
                "x-ms-summary": "Contains information about a DocuSign Connect configuration."
            },
            "CustomTabs": {
                "type": "object",
                "properties": {
                    "anchor": {
                        "description": "An optional string that is used to auto-match tabs to strings located in the documents of an envelope.",
                        "type": "string"
                    },
                    "anchorCaseSensitive": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are placed. When **true,** the text string in a document must match the case of the `anchorString` property for an anchor tab to be created. The default value is **false.**\n\nFor example, when set to **true,** if the anchor string is `DocuSign`, then `DocuSign` will match but `Docusign`, `docusign`, `DoCuSiGn`, etc. will not match. When **false,** `DocuSign`, `Docusign`, `docusign`, `DoCuSiGn`, etc. will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/",
                        "type": "string"
                    },
                    "anchorHorizontalAlignment": {
                        "description": "This property controls how [anchor tabs][AnchorTabs] are aligned in relation to the anchor text. Possible values are :\n\n- `left`: Aligns the left side of the tab with the beginning of the first character of the matching anchor word. This is the default value.\n- `right`: Aligns the tab’s left side with the last character of the matching anchor word.\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTabs]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorIgnoreIfNotPresent": {
                        "description": "When **true,** this tab is ignored if the `anchorString` is not found in the document.",
                        "type": "string"
                    },
                    "anchorMatchWholeWord": {
                        "description": "When **true,** the text string in a document must match the value of the `anchorString` property in its entirety for an [anchor tab][AnchorTab] to be created. The default value is **false.**\n\nFor example, when set to **true,** if the input is `man` then `man` will match but `manpower`, `fireman`, and `penmanship` will not. When **false,** if the input is `man` then `man`, `manpower`, `fireman`, and `penmanship` will all match.\n\nThis functionality uses the following rules:\n\n- Unless punctuation is specified in the `anchorString`, this functionality ignores punctuation and the following characters:\n\n  $~><|^+=\n\n  For example, the `anchorString` `water` will match on the string `Fetch a pail of water.`\n\n- Strings embedded in other strings are ignored during the matching process.\n\n- In words that have dashes, the parts separated by dashes are treated as distinct words.\n\n  Example: If the anchor string is `forget`, then an anchor tab is placed on the `forget` in `forget-me-not`, even when `anchorMatchWholeWord` is set to **true.**\n\n- Letters with accent marks are treated as distinct characters from their unaccented counterparts.\n\n- For single-character anchor strings, if the two characters appear right next to each other in the document, a single anchor tab is placed for both of them.\n\n  Example: If the anchor string is `i`, then only one anchor tab is placed in `skiing`.\n\n- Unlike punctuation, numbers are not ignored when finding anchor words.\n\n  Example: If the anchor string is `cat`, then `-cat-` is matched but `1cat2` is not when `anchorMatchWholeWord` is set to **true** (its default value).\n\n\n**Note:** You can only specify the value of this property in POST requests.\n\n[AnchorTab]: /docs/esign-rest-api/esign101/concepts/tabs/auto-place/\n",
                        "type": "string"
                    },
                    "anchorUnits": {
                        "description": "Specifies units of the `anchorXOffset` and `anchorYOffset`. Valid units are:\n\n- `pixels` (default)\n- `inches`\n- `mms`\n- `cms`\n",
                        "type": "string"
                    },
                    "anchorXOffset": {
                        "description": "Specifies the X axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "anchorYOffset": {
                        "description": "Specifies the Y axis location of the tab in `anchorUnits` relative to the `anchorString`.\n",
                        "type": "string"
                    },
                    "bold": {
                        "description": "When **true,** the information in the tab is bold.",
                        "type": "string"
                    },
                    "collaborative": {
                        "description": "",
                        "type": "string"
                    },
                    "concealValueOnDocument": {
                        "description": "When **true,** the field appears normally while the recipient is adding or modifying the information in the field, but the data is not visible (the characters are hidden by asterisks) to any other signer or the sender.\n\nWhen an envelope is completed the information is only available to the sender through the Form Data link in the DocuSign Console. The information on the downloaded document remains masked by asterisks.\n\nThis setting applies only to text boxes and does not affect list boxes, radio buttons, or check boxes.",
                        "type": "string"
                    },
                    "createdByDisplayName": {
                        "description": "The user name of the DocuSign user who created this object.",
                        "type": "string"
                    },
                    "createdByUserId": {
                        "description": "The userId of the DocuSign user who created this object.",
                        "type": "string"
                    },
                    "customTabId": {
                        "description": "The DocuSign-generated custom tab ID for the custom tab to be applied. This property can only be used when adding new tabs for a recipient. When used, the new tab inherits all of the custom tab properties.",
                        "type": "string"
                    },
                    "disableAutoSize": {
                        "description": "When **true,** disables the auto sizing of single line text boxes in the signing screen when the signer enters data. If disabled users will only be able enter as much data as the text box can hold. By default this is false. This property only affects single line text boxes.",
                        "type": "string"
                    },
                    "editable": {
                        "description": "When **true,** the custom tab is editable. Otherwise the custom tab cannot be modified.",
                        "type": "string"
                    },
                    "font": {
                        "description": "The font to be used for the tab value. Supported fonts include:\n\n- Default\n- Arial\n- ArialNarrow\n- Calibri\n- CourierNew\n- Garamond\n- Georgia\n- Helvetica\n- LucidaConsole\n- MSGothic\n- MSMincho\n- OCR-A\n- Tahoma\n- TimesNewRoman\n- Trebuchet\n- Verdana\n",
                        "type": "string"
                    },
                    "fontColor": {
                        "description": "The font color to use for the information in the tab. Possible values are: \n\n- Black\n- BrightBlue\n- BrightRed\n- DarkGreen\n- DarkRed\n- Gold\n- Green\n- NavyBlue\n- Purple\n- White\n",
                        "type": "string"
                    },
                    "fontSize": {
                        "description": "The font size used for the information in the tab. Possible values are:\n\n- Size7\n- Size8\n- Size9\n- Size10\n- Size11\n- Size12\n- Size14\n- Size16\n- Size18\n- Size20\n- Size22\n- Size24\n- Size26\n- Size28\n- Size36\n- Size48\n- Size72",
                        "type": "string"
                    },
                    "height": {
                        "description": "The height of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    },
                    "includedInEmail": {
                        "description": "When **true,** the tab is included in e-mails related to the envelope on which it exists. This applies to only specific tabs.",
                        "type": "string"
                    },
                    "initialValue": {
                        "description": "The original value of the tab.",
                        "type": "string"
                    },
                    "italic": {
                        "description": "When **true,** the information in the tab is italic.",
                        "type": "string"
                    },
                    "items": {
                        "description": "If the tab is a list, this represents the values that are possible for the tab.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lastModified": {
                        "description": "The UTC DateTime this object was last modified. This is in ISO 8601 format.",
                        "type": "string"
                    },
                    "lastModifiedByDisplayName": {
                        "description": "The User Name of the DocuSign user who last modified this object.",
                        "type": "string"
                    },
                    "lastModifiedByUserId": {
                        "description": "The userId of the DocuSign user who last modified this object.",
                        "type": "string"
                    },
                    "localePolicy": {
                        "$ref": "#/components/schemas/localePolicyTab"
                    },
                    "locked": {
                        "description": "When **true,** the signer cannot change the data of the custom tab.",
                        "type": "string"
                    },
                    "maximumLength": {
                        "description": "The maximum number of entry characters supported by the custom tab.",
                        "type": "string"
                    },
                    "maxNumericalValue": {
                        "description": "",
                        "type": "string"
                    },
                    "mergeField": {
                        "$ref": "#/components/schemas/mergeField"
                    },
                    "minNumericalValue": {
                        "description": "",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the custom tab.",
                        "type": "string"
                    },
                    "numericalValue": {
                        "description": "",
                        "type": "string"
                    },
                    "paymentItemCode": {
                        "description": "If the custom tab is for a payment request, this is the external code for the item associated with the charge. For example, this might be your product id.\n\nExample: `SHAK1`\n\nMaximum Length: 100 characters.",
                        "type": "string"
                    },
                    "paymentItemDescription": {
                        "description": "If the custom tab is for a payment request, this is the description of the item associated with the charge.\n\nExample: `The Danish play by Shakespeare`\n\nMaximum Length: 100 characters.",
                        "type": "string"
                    },
                    "paymentItemName": {
                        "description": "If the custom tab is for a payment request, this is the name of the item associated with the charge.\n\nMaximum Length: 100 characters.\n\nExample: `Hamlet`",
                        "type": "string"
                    },
                    "requireAll": {
                        "description": "When **true** and shared is true, information must be entered in this field to complete the envelope. ",
                        "type": "string"
                    },
                    "required": {
                        "description": "When **true,** the signer is required to fill out this tab.",
                        "type": "string"
                    },
                    "requireInitialOnSharedChange": {
                        "description": "Optional element for field markup. When **true,** the signer is required to initial when they modify a shared field.",
                        "type": "string"
                    },
                    "scaleValue": {
                        "description": "Sets the size of the tab. This field accepts values from `0.5` to `1.0`, where `1.0` represents full size and `0.5` is 50% of full size.",
                        "type": "string"
                    },
                    "selected": {
                        "description": "When **true,** the radio button is selected.",
                        "type": "string"
                    },
                    "shared": {
                        "description": "When **true,** this custom tab is shared.",
                        "type": "string"
                    },
                    "signatureProviderId": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "stampType": {
                        "description": "The type of stamp. Valid values are:\n\n- `signature`: A signature image. This is the default value.\n- `stamp`: A stamp image.\n- null",
                        "type": "string"
                    },
                    "stampTypeMetadata": {
                        "$ref": "#/components/schemas/propertyMetadata"
                    },
                    "tabLabel": {
                        "description": "The label associated with the tab. This value may be an empty string.\nIf no value is provided, the tab type is used as the value.\n\nMaximum Length: 500 characters.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of this tab. Values are:\n\n- `Approve`\n- `CheckBox`\n- `Company`\n- `Date`\n- `DateSigned`\n- `Decline`\n- `Email`\n- `EmailAddress`\n- `EnvelopeId`\n- `FirstName`\n- `Formula`\n- `FullName`\n- `InitialHere`\n- `InitialHereOptional`\n- `LastName`\n- `List`\n- `Note`\n- `Number`\n- `Radio`\n- `SignerAttachment`\n- `SignHere`\n- `SignHereOptional`\n- `Ssn`\n- `Text`\n- `Title`\n- `Zip5`\n- `Zip5Dash4`",
                        "type": "string"
                    },
                    "underline": {
                        "description": "When **true,** the information in the tab is underlined.",
                        "type": "string"
                    },
                    "validationMessage": {
                        "description": "The message displayed if the custom tab fails input validation (either custom of embedded).",
                        "type": "string"
                    },
                    "validationPattern": {
                        "description": "A regular expression used to validate input for the tab.",
                        "type": "string"
                    },
                    "validationType": {
                        "description": "Specifies how numerical data is validated. Valid values:\n\n- `number`\n- `currency`\n",
                        "type": "string"
                    },
                    "width": {
                        "description": "The width of the tab in pixels.\nMust be an integer.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "tabMetadata",
                "description": "Custom tabs",
                "x-ds-category": "CustomTabs",
                "x-ds-order": "10",
                "x-ms-summary": "Custom tabs"
            },
            "Resources": {
                "type": "object",
                "properties": {
                    "resources": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    }
                },
                "x-ds-definition-name": "resourceInformation",
                "description": "API resource information",
                "x-ds-category": "Diagnostics",
                "x-ds-order": "20",
                "x-ms-summary": "API resource information"
            },
            "Services": {
                "type": "object",
                "properties": {
                    "buildBranch": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "buildBranchDeployedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "buildSHA": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "buildVersion": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "linkedSites": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceVersions": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/serviceVersion"
                        }
                    }
                },
                "x-ds-definition-name": "serviceInformation",
                "description": "API service information",
                "x-ds-category": "Diagnostics",
                "x-ds-order": "30",
                "x-ms-summary": "API service information"
            },
            "EnvelopeConsumerDisclosures": {
                "type": "object",
                "properties": {
                    "accountEsignId": {
                        "description": "The GUID of the account associated with the consumer disclosure.",
                        "type": "string"
                    },
                    "allowCDWithdraw": {
                        "description": "When **true,** indicates that the customer can withdraw their consent to the consumer disclosure when they decline to sign documents. If these recipients sign documents sent to them from your account in the future, they will be required to agree to the terms in the disclosure. The default value is **false.**\n**Note:** Only Admin users can change this setting.",
                        "type": "string"
                    },
                    "allowCDWithdrawMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "changeEmail": {
                        "description": "If the customer needs to change their email address, this is the email address to which they should the change request.",
                        "type": "string"
                    },
                    "changeEmailOther": {
                        "description": "Other information about the requirements for the user to change their email address.\n\nExample: \n\n`We do not require any other information from you to change your email address.`",
                        "type": "string"
                    },
                    "companyName": {
                        "description": "Specifies the company name used in the disclosure. The default value is the account name.\n\nHowever, if your account uses signing brands that specify a company name, you can substitute the brand's company name by setting the `useBrand` property to **true.** Whenever an envelope is sent from the account that uses a signing brand with a specified `companyName`, that value is used in email notifications and in the signing experience.\n\n**Note:** This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. You must also set the value of the `useBrand` property to **true.**\n",
                        "type": "string"
                    },
                    "companyPhone": {
                        "description": "The phone number of the company associated with the consumer disclosure, as a free-formatted string.",
                        "type": "string"
                    },
                    "copyCostPerPage": {
                        "description": "The cost per page if the customer requests paper copies.\n\nExample: \n\n`0.0000`",
                        "type": "string"
                    },
                    "copyFeeCollectionMethod": {
                        "description": "Specifies the fee collection method for cases in which the customer requires paper copies of the document.\n\nMaximum length: 255 characters.\n\nExample: \n\n`We will bill you for any fees at that time, if any.`",
                        "type": "string"
                    },
                    "copyRequestEmail": {
                        "description": "The email address to which the customer should send a request for copies of a document.\n\nMaximum length: 100 characters.",
                        "type": "string"
                    },
                    "custom": {
                        "description": "When **true,** indicates that the consumer disclosure is a custom disclosure. The default is **false.**",
                        "type": "string"
                    },
                    "enableEsign": {
                        "description": "When **true** (default), indicates that eSign is enabled.",
                        "type": "string"
                    },
                    "esignAgreement": {
                        "description": "The final, assembled text of the Electronic Record and Signature Disclosure that includes the appropriate `companyName` and other specifics. It also includes the HTML tags used for formatting.",
                        "type": "string"
                    },
                    "esignText": {
                        "description": "The template for the Electronic Record and Signature Disclosure, which contains placeholders for information such as the `companyName`. It also includes the HTML tags used for formatting.\n\n**Note:** If you are switching to or updating a custom disclosure, you can edit both the text and the HTML formatting.",
                        "type": "string"
                    },
                    "languageCode": {
                        "description": "The simple type enumeration for the language to use when displaying the disclosure. The following languages are supported:\n\n- Arabic (`ar`)\n- Bulgarian (`bg`)\n- Czech (`cs`)\n- Chinese Simplified (`zh_CN`)\n- Chinese Traditional (`zh_TW`)\n- Croatian (`hr`)\n- Danish (`da`)\n- Dutch (`nl`)\n- English US (`en`)\n- English UK (`en_GB`)\n- Estonian (`et`)\n- Farsi (`fa`)\n- Finnish (`fi`)\n- French (`fr`)\n- French Canadian (`fr_CA`)\n- German (`de`)\n- Greek (`el`)\n- Hebrew (`he`)\n- Hindi (`hi`)\n- Hungarian (`hu`)\n- Bahasa Indonesian (`id`)\n- Italian (`it`)\n- Japanese (`ja`)\n- Korean (`ko`)\n- Latvian (`lv`)\n- Lithuanian (`lt`)\n- Bahasa Melayu (`ms`)\n- Norwegian (`no`)\n- Polish (`pl`)\n- Portuguese (`pt`)\n- Portuguese Brazil (`pt_BR`)\n- Romanian (`ro`)\n- Russian (`ru`)\n- Serbian (`sr`)\n- Slovak (`sk`)\n- Slovenian (`sl`)\n- Spanish (`es`)\n- Spanish Latin America (`es_MX`)\n- Swedish (`sv`)\n- Thai (`th`)\n- Turkish (`tr`)\n- Ukrainian (`uk`) \n- Vietnamese (`vi`)\n\nAdditionally, you can automatically detect the browser language being used by the viewer and display the disclosure in that language by setting the value to `browser`.",
                        "type": "string"
                    },
                    "mustAgreeToEsign": {
                        "description": "When **true,** the  recipient must agree to the consumer disclosure. The value of this property is read-only. It is calculated based on the account setting `consumerDisclosureFrequency` and the user's actions.",
                        "type": "string"
                    },
                    "pdfId": {
                        "description": "**Deprecated.** \n\nThe `pdfId` property in the consumer_disclosure PUT request is deprecated. For security reasons going forward, any value provided in the request packet must be ignored. ",
                        "type": "string"
                    },
                    "useBrand": {
                        "description": "When **true,** specifies that the company name in the signing brand is used for the disclosure. Whenever an envelope is sent from the account that uses a signing brand with a specified company name, that value is used in email notifications and in the signing experience.  \n\nWhen **false** (default), or if the signing brand does not specify a company name, the account name is used instead.\n\n**Note:** This substitution only works if you use the default legal disclosure or if you apply the `companyName` to the merge fields in a custom ERSD. ",
                        "type": "string"
                    },
                    "useConsumerDisclosureWithinAccount": {
                        "description": "When **true,** specifies that recipients in the same account as the sender must agree to eSign an Electronic Record and Signature Disclosure Statement.",
                        "type": "string"
                    },
                    "useConsumerDisclosureWithinAccountMetadata": {
                        "$ref": "#/components/schemas/settingsMetadata"
                    },
                    "withdrawAddressLine1": {
                        "description": "Contains the first address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "withdrawAddressLine2": {
                        "description": "Contains the second address line of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "withdrawByEmail": {
                        "description": "When **true** (default), indicates that the customer can withdraw consent by email.",
                        "type": "string"
                    },
                    "withdrawByMail": {
                        "description": "When **true,** indicates that the customer can withdraw consent by postal mail. The default is **false.**",
                        "type": "string"
                    },
                    "withdrawByPhone": {
                        "description": "When **true,** indicates that the customer can withdraw consent by phone. The default is **false.**",
                        "type": "string"
                    },
                    "withdrawCity": {
                        "description": "Contains the city of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 50 characters. ",
                        "type": "string"
                    },
                    "withdrawConsequences": {
                        "description": "Text indicating the consequences of withdrawing consent.\n\nMaximum length: 255 characters.",
                        "type": "string"
                    },
                    "withdrawEmail": {
                        "description": "Contains the email address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 100 characters. ",
                        "type": "string"
                    },
                    "withdrawOther": {
                        "description": "Contains any other information needed to withdraw consent.\n\nMaximum length: 255 characters.\n\nExample:\n\n`We do not need any other information from you to withdraw consent.`",
                        "type": "string"
                    },
                    "withdrawPhone": {
                        "description": "Contains the phone number that a customer can call to register consent withdrawal notification as a free-formatted string.\n\nMaximum length: 20 characters. ",
                        "type": "string"
                    },
                    "withdrawPostalCode": {
                        "description": "Contains the postal code of the postal address to which a customer can send a consent withdrawal notification.\n\nMaximum length: 20 characters. ",
                        "type": "string"
                    },
                    "withdrawState": {
                        "description": "Contains the state of the postal address to which a customer can send a consent withdrawal notification.\n\nExample: `PA`",
                        "type": "string"
                    }
                },
                "description": "Details about envelope consumer disclosures.",
                "x-ds-definition-name": "consumerDisclosure",
                "x-ds-category": "Envelopes",
                "x-ds-order": "90",
                "x-ms-summary": "Details about envelope consumer disclosures."
            },
            "EnvelopeDocuments": {
                "type": "object",
                "properties": {
                    "envelopeDocuments": {
                        "description": "An array of document objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument"
                        }
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "envelopeDocumentsResult",
                "description": "Envelope documents",
                "x-ds-category": "Envelopes",
                "x-ds-order": "40",
                "x-ms-summary": "Envelope documents"
            },
            "EnvelopeEmailSettings": {
                "description": "Envelope email settings",
                "type": "object",
                "properties": {
                    "bccEmailAddresses": {
                        "description": "An array containing the email address that should receive a copy of all email communications related to an envelope for archiving purposes. Maximum Length: 100 characters.\n\nWhile this property is an array, note that it takes only a single email address.\n\n**Note:** Only users with the `canManageAccount` setting set to **true** can use this option. \n\nDocuSign verifies that the email format is correct, but does not verify that the email address is active. You can use this for archiving purposes. However, using this property overrides the BCC for Email Archive information setting for this envelope. \n\n**Example:** if your account has BCC for Email Archive set up for the email address archive@mycompany.com and you send an envelope using the BCC Email Override to send a BCC email to salesarchive@mycompany.com, then a copy of the envelope is only sent to the salesarchive@mycompany.com email address.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/bccEmailAddress"
                        }
                    },
                    "replyEmailAddressOverride": {
                        "description": "The Reply To email address to use for email replies, instead of the one that is configured at the account level. DocuSign verifies that the email address is in a correct format, but does not verify that it is active. Maximum Length: 100 characters.",
                        "type": "string"
                    },
                    "replyEmailNameOverride": {
                        "description": "The name to associate with the Reply To email address, instead of the name that is configured at the account level. Maximum Length: 100 characters.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "emailSettings",
                "x-ds-category": "Envelopes",
                "x-ds-order": "30",
                "x-ms-summary": "Envelope email settings"
            },
            "Envelopes": {
                "type": "object",
                "properties": {
                    "accessControlListBase64": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "allowComments": {
                        "description": "When **true,** users can add comments to the documents in the envelope. For example, if a signer has a question about the text in the document, they can add a comment to the document.",
                        "type": "string"
                    },
                    "allowMarkup": {
                        "description": "When **true,** the Document Markup feature is enabled.\n\n**Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.\n",
                        "type": "string"
                    },
                    "allowReassign": {
                        "description": "When **true,** the recipient can redirect an envelope to a more appropriate recipient.",
                        "type": "string"
                    },
                    "allowViewHistory": {
                        "description": "When **true,** recipients can view the history of the envelope.",
                        "type": "string"
                    },
                    "anySigner": {
                        "description": "Deprecated. This feature has been replaced by signing groups.",
                        "type": "string"
                    },
                    "asynchronous": {
                        "description": "When **true,** the envelope is queued for\nprocessing and the value of the `status` property\nis set to `Processing`. Additionally, GET status\ncalls return `Processing` until completed.\n\n\n**Note:** A `transactionId` is required for this\ncall to work correctly. When the envelope is\ncreated, the status is `Processing` and an\n`envelopeId` is not returned in the response. To\nget the `envelopeId`, use a GET envelope query by\nusing the\n[transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the\nConnect notification.",
                        "type": "string"
                    },
                    "attachmentsUri": {
                        "description": "Contains a URL for retrieving the attachments that are associated with the envelope.",
                        "type": "string"
                    },
                    "authoritativeCopy": {
                        "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
                        "type": "string"
                    },
                    "authoritativeCopyDefault": {
                        "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
                        "type": "string"
                    },
                    "autoNavigation": {
                        "description": "When **true,** autonavigation is set for the recipient.\n",
                        "type": "string"
                    },
                    "brandId": {
                        "description": "The ID of the brand.",
                        "type": "string"
                    },
                    "brandLock": {
                        "description": "When **true,** the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.",
                        "type": "string"
                    },
                    "burnDefaultTabData": {
                        "description": "",
                        "type": "string"
                    },
                    "certificateUri": {
                        "description": "The URI for retrieving certificate information.",
                        "type": "string"
                    },
                    "completedDateTime": {
                        "description": "Specifies the date and time this item was completed.",
                        "type": "string"
                    },
                    "copyRecipientData": {
                        "description": "",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "customFields": {
                        "$ref": "#/components/schemas/AccountCustomFields"
                    },
                    "customFieldsUri": {
                        "description": "The URI for retrieving custom fields.",
                        "type": "string"
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deletedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "disableResponsiveDocument": {
                        "description": "When **true,** responsive documents are disabled for the envelope.",
                        "type": "string"
                    },
                    "documentBase64": {
                        "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
                        "type": "string"
                    },
                    "documentsCombinedUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as a single PDF file.",
                        "type": "string"
                    },
                    "documentsUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as separate files.",
                        "type": "string"
                    },
                    "emailBlurb": {
                        "description": "This is the same as the email body. If specified it is included in the email body for all envelope recipients.",
                        "type": "string"
                    },
                    "emailSettings": {
                        "$ref": "#/components/schemas/emailSettings"
                    },
                    "emailSubject": {
                        "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
                        "type": "string"
                    },
                    "enableWetSign": {
                        "description": "When **true,** the signer is allowed to print the document and sign it on paper.",
                        "type": "string"
                    },
                    "enforceSignerVisibility": {
                        "description": "When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.\n\n**Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**\n\n[docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/",
                        "type": "string"
                    },
                    "envelopeAttachments": {
                        "description": "An array of attachment objects that provide information about the attachments that are associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attachment"
                        }
                    },
                    "envelopeCustomMetadata": {
                        "$ref": "#/components/schemas/envelopeCustomMetadata"
                    },
                    "envelopeDocuments": {
                        "description": "An array containing information about the documents that are included in the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument"
                        }
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "envelopeIdStamping": {
                        "description": "When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.\nAfter a document or attachment is stamped with an Envelope ID,\nthe ID is seen by all recipients\nand becomes a permanent part of the document\nand cannot be removed.",
                        "type": "string"
                    },
                    "envelopeLocation": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "envelopeMetadata": {
                        "$ref": "#/components/schemas/envelopeMetadata"
                    },
                    "envelopeUri": {
                        "description": "The URI for retrieving the envelope or envelopes.",
                        "type": "string"
                    },
                    "expireAfter": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "expireDateTime": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "expireEnabled": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "externalEnvelopeId": {
                        "description": "May contain an external identifier for the envelope.",
                        "type": "string"
                    },
                    "folders": {
                        "description": "A list of folder objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "hasComments": {
                        "description": "When **true,** indicates that users have added comments to the envelope.",
                        "type": "string"
                    },
                    "hasFormDataChanged": {
                        "description": "Specifies if the `EnvelopeFormData` associated with any forms in the envelope has changed.",
                        "type": "string"
                    },
                    "hasWavFile": {
                        "description": "When **true,** indicates that a .wav file used for voice authentication is included in the envelope. ",
                        "type": "string"
                    },
                    "holder": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "initialSentDateTime": {
                        "description": "The date and time the envelope was initially sent.",
                        "type": "string"
                    },
                    "is21CFRPart11": {
                        "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
                        "type": "string"
                    },
                    "isDynamicEnvelope": {
                        "description": "When **true,** indicates that the envelope is a dynamic envelope.",
                        "type": "string"
                    },
                    "isSignatureProviderEnvelope": {
                        "description": "When **true,** indicates that the envelope is a signature-provided envelope.",
                        "type": "string"
                    },
                    "lastModifiedDateTime": {
                        "description": "The date and time that the item was last modified.",
                        "type": "string"
                    },
                    "location": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockInformation": {
                        "$ref": "#/components/schemas/EnvelopeLocks"
                    },
                    "messageLock": {
                        "description": "When **true,** prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
                        "type": "string"
                    },
                    "notification": {
                        "$ref": "#/components/schemas/notification"
                    },
                    "notificationUri": {
                        "description": "The URI for retrieving notifications.",
                        "type": "string"
                    },
                    "powerForm": {
                        "$ref": "#/components/schemas/powerForm"
                    },
                    "purgeCompletedDate": {
                        "description": "The date that a purge was completed.",
                        "type": "string"
                    },
                    "purgeRequestDate": {
                        "description": "The date that a purge was requested.",
                        "type": "string"
                    },
                    "purgeState": {
                        "description": "Shows the current purge state for the envelope. Valid values:\n\n- `unpurged`: There has been no successful request to purge documents.\n- `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n- `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n- `documents_purged`: The envelope documents have been successfully purged.\n- `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n- `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n- `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.\n- `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.\n\n**Related topics**\n\n- [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)\n- [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)\n\n",
                        "type": "string"
                    },
                    "recipients": {
                        "$ref": "#/components/schemas/EnvelopeRecipients"
                    },
                    "recipientsLock": {
                        "description": "When **true,** prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
                        "type": "string"
                    },
                    "recipientsUri": {
                        "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                        "type": "string"
                    },
                    "sender": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "signerCanSignOnMobile": {
                        "description": "When **true,** recipients can sign on a mobile device.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signingLocation": {
                        "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.",
                        "type": "string"
                    },
                    "status": {
                        "description": "* `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.\n* `created`: The envelope is created as a draft. It can be modified and sent later.\n* `declined`: The envelope has been declined by the recipients.\n* `delivered`: The envelope has been delivered to the recipients.\n* `sent`: The envelope will be sent to the recipients after the envelope is created.\n* `signed`: The envelope has been signed by the recipients.\n* `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
                        "type": "string"
                    },
                    "statusChangedDateTime": {
                        "description": "The data and time that the status changed.",
                        "type": "string"
                    },
                    "statusDateTime": {
                        "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
                        "type": "string"
                    },
                    "templatesUri": {
                        "description": "The URI for retrieving the templates.",
                        "type": "string"
                    },
                    "transactionId": {
                        "description": " Used to identify an envelope. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
                        "type": "string"
                    },
                    "useDisclosure": {
                        "description": "When **true,** the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When **false,** the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
                        "type": "string"
                    },
                    "voidedDateTime": {
                        "description": "The date and time the envelope or template was voided.",
                        "type": "string"
                    },
                    "voidedReason": {
                        "description": "The reason the envelope or template was voided.\n\n**Note:** The string is truncated to the first 200 characters.\n",
                        "type": "string"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/workflow"
                    }
                },
                "x-ds-definition-name": "envelope",
                "description": "Envelope creation, management",
                "x-ds-category": "Envelopes",
                "x-ds-order": "10",
                "x-ms-summary": "Envelope creation, management"
            },
            "EnvelopeTemplates": {
                "type": "object",
                "properties": {
                    "templates": {
                        "description": "An array of `templateSummary` objects that contain information about templates.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/templateSummary"
                        }
                    }
                },
                "x-ds-definition-name": "templateInformation",
                "description": "Envelope templates",
                "x-ds-category": "Envelopes",
                "x-ds-order": "85",
                "x-ms-summary": "Envelope templates"
            },
            "TemplateRecipients": {
                "description": "Template recipients",
                "type": "object",
                "properties": {
                    "agents": {
                        "description": "A list of agent recipients assigned to the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/agent"
                        }
                    },
                    "carbonCopies": {
                        "description": "A list of carbon copy recipients assigned to the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/carbonCopy"
                        }
                    },
                    "certifiedDeliveries": {
                        "description": "A complex type containing information on a recipient the must receive the completed documents for the envelope to be completed, but the recipient does not need to sign, initial, date, or add information to any of the documents.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/certifiedDelivery"
                        }
                    },
                    "currentRoutingOrder": {
                        "description": "The routing order of the current recipient. If this value equals a particular signer's routing order, it indicates that the envelope has been sent to that recipient, but he or she has not completed the required actions.",
                        "type": "string"
                    },
                    "editors": {
                        "description": "A complex type defining the management and access rights of a recipient assigned assigned as an editor on the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/editor"
                        }
                    },
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "inPersonSigners": {
                        "description": "Specifies a signer that is in the same physical location as a DocuSign user who will act as a Signing Host for the transaction. The recipient added is the Signing Host and new separate Signer Name field appears after Sign in person is selected.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/inPersonSigner"
                        }
                    },
                    "intermediaries": {
                        "description": "Identifies a recipient that can, but is not required to, add name and email information for recipients at the same or subsequent level in the routing order (until subsequent Agents, Editors or Intermediaries recipient types are added).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/intermediary"
                        }
                    },
                    "notaries": {
                        "description": "A list of notary recipients on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notaryRecipient"
                        }
                    },
                    "participants": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/participant"
                        }
                    },
                    "recipientCount": {
                        "description": "The number of recipients in the envelope.",
                        "type": "string"
                    },
                    "seals": {
                        "description": "Specifies one or more electronic seals to apply on documents. For more information on Electronic Seals , see https://support.docusign.com/s/document-item?bundleId=xcm1643837555908&topicId=isl1578456577247.html",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/sealSign"
                        }
                    },
                    "signers": {
                        "description": "A list of signers on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signer"
                        }
                    },
                    "witnesses": {
                        "description": "A list of signers who act as witnesses on the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/witness"
                        }
                    }
                },
                "x-ds-definition-name": "recipients",
                "x-ds-category": "Templates",
                "x-ds-order": "20",
                "x-ms-summary": "Template recipients"
            },
            "TemplateCustomFields": {
                "description": "A template custom field enables you to prepopulate custom metadata for all new envelopes that are created by using a specific template. You can then use the custom data for sorting, organizing, searching, and other downstream processes.",
                "type": "object",
                "properties": {
                    "listCustomFields": {
                        "description": "An array of list custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/listCustomField"
                        }
                    },
                    "textCustomFields": {
                        "description": "An array of text custom fields.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/textCustomField"
                        }
                    }
                },
                "x-ds-definition-name": "customFields",
                "x-ds-category": "Templates",
                "x-ds-order": "70",
                "x-ms-summary": "A template custom field enables you to prepopulate custom metadata for all new envelopes that are created by using a specific template. You can then use the custom data for sorting, organizing, searching, and other downstream processes."
            },
            "TemplateDocumentFields": {
                "type": "object",
                "properties": {
                    "documentFields": {
                        "description": "The array of name/value custom data strings to add to a document. Custom document field information is returned in the status, but otherwise is not used by DocuSign. The array contains the following elements: \n\n* `name` - A string that can be a maximum of 50 characters. \n* `value` - A string that can be a maximum of 200 characters.\n\n**Important:** If you are using XML, the name/value pair is contained in a `nameValue` element. \n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/nameValue"
                        }
                    }
                },
                "x-ds-definition-name": "documentFieldsInformation",
                "description": "Template document fields",
                "x-ds-category": "Templates",
                "x-ds-order": "60",
                "x-ms-summary": "Template document fields"
            },
            "TemplateDocuments": {
                "type": "object",
                "properties": {
                    "templateDocuments": {
                        "description": "An array of document objects that contain information about the documents associated with the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument"
                        }
                    },
                    "templateId": {
                        "description": "The ID of the template. If a value is not provided, DocuSign generates a value. ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "templateDocumentsResult",
                "description": "Template documents",
                "x-ds-category": "Templates",
                "x-ds-order": "40",
                "x-ms-summary": "Template documents"
            },
            "TemplateLocks": {
                "type": "object",
                "properties": {
                    "errorDetails": {
                        "$ref": "#/components/schemas/errorDetails"
                    },
                    "lockDurationInSeconds": {
                        "description": "The number of seconds until the lock expires when there is no activity on the template.\n\nIf no value is entered, then the default value of 300 seconds is used. The maximum value is 1,800 seconds.\n\nThe lock duration can be extended.\n",
                        "type": "string"
                    },
                    "lockedByApp": {
                        "description": "Specifies the friendly name of  the application that is locking the envelope.",
                        "type": "string"
                    },
                    "lockedByUser": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "lockedUntilDateTime": {
                        "description": "The date and time that the lock expires.",
                        "type": "string"
                    },
                    "lockToken": {
                        "description": "A unique identifier provided to the owner of the lock. You must use this token with subsequent calls to prove ownership of the lock.",
                        "type": "string"
                    },
                    "lockType": {
                        "description": "The type of lock.  Currently `edit` is the only supported type.",
                        "type": "string"
                    },
                    "useScratchPad": {
                        "description": "When **true,** a scratchpad is used to edit information.\n ",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "lockInformation",
                "description": "This section provides information about template locks. You use template locks to prevent others from making changes to a template while you are modifying it.",
                "x-ds-category": "Templates",
                "x-ds-order": "80",
                "x-ms-summary": "This section provides information about template locks. You use template locks to prevent others from making changes to a template while you are modifying it."
            },
            "Templates": {
                "type": "object",
                "properties": {
                    "accessControlListBase64": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "allowComments": {
                        "description": "When **true,** indicates that comments are allowed on the envelope.",
                        "type": "string"
                    },
                    "allowMarkup": {
                        "description": "When **true,** the Document Markup feature is enabled.\n\n**Note:**  To use this feature, Document Markup must be enabled at both the account and envelope levels. Only Admin users can change this setting at the account level.\n",
                        "type": "string"
                    },
                    "allowReassign": {
                        "description": "When **true,** the recipient can redirect an envelope to a more appropriate recipient.",
                        "type": "string"
                    },
                    "allowViewHistory": {
                        "description": "When **true,** recipients can view the history of the envelope.",
                        "type": "string"
                    },
                    "anySigner": {
                        "description": "Deprecated. This feature has been replaced by signing groups.",
                        "type": "string"
                    },
                    "asynchronous": {
                        "description": "When **true,** the envelope is queued for\nprocessing and the value of the `status` property\nis set to `Processing`. Additionally, GET status\ncalls return `Processing` until completed.\n\n\n**Note:** A `transactionId` is required for this\ncall to work correctly. When the envelope is\ncreated, the status is `Processing` and an\n`envelopeId` is not returned in the response. To\nget the `envelopeId`, use a GET envelope query by\nusing the\n[transactionId](/docs/esign-rest-api/reference/envelopes/envelopes/create/) or by checking the\nConnect notification.",
                        "type": "string"
                    },
                    "attachmentsUri": {
                        "description": "Contains a URL for retrieving the attachments that are associated with the envelope.",
                        "type": "string"
                    },
                    "authoritativeCopy": {
                        "description": "When **true,** marks all of the documents in the envelope as authoritative copies.\n\n**Note:** You can override this value for a specific document. For example, you can set the `authoritativeCopy` property to **true** at the envelope level, but turn it off for a single document by setting the `authoritativeCopy` property for the document to **false.**",
                        "type": "string"
                    },
                    "authoritativeCopyDefault": {
                        "description": "The default `authoritativeCopy` setting for documents in this envelope that do not have `authoritativeCopy` set.\nIf this property is not set, each document defaults to the envelope's `authoritativeCopy`.",
                        "type": "string"
                    },
                    "autoMatch": {
                        "description": "By default, templates that have been used within\nthe last 60 days are included in auto-matching.\n\nBy explicitly setting `autoMatch`,\nyou can permanently include or exclude the template\nin auto matching.\n\nWhen **true** the template is included in auto-matching\nregardless of when it was last used.\n\nWhen **false** the template is never included in auto-matching.",
                        "type": "string"
                    },
                    "autoMatchSpecifiedByUser": {
                        "description": "When **true,** the template has been explicitly included in or excluded from auto-matching. The default is false.\nThis is a read-only property.",
                        "type": "string"
                    },
                    "autoNavigation": {
                        "description": "When **true,** autonavigation is set for the recipient.\n",
                        "type": "string"
                    },
                    "brandId": {
                        "description": "The ID of the brand.",
                        "type": "string"
                    },
                    "brandLock": {
                        "description": "When **true,** the `brandId` for the envelope is locked and senders cannot change the brand used for the envelope.",
                        "type": "string"
                    },
                    "burnDefaultTabData": {
                        "description": "",
                        "type": "string"
                    },
                    "certificateUri": {
                        "description": "The URI for retrieving certificate information.",
                        "type": "string"
                    },
                    "completedDateTime": {
                        "description": "Specifies the date and time this item was completed.",
                        "type": "string"
                    },
                    "copyRecipientData": {
                        "description": "",
                        "type": "string"
                    },
                    "created": {
                        "description": "The UTC DateTime when the workspace user authorization was created.",
                        "type": "string"
                    },
                    "createdDateTime": {
                        "description": "The UTC DateTime when the item was created.",
                        "type": "string"
                    },
                    "customFields": {
                        "$ref": "#/components/schemas/AccountCustomFields"
                    },
                    "customFieldsUri": {
                        "description": "The URI for retrieving custom fields.",
                        "type": "string"
                    },
                    "declinedDateTime": {
                        "description": "The date and time the recipient declined the document. This property is read-only.",
                        "type": "string"
                    },
                    "deletedDateTime": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "deliveredDateTime": {
                        "description": "The date and time that the envelope was delivered to the recipient. This property is read-only.",
                        "type": "string"
                    },
                    "description": {
                        "description": "A sender-defined description of the line item.\n",
                        "type": "string"
                    },
                    "disableResponsiveDocument": {
                        "description": "When **true,** responsive documents are disabled for the envelope.",
                        "type": "string"
                    },
                    "documentBase64": {
                        "description": "The document's bytes. This field can be used to include a base64 version of the document bytes within an envelope definition instead of sending the document using a multi-part HTTP request. The maximum document size is smaller if this field is used due to the overhead of the base64 encoding.",
                        "type": "string"
                    },
                    "documents": {
                        "description": "A complex element that contains details about the documents associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/document"
                        }
                    },
                    "documentsCombinedUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as a single PDF file.",
                        "type": "string"
                    },
                    "documentsUri": {
                        "description": "The URI for retrieving all of the documents associated with the envelope as separate files.",
                        "type": "string"
                    },
                    "emailBlurb": {
                        "description": "This is the same as the email body. If the sender enters an email blurb, it is included in the email body for all envelope recipients.",
                        "type": "string"
                    },
                    "emailSettings": {
                        "$ref": "#/components/schemas/emailSettings"
                    },
                    "emailSubject": {
                        "description": "The subject line of the email message that is sent to all recipients.\n\nFor information about adding merge field information to the email subject, see [Template Email Subject Merge Fields](/docs/esign-rest-api/reference/templates/templates/create/#template-email-subject-merge-fields).\n\n**Note:** The subject line is limited to 100 characters, including any merged fields.It is not truncated. It is an error if the text is longer than 100 characters.\n",
                        "type": "string"
                    },
                    "enableWetSign": {
                        "description": "When **true,** the signer is allowed to print the document and sign it on paper.",
                        "type": "string"
                    },
                    "enforceSignerVisibility": {
                        "description": "When **true,** signers can only view the documents on which they have tabs. Recipients that have an administrative role (Agent, Editor, or Intermediaries) or informational role (Certified Deliveries or Carbon Copies) can always see all of the documents in an envelope, unless they are specifically excluded by using this setting when an envelope is sent. Documents that do not have tabs are always visible to all recipients, unless they are specifically excluded by using this setting when an envelope is sent.\n\n**Note:** To use this functionality, [Document Visibility][docviz] must be enabled for the account by making the account setting `allowDocumentVisibility` **true.**\n\n[docviz]: /docs/esign-rest-api/reference/envelopes/envelopedocumentvisibility/",
                        "type": "string"
                    },
                    "envelopeAttachments": {
                        "description": "An array of attachment objects that provide information about the attachments that are associated with the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attachment"
                        }
                    },
                    "envelopeCustomMetadata": {
                        "$ref": "#/components/schemas/envelopeCustomMetadata"
                    },
                    "envelopeDocuments": {
                        "description": "An array containing information about the documents that are included in the envelope.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeDocument"
                        }
                    },
                    "envelopeId": {
                        "description": "The envelope ID of the envelope status that failed to post.",
                        "type": "string"
                    },
                    "envelopeIdStamping": {
                        "description": "When **true,** [Envelope ID Stamping](https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=tfm1578456367923.html) is enabled.\nAfter a document or attachment is stamped with an Envelope ID,\nthe ID is seen by all recipients\nand becomes a permanent part of the document\nand cannot be removed.",
                        "type": "string"
                    },
                    "envelopeLocation": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "envelopeMetadata": {
                        "$ref": "#/components/schemas/envelopeMetadata"
                    },
                    "envelopeUri": {
                        "description": "The URI for retrieving the envelope or envelopes.",
                        "type": "string"
                    },
                    "expireAfter": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "expireDateTime": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "expireEnabled": {
                        "description": "Not used. Use the\n[`expirations`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification_expirations)\nproperty in the [`notification`](/docs/esign-rest-api/reference/envelopes/envelopes/create/#definition__envelopedefinition_notification) object instead.",
                        "type": "string"
                    },
                    "externalEnvelopeId": {
                        "description": "May contain an external identifier for the envelope.",
                        "type": "string"
                    },
                    "favoritedByMe": {
                        "description": "",
                        "type": "string"
                    },
                    "folderId": {
                        "description": "The unique identifier for the folder that the template belongs to.",
                        "type": "string"
                    },
                    "folderIds": {
                        "description": "An array of folder IDs that the template is in.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "folderName": {
                        "description": "The name of the folder the template belongs to.",
                        "type": "string"
                    },
                    "folders": {
                        "description": "A list of folder objects.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/folder"
                        }
                    },
                    "hasComments": {
                        "description": "When **true,** indicates that users have added comments to the envelope.",
                        "type": "string"
                    },
                    "hasFormDataChanged": {
                        "description": "Specifies if the `EnvelopeFormData` associated with any forms in the template has changed.",
                        "type": "string"
                    },
                    "hasWavFile": {
                        "description": "When **true,** indicates that the template includes a .wav file.",
                        "type": "string"
                    },
                    "holder": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "initialSentDateTime": {
                        "description": "The date and time the envelope that used the template was initially sent.",
                        "type": "string"
                    },
                    "is21CFRPart11": {
                        "description": "When **true,** indicates compliance with United States Food and Drug Administration (FDA) regulations on electronic records and electronic signatures (ERES).",
                        "type": "string"
                    },
                    "isAceGenTemplate": {
                        "description": "",
                        "type": "string"
                    },
                    "isDocGenTemplate": {
                        "description": "",
                        "type": "string"
                    },
                    "isDynamicEnvelope": {
                        "description": "When **true,** indicates that the envelope is a dynamic envelope.",
                        "type": "string"
                    },
                    "isSignatureProviderEnvelope": {
                        "description": "When **true,** indicates that the envelope is a signature-provided envelope.",
                        "type": "string"
                    },
                    "lastModified": {
                        "description": "The UTC date and time that the comment was last updated.\n\n**Note:** This can only be done by the creator.",
                        "type": "string"
                    },
                    "lastModifiedBy": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "lastModifiedDateTime": {
                        "description": "The date and time the template was last modified.",
                        "type": "string"
                    },
                    "lastUsed": {
                        "description": "The date and time the template was last used.",
                        "type": "string"
                    },
                    "location": {
                        "description": "Reserved for DocuSign.",
                        "type": "string"
                    },
                    "lockInformation": {
                        "$ref": "#/components/schemas/EnvelopeLocks"
                    },
                    "messageLock": {
                        "description": "When **true,** prevents senders from changing the contents of `emailBlurb` and `emailSubject` properties for the envelope. \n\nAdditionally, this prevents users from making changes to the contents of `emailBlurb` and `emailSubject` properties when correcting envelopes. \n\nHowever, if the `messageLock` node is set to **true** and the `emailSubject` property is empty, senders and correctors are able to add a subject to the envelope.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the template.",
                        "type": "string"
                    },
                    "newPassword": {
                        "description": "The user's new password.",
                        "type": "string"
                    },
                    "notification": {
                        "$ref": "#/components/schemas/notification"
                    },
                    "notificationUri": {
                        "description": "The URI for retrieving notifications.",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "pageCount": {
                        "description": "An integer value specifying the number of document pages in the template. ",
                        "type": "string"
                    },
                    "password": {
                        "description": "The password for editing the template.",
                        "type": "string"
                    },
                    "passwordProtected": {
                        "description": "When **true,** a password is required to edit the template.",
                        "type": "string"
                    },
                    "powerForm": {
                        "$ref": "#/components/schemas/powerForm"
                    },
                    "powerForms": {
                        "description": "An array of PowerForm objects that contain information about any PowerForms that are included in the template.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/powerForm"
                        }
                    },
                    "purgeCompletedDate": {
                        "description": "The date that a purge was completed.",
                        "type": "string"
                    },
                    "purgeRequestDate": {
                        "description": "The date that a purge was requested.",
                        "type": "string"
                    },
                    "purgeState": {
                        "description": "Shows the current purge state for the envelope. Valid values:\n\n- `unpurged`: There has been no successful request to purge documents.\n- `documents_queued`: The envelope documents have been added to the purge queue, but have not been purged.\n- `documents_dequeued`: The envelope documents have been taken out of the purge queue.\n- `documents_purged`: The envelope documents have been successfully purged.\n- `documents_and_metadata_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged.\n- `documents_and_metadata_purged`: The envelope documents and metadata have been successfully purged.\n- `documents_and_metadata_and_redact_queued`: The envelope documents and metadata have been added to the purge queue, but have not yet been purged, nor has personal information been redacted.\n- `documents_and_metadata_and_redact_purged`: The envelope documents and metadata have been successfully purged, and personal information has been redacted.\n\n**Related topics**\n\n- [Purging documents (eSingature Concepts)](/docs/esign-rest-api/esign101/concepts/documents/purging/)\n- [Purging documents in an envelope (blog post)](https://www.docusign.com/blog/developers/purging-documents-envelope)\n\n",
                        "type": "string"
                    },
                    "recipients": {
                        "$ref": "#/components/schemas/EnvelopeRecipients"
                    },
                    "recipientsLock": {
                        "description": "When **true,** prevents senders from changing, correcting, or deleting the recipient information for the envelope.",
                        "type": "string"
                    },
                    "recipientsUri": {
                        "description": "Contains a URI for an endpoint that you can use to retrieve the recipients.",
                        "type": "string"
                    },
                    "sender": {
                        "$ref": "#/components/schemas/userInfo"
                    },
                    "sentDateTime": {
                        "description": "The UTC DateTime when the envelope was sent. This property is read-only.",
                        "type": "string"
                    },
                    "shared": {
                        "description": "When **true,** indicates the template is shared with the **Everyone** group,\nand is shared with all users on the account.\n\nWhen **false,** the template is shared only with the groups you specify.",
                        "type": "string"
                    },
                    "signerCanSignOnMobile": {
                        "description": "When **true,** recipients can sign on a mobile device.\n\n**Note:** Only Admin users can change this setting.\n",
                        "type": "string"
                    },
                    "signingLocation": {
                        "description": "Specifies the physical location where the signing takes place. It can have two enumeration values; `inPerson` and `online`. The default value is `online`.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Indicates the envelope status. Valid values are:\n\n* `completed`: The recipients have finished working with the envelope: the documents are signed and all required tabs are filled in.\n* `created`: The envelope is created as a draft. It can be modified and sent later.\n* `declined`: The envelope has been declined by the recipients.\n* `delivered`: The envelope has been delivered to the recipients.\n* `sent`: The envelope will be sent to the recipients after the envelope is created.\n* `signed`: The envelope has been signed by the recipients.\n* `voided`: The envelope is no longer valid and recipients cannot access or sign the envelope.\n",
                        "type": "string"
                    },
                    "statusChangedDateTime": {
                        "description": "The data and time that the status changed.",
                        "type": "string"
                    },
                    "statusDateTime": {
                        "description": "The DateTime that the envelope changed status (i.e. was created or sent.)",
                        "type": "string"
                    },
                    "templateId": {
                        "description": "The unique identifier of the template. If this is not provided, DocuSign will generate a value. ",
                        "type": "string"
                    },
                    "templatesUri": {
                        "description": "The URI for retrieving the templates.",
                        "type": "string"
                    },
                    "transactionId": {
                        "description": " Used to identify an envelope. The ID is a sender-generated value and is valid in the DocuSign system for 7 days. It is recommended that a transaction ID is used for offline signing to ensure that an envelope is not sent multiple times. The `transactionId` property can be used determine an envelope's status (i.e. was it created or not) in cases where the internet connection was lost before the envelope status was returned.",
                        "type": "string"
                    },
                    "uri": {
                        "description": "Contains a URI that you can use to retreve the template.",
                        "type": "string"
                    },
                    "useDisclosure": {
                        "description": "When **true,** the disclosure is shown to recipients in accordance with the account's Electronic Record and Signature Disclosure frequency setting. When **false,** the Electronic Record and Signature Disclosure is not shown to any envelope recipients. \n\nIf the `useDisclosure` property is not set, then the account's normal disclosure setting is used and the value of the `useDisclosure` property is not returned in responses when getting envelope information.",
                        "type": "string"
                    },
                    "voidedDateTime": {
                        "description": "The date and time the envelope or template was voided.",
                        "type": "string"
                    },
                    "voidedReason": {
                        "description": "The reason the envelope or template was voided.\n\n**Note:** The string is truncated to the first 200 characters.\n",
                        "type": "string"
                    },
                    "workflow": {
                        "$ref": "#/components/schemas/workflow"
                    }
                },
                "x-ds-definition-name": "envelopeTemplate",
                "description": "Template management",
                "x-ds-category": "Templates",
                "x-ds-order": "10",
                "x-ms-summary": "Template management"
            },
            "TemplateRecipientTabs": {
                "type": "object",
                "properties": {
                    "approveTabs": {
                        "description": "A list of\n[Approve tabs][approve].\n\nAn Approve tab enables\nthe recipient to approve documents without\nplacing a signature or initials on the document. If the\nrecipient clicks the tab during the signing process, the\nrecipient is considered to have signed the document. No\ninformation is shown on the document of the approval, but it\nis recorded as a signature in the envelope history.\nThe value of an approve tab can't be set.\n\n[approve]:          /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/approve"
                        }
                    },
                    "checkboxTabs": {
                        "description": "A list of\n[Checkbox tabs][checkbox].\n\n\nA Checkbox tab enables the recipient to select a yes/no (on/off) option. This value can be set.\n\n\n[checkbox]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/checkbox"
                        }
                    },
                    "commentThreadTabs": {
                        "description": "An array of tabs that represents a collection of comments in a comment thread. For example, if a recipient has questions about the content of a document, they can add a comment to the document and control who else can see the comment. This value can't be set.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commentThread"
                        }
                    },
                    "commissionCountyTabs": {
                        "description": "A list of\n[Commission County tabs][cc].\n\n\nA Commission County tab displays the county of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionCounty"
                        }
                    },
                    "commissionExpirationTabs": {
                        "description": "A list of\n[Commission Expiration tabs][tabref].\n\n\nA Commission Expiration tab displays the expiration date of a notary's commission. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionExpiration"
                        }
                    },
                    "commissionNumberTabs": {
                        "description": "A list of\n[Commission Number tabs][tabref].\n\n\nA Commission Number tab displays a notary's commission number. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[tabref]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionNumber"
                        }
                    },
                    "commissionStateTabs": {
                        "description": "A list of\n[Commission State tabs][cc].\n\n\nA Commission County tab displays the state in which a notary's commission was granted. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary]. The tab's value can be edited by the recipient.\n\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/commissionState"
                        }
                    },
                    "companyTabs": {
                        "description": "A list of\n[Company tabs][company].\n\nA Company tab displays a field for the name of the recipient's company. This value can't be set.\n\n[company]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_company\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/company"
                        }
                    },
                    "dateSignedTabs": {
                        "description": "A list of\n[Date Signed tabs][dateSigned].\n\n\nA Date Signed tab displays the date that the recipient signed the document. This value can't be set.\n\n[dateSigned]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/dateSigned"
                        }
                    },
                    "dateTabs": {
                        "description": "A list of\n[Date tabs][date].\n\nA Date tab enables the recipient to enter a date. This value can't be set. The tooltip for this tab recommends the date format MM/DD/YYYY, but several other date formats are also accepted. The system retains the format that the recipient enters.\n\n**Note:** If you need to enforce a specific date format, DocuSign recommends that you use a Text tab with a validation pattern and validation message.\n\n\n[date]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/date"
                        }
                    },
                    "declineTabs": {
                        "description": "A list of\n[Decline tabs][decline].\n\nA Decline tab enables the recipient to decline the envelope. If the recipient clicks the tab during the signing process, the envelope is voided. The value of this tab can't be set.\n\n\n[decline]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/decline"
                        }
                    },
                    "drawTabs": {
                        "description": "A list of Draw Tabs.\n\nA Draw Tab allows the recipient to add a free-form drawing to the document.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/draw"
                        }
                    },
                    "emailAddressTabs": {
                        "description": "A list of\n[Email Address tabs][emailAddress].\n\nAn Email Address tab displays the recipient's email as entered in the recipient information. This value can't be set.\n\n\n[emailAddress]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/emailAddress"
                        }
                    },
                    "emailTabs": {
                        "description": "A list of\n[Email tabs][email].\n\nAn Email tab enables the recipient to enter an email address.\nThis is a one-line field that checks that a valid email\naddress is entered. It uses the same parameters as a Text\ntab, with the validation message and pattern set for email\ninformation. This value can be set.\n\nWhen getting information that includes\nthis tab type, the original value of the tab when the\nassociated envelope was sent is included in the response.\n\n[email]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/email"
                        }
                    },
                    "envelopeIdTabs": {
                        "description": "A list of\n[Envelope ID tabs][envelopeId].\n\nAn Envelope ID tab  displays the envelope ID. Recipients cannot enter or change the information in this tab. This value can't be set.\n\n\n[envelopeId]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#response201_envelopeid\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/envelopeId"
                        }
                    },
                    "firstNameTabs": {
                        "description": "A list of\n[First Name tabs][firstName].\n\nA First Name tab displays the recipient's first name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[firstName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/create/#parameters_firstname\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/firstName"
                        }
                    },
                    "formulaTabs": {
                        "description": "A list of [Formula tabs][formulaTab].\n\nThe value of a Formula tab is calculated from the values of other number or date tabs in the document. When the recipient completes the underlying fields, the Formula tab calculates and displays the result. This value can be set.\n\nThe `formula` property of the tab contains the references to the underlying tabs. To learn more about formulas, see [Calculated Fields][calculatedfields].\n\nIf a Formula tab contains a `paymentDetails` property, the tab is considered a payment item. To learn more about payments, see [Requesting Payments Along with Signatures][paymentguide].\n\n[calculatedfields]: https://support.docusign.com/s/document-item?bundleId=gbo1643332197980&topicId=crs1578456361259.html\n[paymentguide]:     https://support.docusign.com/s/document-item?bundleId=juu1573854950452&topicId=fyw1573854935374.html\n[formulaTab]:       /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/formulaTab"
                        }
                    },
                    "fullNameTabs": {
                        "description": "A list of\n[Full Name tabs][fullName].\n\nA Full Name tab displays the recipient's full name. This value can't be set.\n\n\n[fullName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/fullName"
                        }
                    },
                    "initialHereTabs": {
                        "description": "A list of\n[Initial Here tabs][initialHere].\n\nThis type of tab enables the recipient to initial the document. May be optional. This value can't be set.\n\n[initialHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/initialHere"
                        }
                    },
                    "lastNameTabs": {
                        "description": "A list of\n[Last Name tabs][lastName].\n\nA Last Name tab displays the recipient's last name. The system automatically populates this field by splitting the name in the recipient information on spaces. This value can't be set.\n\n\n[lastName]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/lastName"
                        }
                    },
                    "listTabs": {
                        "description": "An array of List tabs.\n\nA List tab enables the recipient to choose from a list of options. You specify the options in the `listItems` property. This value can't be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/list"
                        }
                    },
                    "notarizeTabs": {
                        "description": "A list of  [Notarize tabs][notarize].\n\nA Notarize tab alerts notary recipients that they must take action on the page. This value can be set.\n\n**Note:** Only one notarize tab can appear on a page.\n\n[notarize]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarize"
                        }
                    },
                    "notarySealTabs": {
                        "description": "A list of Notary Seal tabs.\n\nA Notary Seal tab enables the recipient to notarize a document. This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/notarySeal"
                        }
                    },
                    "noteTabs": {
                        "description": "A list of\n[Note tabs][note].\n\nA Note tab displays additional information to the recipient in the form of a note. This value can be set.\n\n[note]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/note"
                        }
                    },
                    "numberTabs": {
                        "description": "A list of Number tabs.\n\nNumber tabs validate that the entered value is a number.\nThey do not support advanced validation or display options.\n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about number tabs\nsee [Features of numberTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numbertabs).\n\n[number]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/number"
                        }
                    },
                    "numericalTabs": {
                        "description": "A list of numerical tabs.\n\nNumerical  tabs provide robust display and validation features, including formatting for different regions and currencies, and minimum and maximum value validation.                                                                                                                                                                                                                                                                                                                                                                                                                                                             \n\nTo learn more about the different forms of number tabs,\nsee [Number fields](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/) in the Concepts guide.\nFor specific information about numerical tabs\nsee [Features of numericalTabs](/docs/esign-rest-api/esign101/concepts/tabs/number-fields/#features-of-numericaltabs).",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/numerical"
                        }
                    },
                    "phoneNumberTabs": {
                        "description": "A list of\n[Phone Number tabs][cc].\n\n\nA Phone Number tab enables a recipient to enter a phone number.\n\n**Note:** This tab can only be assigned to a remote notary recipient using [DocuSign Notary][notary].\n\n[cc]:  /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n[notary]: /docs/notary-api/",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/phoneNumber"
                        }
                    },
                    "polyLineOverlayTabs": {
                        "description": "This type of tab enables the recipient to strike through document text. This value can't be set
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/polyLineOverlay"
                        }
                    },
                    "prefillTabs": {
                        "$ref": "#/components/schemas/prefillTabs"
                    },
                    "radioGroupTabs": {
                        "description": "A list of [Radio Group tabs][radioGroup].\n\nA Radio Group tab places a group of radio buttons on a document. The `radios` property is used to add and place the radio\nbuttons associated with the group. Only one radio button can be selected in a group. This value can be set.\n\n\n[radioGroup]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/radioGroup"
                        }
                    },
                    "signerAttachmentTabs": {
                        "description": "A list of\n[Signer Attachment tabs][signerAttachment].\n\nThis type of tab enables the recipient to attach supporting documents to an envelope. This value can't be set.\n\n\n[signerAttachment]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signerAttachment"
                        }
                    },
                    "signHereTabs": {
                        "description": "A list of\n[Sign Here tabs][signHere].\n\nThis type of tab enables the recipient to sign a document. May be optional. This value can't be set.\n\n[signHere]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/signHere"
                        }
                    },
                    "smartSectionTabs": {
                        "description": "A list of [Smart Section](https://www.docusign.com/blog/dsdev-deep-dive-responsive-smart-sections) tabs.\n\nSmart Section tabs enhance responsive signing on mobile devices by enabling collapsible sections, page breaks, custom formatting options, and other advanced functionality.\n\n**Note:** Smart Sections are a premium feature. Responsive signing must also be enabled for your account.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/smartSection"
                        }
                    },
                    "ssnTabs": {
                        "description": "A list of\n[SSN tabs][ssn].\n\nAn SSN tab contains a one-line field that enables the recipient to enter a Social Security Number (SSN) with or without\ndashes. It uses the same parameters as a Text tab, with the validation message and pattern set for SSN information. This value can be set.\n\n\n[ssn]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ssn"
                        }
                    },
                    "tabGroups": {
                        "description": "An array of `tabGroup` items.\n\nTo associate a tab with a tab group, add the tab group's `groupLabel` to the tab's `tabGroupLabels` array.\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/tabGroup"
                        }
                    },
                    "textTabs": {
                        "description": "A list of\nText tabs.\n\nA text tab enables the recipient to enter free text. This value can be set.\n\nFind descriptions of all tab types in\nthe [EnvelopeRecipientTabs Resource][ert].\n\n[ert]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/text"
                        }
                    },
                    "titleTabs": {
                        "description": "A list of\n[Title tabs][title].\n\nA Title tab displays the recipient's title.  This value can't be set.\n\n\n[title]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/title"
                        }
                    },
                    "viewTabs": {
                        "description": "A list of\n[View tabs][view].\n\nA View tab is used with an Approve tab to handle supplemental documents.  This value can be set.\n\n[view]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/view"
                        }
                    },
                    "zipTabs": {
                        "description": "A list of\n[Zip tabs][zip].\n\nA Zip tab enables the recipient to enter a ZIP code. The ZIP code can be five digits or nine digits ( in ZIP+4 format), and can be entered with or without dashes. It uses the same parameters as a Text tab, with the validation message and pattern set for ZIP code information.  This value can be set.\n\n\n[zip]: /docs/esign-rest-api/reference/envelopes/enveloperecipienttabs/\n",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/zip"
                        }
                    }
                },
                "description": "Template tabs",
                "x-ds-definition-name": "tabs",
                "x-ds-category": "Templates",
                "x-ds-order": "50",
                "x-ms-summary": "Template tabs"
            },
            "TemplateViews": {
                "type": "object",
                "properties": {
                    "url": {
                        "description": "The URL that you navigate to in order to start the view.",
                        "type": "string"
                    }
                },
                "x-ds-definition-name": "viewUrl",
                "description": "A TemplateView contains a URL that you can embed in your application to generate a template view that uses the DocuSign user interface (UI).",
                "x-ds-category": "Templates",
                "x-ds-order": "55",
                "x-ms-summary": "A TemplateView contains a URL that you can embed in your application to generate a template view that uses the DocuSign user interface (UI)."
            }
        }
    }
}